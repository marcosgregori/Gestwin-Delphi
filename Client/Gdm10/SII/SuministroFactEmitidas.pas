// ************************************************************************ //
// The types declared in this file were generated from data read from the
// WSDL File described below:
// WSDL     : F:\Desktop\Source\Documentacion\SII\25.11.2020\SuministroFactEmitidas.wsdl
//  >Import : F:\Desktop\Source\Documentacion\SII\25.11.2020\SuministroFactEmitidas.wsdl>0
//  >Import : F:\Desktop\Source\Documentacion\SII\25.11.2020\SuministroInformacion.xsd
//  >Import : F:\Desktop\Source\Documentacion\SII\25.11.2020\SuministroLR.xsd
//  >Import : F:\Desktop\Source\Documentacion\SII\25.11.2020\ConsultaLR.xsd
//  >Import : F:\Desktop\Source\Documentacion\SII\25.11.2020\RespuestaConsultaLR.xsd
//  >Import : F:\Desktop\Source\Documentacion\SII\25.11.2020\RespuestaSuministro.xsd
// Encoding : UTF-8
// Codegen  : [wfOutputLiteralTypes+, wfMapArraysToClasses+, wfGenTrueGUIDs+, wfUseSettersAndGetters+]
// Version  : 1.0
// (30.11.2020 12:24:02 - - $Rev: 101104 $)
// ************************************************************************ //

unit SuministroFactEmitidas;

interface

uses Soap.InvokeRegistry, Soap.SOAPHTTPClient, System.Types, Soap.XSBuiltIns;

const
  IS_OPTN = $0001;
  IS_UNBD = $0002;
  IS_REF  = $0080;


type

  // ************************************************************************ //
  // The following types, referred to in the WSDL document are not being represented
  // in this file. They are either aliases[@] of other types represented or were referred
  // to but never[!] declared in the document. The types from the latter category
  // typically map to predefined/known XML or Embarcadero types; however, they could also 
  // indicate incorrect WSDL documents that failed to declare or import a schema type.
  // ************************************************************************ //
  // !:string          - "http://www.w3.org/2001/XMLSchema"[Gbl]
  // !:double          - "http://www.w3.org/2001/XMLSchema"[Gbl]
  // !:integer         - "http://www.w3.org/2001/XMLSchema"[Gbl]

  LRFiltroInmueblesAdicionalesType = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaPagosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaInmueblesAdicionalesType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaCobrosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaVentaBienesConsignaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaOperacionesSegurosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaAgenciasViajesType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  TipoDesglose         = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  TipoDesglose2        = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  RespuestaDetOperIntracomunitariaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  FacturasAgrupadas    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  FacturasRectificadas = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  DatosInmueble        = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  DatosInmueble2       = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  RespuestaVentaBienesConsignaType = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  LRVentaBienesConsignaType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  InversionSujetoPasivo = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  DesgloseIVA          = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  TipoSinDesgloseType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  TipoConDesgloseType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DesgloseFacturaRecibidasType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DatosInmueble3       = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  TipoDesglose3        = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  DesgloseIVA2         = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  Exenta               = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  Exenta2              = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  NoExenta             = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  NoExenta2            = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  DesgloseIVA3         = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  SujetaType           = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  SujetaPrestacionType = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  TipoSinDesglosePrestacionType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DatosInmuebleType    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  RespuestaComunBajaType = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaVentaBienesConsignaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaVentaBienesConsigna = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaIMetalicoType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaCobrosMetalico = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaFRecibidasType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaFacturasRecibidas = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaOComunitariasType = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaDetOperacionesIntracomunitarias = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaBienesInversionType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaBienesInversion = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaOperacionesSegurosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaOperacionesSeguros = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaAgenciasViajesType = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBajaAgenciasViajes = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBajaFEmitidasType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Lit][GblCplx] }
  RespuestaLRBajaFacturasEmitidas = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Lit][GblElm] }
  RespuestaLRBajaFRecibidasPagosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaComunAltaType = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLROComunitariasType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRDetOperacionesIntracomunitarias = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRAgenciasViajesType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRAgenciasViajes = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRIMetalicoType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRCobrosMetalico = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRBienesInversionType = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRBienesInversion = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRFRecibidasType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRFacturasRecibidas = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRVentaBienesConsignaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLRVentaBienesConsigna = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RespuestaLRFEmitidasType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Lit][GblCplx] }
  RespuestaLRFacturasEmitidas = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Lit][GblElm] }
  RespuestaLROperacionesSegurosType = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaLROperacionesSeguros = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblElm] }
  RegistroSii          = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDEmisorFactura      = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  DatosPresentacion2Type = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  RegistroSiiImputacion = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  PersonaFisicaJuridicaUnicaESType = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ContraparteConsultaType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  PersonaFisicaJuridicaType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DepositoType         = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDEmisorFactura2     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDEmisorFactura3     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDEmisorFactura4     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDEmisorFactura5     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDEmisorFactura6     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  PeriodoLiquidacion   = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  PeriodoImputacion    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  PeriodoLiquidacion2  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion3  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion4  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion5  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion6  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion7  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion8  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion9  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[Cplx] }
  PeriodoLiquidacion10 = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  PeriodoLiquidacion11 = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Cplx] }
  ConsultaInformacion  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  RespuestaConsultaFacturaCobrosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRVentaBVType = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRVentaBienesConsignaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRVentaBienesConsigna = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaInmueblesType = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaInmueblesAdicionalesType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaInmueblesAdicionales = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaFacturaPagosType = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  SuministroInformacion = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  SuministroInformacionBaja = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  PersonaFisicaJuridicaESType = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DatosPresentacionType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ConsultaInformacionCliente = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  CabeceraConsultaSiiCliente = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  CabeceraSii          = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  CabeceraConsultaSii  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  CabeceraSiiBaja      = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDEmisorFactura7     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDEmisorFactura8     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  FacturasAgrupadas2   = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  FacturasRectificadas2 = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  RangoFechaPresentacionType = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  RangoFechaType       = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DesgloseRectificacionType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  NoSujetaType         = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DetalleIVAEmitidaPrestacionType = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DetalleIVARecibidaType = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DetalleExentaType    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DetalleIVAEmitidaType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DetalleIVARecibida2Type = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  InfoExpedicionRecepcionType = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DestinoFinalExpedRecepType = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  DatosPagoCobroType   = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  RespuestaCobrosMetalicoType = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  IdRegistroDeclaradoType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IdRegistroExpInicialType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ClavePaginacion      = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Cplx] }
  LRBajaVentaBienesConsignaType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  BienDeInversionType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  FacturaType          = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  FacturaRecibidaType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  FacturaExpedidaType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  VentaBienesConsignaType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  OperacionIntracomunitariaType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  FacturaRespuestaType = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  FacturaRespuestaInformadaClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  FacturaRespuestaInformadaProveedorType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  FacturaRespuestaRecibidaType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  FacturaRespuestaExpedidaType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  IDEmisorFactura9     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDEmisorFactura10    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Cplx] }
  IDOtroType           = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ClavePaginacionClienteType = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaConsulta2Type = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaExpedidaBCType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaARType      = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaExpedidaType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaComunitariaType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaRecibidaNombreBCType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaRecibidaType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ClavePaginacionBienType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ClavePaginacionProveedorType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaConsulta1Type = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  IDFacturaImputacionType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  ConsultaInmueblesAdicionalesType = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRConsultaVentaBienesConsignaType = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRConsultaLROperacionesSegurosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaCobrosType   = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaPagosType    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroPagosType    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaCobrosType = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaCobros = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaPagosType = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaPagos = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  LRFiltroCobrosType   = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRConsultaRecibidasType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaLRFacturasRecibidas = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  LRConsultaEmitidasType = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Lit][GblCplx] }
  ConsultaLRFacturasEmitidas = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Lit][GblElm] }
  ClavePaginacion2     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Cplx] }
  ClavePaginacion3     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Cplx] }
  LRConsultaDetOperIntracomunitariasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaLRDetOperIntracomunitarias = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  LRConsultaCobrosMetalicoType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaLRCobrosMetalico = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  LRConsultaAgenciasViajesType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaLRFactInformadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Lit][GblCplx] }
  ConsultaLRFactInformadasCliente = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Lit][GblElm] }
  ConsultaLRFactInformadasAgrupadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Lit][GblCplx] }
  ConsultaLRFactInformadasAgrupadasCliente = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Lit][GblElm] }
  LRConsultaBienesInversionType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ConsultaLRBienesInversion = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  RespuestaConsultaLRFacturasAgrupadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRFacturasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaFactInformadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRFactInformadasAgrupadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Lit][GblCplx] }
  RespuestaConsultaLRFactInformadasAgrupadasCliente = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Lit][GblElm] }
  RegistroRespuestaConsultaCobrosMetalicoType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaBienesType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaDetOperIntracomunitariasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  ConsultaPagos        = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  ConsultaLROperacionesSeguros = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  ConsultaLRConsultaVentaBienesConsigna = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  ConsultaLRAgenciasViajes = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  ConsultaCobros       = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  ConsultaInmueblesAdicionales = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblElm] }
  RegistroRespuestaConsultaRecibidasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRFactInformadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Lit][GblCplx] }
  RespuestaConsultaLRFactInformadasCliente = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Lit][GblElm] }
  RespuestaConsultaLRFacturasType = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRFacturasEmitidasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Lit][GblCplx] }
  RespuestaConsultaLRFacturasEmitidas = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[Lit][GblElm] }
  RespuestaConsultaLRFacturasRecibidasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRFacturasRecibidas = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaLRDetOperIntracomunitariasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRDetOperIntracomunitarias = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaLRAgenciasViajesType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRAgenciasViajes = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaLRCobrosMetalicoType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRCobrosMetalico = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaLRBienesInversionType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLRBienesInversion = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RespuestaConsultaLROperacionesSegurosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaConsultaLROperacionesSeguros = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblElm] }
  RegistroRespuestaConsultaEmitidasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  LRBajaAgenciasViajesType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRCobrosMetalicoType = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRBajaCobrosMetalicoType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRBienesInversionType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRBajaBienesInversionType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRAgenciasViajesType = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRBajaOperacionIntracomunitariaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  SuministroLRFacturasEmitidas = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[Lit][GblElm] }
  BajaLRFacturasEmitidas = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[Lit][GblElm] }
  LROperacionIntracomunitariaType = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRFiltroCobrosMetalicoType = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroAgenciasViajesType = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroVentaBienesConsignaType = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  EstadoFacturaImputacionType = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroRespuestaConsultaFactInformadasAgrupadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  DatosDescuadreContraparteType = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  LRBajaExpedidasType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRFacturasRecibidasType = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRBajaRecibidasType  = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRBajaRegistroLROperacionesSegurosType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LROperacionesSegurosType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  RespuestaOperacionesSegurosType = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RegistroDuplicadoType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblCplx] }
  RespuestaComunitariaBajaType = class;         { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaVentaBienesConsignaBajaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaRecibidaBajaType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaExpedidaBajaType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaBienBajaType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaOperacionesSegurosBajaType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaAgenciasViajesBajaType = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaMetalicoBajaType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  EstadoFactura2Type   = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  EstadoFacturaType    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblCplx] }
  RespuestaComunitariaType = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaBienType    = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaMetalicoType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaRecibidaType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaExpedidaType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaRecibidaPagoType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaVentaBienesConsignaType2 = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaOperacionesSegurosType2 = class;     { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  RespuestaAgenciasViajesType = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblCplx] }
  LRfacturasEmitidasType = class;               { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblCplx] }
  LRFiltroFactInformadasClienteType = class;    { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroFactInformadasAgrupadasClienteType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroFactInformadasProveedorType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  SuministroLRVentaBienesConsigna = class;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  BajaLRVentaBienesConsigna = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  LRFiltroEmitidasType = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroDetOperIntracomunitariasType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroOperacionesSegurosType = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  ClavePaginacion4     = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[Cplx] }
  LRFiltroFactInformadasAgrupadasProveedorType = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroRecibidasType = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  LRFiltroBienInversionType = class;            { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd"[GblCplx] }
  BajaLRBienesInversion = class;                { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  SuministroLRAgenciasViajes = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  BajaLRAgenciasViajes = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  SuministroLRFacturasRecibidas = class;        { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  BajaLRFacturasRecibidas = class;              { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  SuministroLRBienesInversion = class;          { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  BajaLROperacionesSeguros = class;             { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  SuministroLRDetOperacionIntracomunitaria = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  BajaLRDetOperacionIntracomunitaria = class;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  SuministroLRCobrosMetalico = class;           { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  BajaLRCobrosMetalico = class;                 { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }
  SuministroLROperacionesSeguros = class;       { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblElm] }

  {$SCOPEDENUMS ON}
  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblSmpl] }
  EstadoEnvioType = (Correcto, ParcialmenteCorrecto, Incorrecto);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblSmpl] }
  EstadoRegistroSIIType = (Correcta, AceptadaConErrores, Anulada);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblSmpl] }
  ResultadoConsultaType = (ConDatos, SinDatos);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblSmpl] }
  IndicadorPaginacionType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblSmpl] }
  FacturaARType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Smpl] }
  ClaveDeclarado = (D, R);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  CountryMiembroType = (
      DE, 
      AT, 
      BE, 
      BG, 
      CZ, 
      CY, 
      HR, 
      DK, 
      SK, 
      SI, 
      ES, 
      EE, 
      FI, 
      FR, 
      GR, 
      HU, 
      IE, 
      IT, 
      LV, 
      LT, 
      LU, 
      MT, 
      NL, 
      PL, 
      PT, 
      GB, 
      RO, 
      SE
  );

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Smpl] }
  TipoOperacion = (A, B);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TipoOperacionType = (
      _01, 
      _02, 
      _03, 
      _04, 
      _05, 
      _06, 
      _07, 
      _08, 
      _09, 
      _10, 
      _11, 
      _12
  );

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TipoClaveDeclaranteType = (V, A);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  MedioPagoType = (_01, _02, _03, _04, _05);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblSmpl] }
  EstadoRegistroType = (Correcto, AceptadoConErrores, Incorrecto);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  CausaExencionType = (E1, E2, E3, E4, E5, E6);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  DeducirEnPeriodoPosteriorType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  SimplificadaCualificadaType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  MacrodatoType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  CompletaSinDestinatarioType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  EmitidaPorTercerosType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  VariosDestinatariosType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  CuponType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TipoOperacionSujetaNoExentaType = (S1, S2, S3);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  EstadoRegistroSIIType2 = (Correcta, AceptadaConErrores, Anulada);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  CountryType2 = (
      AF, 
      AL, 
      DE, 
      AD, 
      AO, 
      AI, 
      AQ, 
      AG, 
      SA, 
      DZ, 
      AR, 
      AM, 
      AW, 
      AU, 
      AT, 
      AZ, 
      BS, 
      BH, 
      BD, 
      BB, 
      BE, 
      BZ, 
      BJ, 
      BM, 
      BY, 
      BO, 
      BA, 
      BW, 
      BV, 
      BR, 
      BN, 
      BG, 
      BF, 
      BI, 
      BT, 
      CV, 
      KY, 
      KH, 
      CM, 
      CA, 
      CF, 
      CC, 
      CO, 
      KM, 
      CG, 
      CD, 
      CK, 
      KP, 
      KR, 
      CI, 
      CR, 
      HR, 
      CU, 
      TD, 
      CZ, 
      CL, 
      CN, 
      CY, 
      CW, 
      DK, 
      DM, 
      DO_, 
      EC, 
      EG, 
      AE, 
      ER, 
      SK, 
      SI, 
      ES, 
      US, 
      EE, 
      ET, 
      FO, 
      PH, 
      FI, 
      FJ, 
      FR, 
      GA, 
      GM, 
      GE, 
      GS, 
      GH, 
      GI, 
      GD, 
      GR, 
      GL, 
      GU, 
      GT, 
      GG, 
      GN, 
      GQ, 
      GW, 
      GY, 
      HT, 
      HM, 
      HN, 
      HK, 
      HU, 
      IN_, 
      ID, 
      IR, 
      IQ, 
      IE, 
      IM, 
      IS_, 
      IL, 
      IT, 
      JM, 
      JP, 
      JE, 
      JO, 
      KZ, 
      KE, 
      KG, 
      KI, 
      KW, 
      LA, 
      LS, 
      LV, 
      LB, 
      LR, 
      LY, 
      LI, 
      LT, 
      LU, 
      XG, 
      MO, 
      MK, 
      MG, 
      MY, 
      MW, 
      MV, 
      ML, 
      MT, 
      FK, 
      MP, 
      MA, 
      MH, 
      MU, 
      MR, 
      YT, 
      UM, 
      MX, 
      FM, 
      MD, 
      MC, 
      MN, 
      ME, 
      MS, 
      MZ, 
      MM, 
      NA, 
      NR, 
      CX, 
      NP, 
      NI, 
      NE, 
      NG, 
      NU, 
      NF, 
      NO, 
      NC, 
      NZ, 
      IO, 
      OM, 
      NL, 
      BQ, 
      PK, 
      PW, 
      PA, 
      PG, 
      PY, 
      PE, 
      PN, 
      PF, 
      PL, 
      PT, 
      PR, 
      QA, 
      GB, 
      RW, 
      RO, 
      RU, 
      SB, 
      SV, 
      WS, 
      AS_, 
      KN, 
      SM, 
      SX, 
      PM, 
      VC, 
      SH, 
      LC, 
      ST, 
      SN, 
      RS, 
      SC, 
      SL, 
      SG, 
      SY, 
      SO, 
      LK, 
      SZ, 
      ZA, 
      SD, 
      SS, 
      SE, 
      CH, 
      SR, 
      TH, 
      TW, 
      TZ, 
      TJ, 
      PS, 
      TF, 
      TL, 
      TG, 
      TK, 
      TO_, 
      TT, 
      TN, 
      TC, 
      TM, 
      TR, 
      TV, 
      UA, 
      UG, 
      UY, 
      UZ, 
      VU, 
      VA, 
      VE, 
      VN, 
      VG, 
      VI, 
      WF, 
      YE, 
      DJ, 
      ZM, 
      ZW, 
      QU, 
      XB, 
      XU, 
      XN
  );

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  BienInversionType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  SituacionInmuebleType = (_1, _2, _3, _4);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  PersonaFisicaJuridicaIDTypeType = (_02, _03, _04, _05, _06, _07);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  IdOperacionesTrascendenciaTributariaType = (
      _01, 
      _02, 
      _03, 
      _04, 
      _05, 
      _06, 
      _07, 
      _08, 
      _09, 
      _10, 
      _11, 
      _12, 
      _13, 
      _14, 
      _15, 
      _16
  );

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TipoPeriodoType = (
      _01, 
      _02, 
      _03, 
      _04, 
      _05, 
      _06, 
      _07, 
      _08, 
      _09, 
      _10, 
      _11, 
      _12, 
      _0A, 
      _1T, 
      _2T, 
      _3T, 
      _4T
  );

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  ClaveTipoComunicacionType = (A0, A1, A4, A5, A6);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  VersionSiiType = (_1_1);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  ClaveTipoFacturaType = (
      F1, 
      F2, 
      R1, 
      R2, 
      R3, 
      R4, 
      R5, 
      F3, 
      F4, 
      F5, 
      F6, 
      LC
  );

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  ClaveTipoRectificativaType = (S, I, _);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  RegPrevioGGEEoREDEMEoCompetenciaType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  FacturaModificadaType = (S, N);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  EstadoCuadreType = (_1, _2, _3, _4, _5);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  EstadoCuadreImputacionType = (_3, _4, _5);

  { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  ClaveOperacionType = (A, B);

  {$SCOPEDENUMS OFF}

  Array_Of_RespuestaAgenciasViajesType = array of RespuestaAgenciasViajesType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaVentaBienesConsignaType = array of RespuestaVentaBienesConsignaType2;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaOperacionesSegurosType = array of RespuestaOperacionesSegurosType2;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaRecibidaBajaType = array of RespuestaRecibidaBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : LRFiltroInmueblesAdicionalesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroInmueblesAdicionalesType = class(TRemotable)
  private
    FIDFactura: IDFacturaExpedidaBCType;
    function  GetIDFactura: IDFacturaExpedidaBCType;
    procedure SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
  public
    destructor Destroy; override;
  published
    property IDFactura: IDFacturaExpedidaBCType  read GetIDFactura write SetIDFactura;
  end;

  Array_Of_RespuestaExpedidaBajaType = array of RespuestaExpedidaBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaBienType = array of RespuestaBienType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaRecibidaPagoType = array of RespuestaRecibidaPagoType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaMetalicoType = array of RespuestaMetalicoType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaComunitariaType = array of RespuestaComunitariaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaRecibidaType = array of RespuestaRecibidaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaExpedidaType = array of RespuestaExpedidaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaPagosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaPagosType = class(TRemotable)
  private
    FDatosPago: DatosPagoCobroType;
    FDatosPresentacion: DatosPresentacion2Type;
    function  GetDatosPago: DatosPagoCobroType;
    procedure SetDatosPago(const ADatosPagoCobroType: DatosPagoCobroType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
  public
    destructor Destroy; override;
  published
    property DatosPago:         DatosPagoCobroType      read GetDatosPago write SetDatosPago;
    property DatosPresentacion: DatosPresentacion2Type  read GetDatosPresentacion write SetDatosPresentacion;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaInmueblesAdicionalesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaInmueblesAdicionalesType = class(TRemotable)
  private
    FDatosInmueblesAdicionales: DatosInmuebleType;
    FDatosPresentacion: DatosPresentacion2Type;
    function  GetDatosInmueblesAdicionales: DatosInmuebleType;
    procedure SetDatosInmueblesAdicionales(const ADatosInmuebleType: DatosInmuebleType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
  public
    destructor Destroy; override;
  published
    property DatosInmueblesAdicionales: DatosInmuebleType       read GetDatosInmueblesAdicionales write SetDatosInmueblesAdicionales;
    property DatosPresentacion:         DatosPresentacion2Type  read GetDatosPresentacion write SetDatosPresentacion;
  end;

  Array_Of_RespuestaMetalicoBajaType = array of RespuestaMetalicoBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaCobrosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaCobrosType = class(TRemotable)
  private
    FDatosCobro: DatosPagoCobroType;
    FDatosPresentacion: DatosPresentacion2Type;
    function  GetDatosCobro: DatosPagoCobroType;
    procedure SetDatosCobro(const ADatosPagoCobroType: DatosPagoCobroType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
  public
    destructor Destroy; override;
  published
    property DatosCobro:        DatosPagoCobroType      read GetDatosCobro write SetDatosCobro;
    property DatosPresentacion: DatosPresentacion2Type  read GetDatosPresentacion write SetDatosPresentacion;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaVentaBienesConsignaType = class(TRemotable)
  private
    FIdRegistroDeclarado: IdRegistroDeclaradoType;
    FDatosVentaBienesConsigna: RespuestaVentaBienesConsignaType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoVentaBienesConsigna: EstadoFactura2Type;
    function  GetIdRegistroDeclarado: IdRegistroDeclaradoType;
    procedure SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
    function  GetDatosVentaBienesConsigna: RespuestaVentaBienesConsignaType;
    procedure SetDatosVentaBienesConsigna(const ARespuestaVentaBienesConsignaType: RespuestaVentaBienesConsignaType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoVentaBienesConsigna: EstadoFactura2Type;
    procedure SetEstadoVentaBienesConsigna(const AEstadoFactura2Type: EstadoFactura2Type);
  public
    destructor Destroy; override;
  published
    property IdRegistroDeclarado:       IdRegistroDeclaradoType           read GetIdRegistroDeclarado write SetIdRegistroDeclarado;
    property DatosVentaBienesConsigna:  RespuestaVentaBienesConsignaType  read GetDatosVentaBienesConsigna write SetDatosVentaBienesConsigna;
    property DatosPresentacion:         DatosPresentacion2Type            read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoVentaBienesConsigna: EstadoFactura2Type                read GetEstadoVentaBienesConsigna write SetEstadoVentaBienesConsigna;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaOperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaOperacionesSegurosType = class(TRemotable)
  private
    FDatosOperacionesSeguros: RespuestaOperacionesSegurosType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoOperacionesSeguros: EstadoFactura2Type;
    function  GetDatosOperacionesSeguros: RespuestaOperacionesSegurosType;
    procedure SetDatosOperacionesSeguros(const ARespuestaOperacionesSegurosType: RespuestaOperacionesSegurosType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoOperacionesSeguros: EstadoFactura2Type;
    procedure SetEstadoOperacionesSeguros(const AEstadoFactura2Type: EstadoFactura2Type);
  public
    destructor Destroy; override;
  published
    property DatosOperacionesSeguros:  RespuestaOperacionesSegurosType  read GetDatosOperacionesSeguros write SetDatosOperacionesSeguros;
    property DatosPresentacion:        DatosPresentacion2Type           read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoOperacionesSeguros: EstadoFactura2Type               read GetEstadoOperacionesSeguros write SetEstadoOperacionesSeguros;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaAgenciasViajesType = class(TRemotable)
  private
    FDatosAgenciasViajes: RespuestaCobrosMetalicoType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoAgenciasViajes: EstadoFactura2Type;
    function  GetDatosAgenciasViajes: RespuestaCobrosMetalicoType;
    procedure SetDatosAgenciasViajes(const ARespuestaCobrosMetalicoType: RespuestaCobrosMetalicoType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoAgenciasViajes: EstadoFactura2Type;
    procedure SetEstadoAgenciasViajes(const AEstadoFactura2Type: EstadoFactura2Type);
  public
    destructor Destroy; override;
  published
    property DatosAgenciasViajes:  RespuestaCobrosMetalicoType  read GetDatosAgenciasViajes write SetDatosAgenciasViajes;
    property DatosPresentacion:    DatosPresentacion2Type       read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoAgenciasViajes: EstadoFactura2Type           read GetEstadoAgenciasViajes write SetEstadoAgenciasViajes;
  end;

  Array_Of_RespuestaOperacionesSegurosBajaType = array of RespuestaOperacionesSegurosBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaAgenciasViajesBajaType = array of RespuestaAgenciasViajesBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : TipoDesglose, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  TipoDesglose = class(TRemotable)
  private
    FDesgloseFactura: TipoSinDesgloseType;
    FDesgloseFactura_Specified: boolean;
    FDesgloseTipoOperacion: TipoConDesgloseType;
    FDesgloseTipoOperacion_Specified: boolean;
    function  GetDesgloseFactura(Index: Integer): TipoSinDesgloseType;
    procedure SetDesgloseFactura(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
    function  DesgloseFactura_Specified(Index: Integer): boolean;
    function  GetDesgloseTipoOperacion(Index: Integer): TipoConDesgloseType;
    procedure SetDesgloseTipoOperacion(Index: Integer; const ATipoConDesgloseType: TipoConDesgloseType);
    function  DesgloseTipoOperacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property DesgloseFactura:       TipoSinDesgloseType  Index (IS_OPTN) read GetDesgloseFactura write SetDesgloseFactura stored DesgloseFactura_Specified;
    property DesgloseTipoOperacion: TipoConDesgloseType  Index (IS_OPTN) read GetDesgloseTipoOperacion write SetDesgloseTipoOperacion stored DesgloseTipoOperacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : TipoDesglose, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  TipoDesglose2 = class(TRemotable)
  private
    FDesgloseFactura: TipoSinDesgloseType;
    FDesgloseFactura_Specified: boolean;
    FDesgloseTipoOperacion: TipoConDesgloseType;
    FDesgloseTipoOperacion_Specified: boolean;
    function  GetDesgloseFactura(Index: Integer): TipoSinDesgloseType;
    procedure SetDesgloseFactura(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
    function  DesgloseFactura_Specified(Index: Integer): boolean;
    function  GetDesgloseTipoOperacion(Index: Integer): TipoConDesgloseType;
    procedure SetDesgloseTipoOperacion(Index: Integer; const ATipoConDesgloseType: TipoConDesgloseType);
    function  DesgloseTipoOperacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property DesgloseFactura:       TipoSinDesgloseType  Index (IS_OPTN) read GetDesgloseFactura write SetDesgloseFactura stored DesgloseFactura_Specified;
    property DesgloseTipoOperacion: TipoConDesgloseType  Index (IS_OPTN) read GetDesgloseTipoOperacion write SetDesgloseTipoOperacion stored DesgloseTipoOperacion_Specified;
  end;

  Array_Of_RespuestaVentaBienesConsignaBajaType = array of RespuestaVentaBienesConsignaBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_RespuestaComunitariaBajaType = array of RespuestaComunitariaBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : RespuestaDetOperIntracomunitariaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaDetOperIntracomunitariaType = class(TRemotable)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FDetOperIntracomunitarias: OperacionIntracomunitariaType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetDetOperIntracomunitarias: OperacionIntracomunitariaType;
    procedure SetDetOperIntracomunitarias(const AOperacionIntracomunitariaType: OperacionIntracomunitariaType);
  public
    destructor Destroy; override;
  published
    property Contraparte:              PersonaFisicaJuridicaType      read GetContraparte write SetContraparte;
    property DetOperIntracomunitarias: OperacionIntracomunitariaType  read GetDetOperIntracomunitarias write SetDetOperIntracomunitarias;
  end;

  Array_Of_RespuestaBienBajaType = array of RespuestaBienBajaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblUbnd] }
  Array_Of_DetalleIVARecibida2Type = array of DetalleIVARecibida2Type;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }
  Array_Of_DetalleIVARecibidaType = array of DetalleIVARecibidaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }
  Array_Of_DetalleExentaType = array of DetalleExentaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }
  Array_Of_IDFacturaARType = array of IDFacturaARType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : FacturasAgrupadas, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturasAgrupadas = class(TRemotable)
  private
    FIDFacturaAgrupada: Array_Of_IDFacturaARType;
    function  GetIDFacturaAgrupada(Index: Integer): Array_Of_IDFacturaARType;
    procedure SetIDFacturaAgrupada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
  public
    destructor Destroy; override;
    function   GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;       
    procedure  SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
    function   GetIDFacturaARTypeArrayLength: Integer;
    procedure  SetIDFacturaARTypeArrayLength(Len: Integer);

    property   IDFacturaARTypeArray[Index: Integer]: IDFacturaARType read GetIDFacturaARTypeArray write SetIDFacturaARTypeArray; default;
    property   Len: Integer read GetIDFacturaARTypeArrayLength write SetIDFacturaARTypeArrayLength;
  published
    property IDFacturaAgrupada: Array_Of_IDFacturaARType  Index (IS_UNBD) read GetIDFacturaAgrupada write SetIDFacturaAgrupada;
  end;



  // ************************************************************************ //
  // XML       : FacturasRectificadas, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturasRectificadas = class(TRemotable)
  private
    FIDFacturaRectificada: Array_Of_IDFacturaARType;
    function  GetIDFacturaRectificada(Index: Integer): Array_Of_IDFacturaARType;
    procedure SetIDFacturaRectificada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
  public
    destructor Destroy; override;
    function   GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;       
    procedure  SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
    function   GetIDFacturaARTypeArrayLength: Integer;
    procedure  SetIDFacturaARTypeArrayLength(Len: Integer);

    property   IDFacturaARTypeArray[Index: Integer]: IDFacturaARType read GetIDFacturaARTypeArray write SetIDFacturaARTypeArray; default;
    property   Len: Integer read GetIDFacturaARTypeArrayLength write SetIDFacturaARTypeArrayLength;
  published
    property IDFacturaRectificada: Array_Of_IDFacturaARType  Index (IS_UNBD) read GetIDFacturaRectificada write SetIDFacturaRectificada;
  end;

  Array_Of_DatosInmuebleType = array of DatosInmuebleType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : DatosInmueble, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  DatosInmueble = class(TRemotable)
  private
    FDetalleInmueble: Array_Of_DatosInmuebleType;
    function  GetDetalleInmueble(Index: Integer): Array_Of_DatosInmuebleType;
    procedure SetDetalleInmueble(Index: Integer; const AArray_Of_DatosInmuebleType: Array_Of_DatosInmuebleType);
  public
    destructor Destroy; override;
    function   GetDatosInmuebleTypeArray(Index: Integer): DatosInmuebleType;       
    procedure  SetDatosInmuebleTypeArray(Index: Integer; const Item: DatosInmuebleType);
    function   GetDatosInmuebleTypeArrayLength: Integer;
    procedure  SetDatosInmuebleTypeArrayLength(Len: Integer);

    property   DatosInmuebleTypeArray[Index: Integer]: DatosInmuebleType read GetDatosInmuebleTypeArray write SetDatosInmuebleTypeArray; default;
    property   Len: Integer read GetDatosInmuebleTypeArrayLength write SetDatosInmuebleTypeArrayLength;
  published
    property DetalleInmueble: Array_Of_DatosInmuebleType  Index (IS_UNBD) read GetDetalleInmueble write SetDetalleInmueble;
  end;



  // ************************************************************************ //
  // XML       : DatosInmueble, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  DatosInmueble2 = class(TRemotable)
  private
    FDetalleInmueble: Array_Of_DatosInmuebleType;
    function  GetDetalleInmueble(Index: Integer): Array_Of_DatosInmuebleType;
    procedure SetDetalleInmueble(Index: Integer; const AArray_Of_DatosInmuebleType: Array_Of_DatosInmuebleType);
  public
    destructor Destroy; override;
    function   GetDatosInmuebleTypeArray(Index: Integer): DatosInmuebleType;       
    procedure  SetDatosInmuebleTypeArray(Index: Integer; const Item: DatosInmuebleType);
    function   GetDatosInmuebleTypeArrayLength: Integer;
    procedure  SetDatosInmuebleTypeArrayLength(Len: Integer);

    property   DatosInmuebleTypeArray[Index: Integer]: DatosInmuebleType read GetDatosInmuebleTypeArray write SetDatosInmuebleTypeArray; default;
    property   Len: Integer read GetDatosInmuebleTypeArrayLength write SetDatosInmuebleTypeArrayLength;
  published
    property DetalleInmueble: Array_Of_DatosInmuebleType  Index (IS_UNBD) read GetDetalleInmueble write SetDetalleInmueble;
  end;

  Array_Of_DetalleIVAEmitidaType = array of DetalleIVAEmitidaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }
  Array_Of_LRFacturasRecibidasType = array of LRFacturasRecibidasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBajaRecibidasType = array of LRBajaRecibidasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBienesInversionType = array of LRBienesInversionType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_DetalleIVAEmitidaPrestacionType = array of DetalleIVAEmitidaPrestacionType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblUbnd] }
  Array_Of_LRfacturasEmitidasType = array of LRfacturasEmitidasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBajaExpedidasType = array of LRBajaExpedidasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaCobrosMetalicoType = array of RegistroRespuestaConsultaCobrosMetalicoType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType = array of RegistroRespuestaConsultaDetOperIntracomunitariasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaBienesType = array of RegistroRespuestaConsultaBienesType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_LRBajaBienesInversionType = array of LRBajaBienesInversionType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaRecibidasType = array of RegistroRespuestaConsultaRecibidasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_LRBajaOperacionIntracomunitariaType = array of LRBajaOperacionIntracomunitariaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType = array of RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaFactInformadasClienteType = array of RegistroRespuestaConsultaFactInformadasClienteType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaEmitidasType = array of RegistroRespuestaConsultaEmitidasType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_LRVentaBienesConsignaType = array of LRVentaBienesConsignaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBajaVentaBienesConsignaType = array of LRBajaVentaBienesConsignaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBajaCobrosMetalicoType = array of LRBajaCobrosMetalicoType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LROperacionesSegurosType = array of LROperacionesSegurosType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBajaRegistroLROperacionesSegurosType = array of LRBajaRegistroLROperacionesSegurosType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRAgenciasViajesType = array of LRAgenciasViajesType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRBajaAgenciasViajesType = array of LRBajaAgenciasViajesType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LRCobrosMetalicoType = array of LRCobrosMetalicoType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_LROperacionIntracomunitariaType = array of LROperacionIntracomunitariaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaOperacionesSegurosType = array of RegistroRespuestaConsultaOperacionesSegurosType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType = array of RegistroRespuestaConsultaInmueblesAdicionalesType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaCobrosType = array of RegistroRespuestaConsultaCobrosType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaPagosType = array of RegistroRespuestaConsultaPagosType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : RespuestaVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaVentaBienesConsignaType = class(TRemotable)
  private
    FClaveDeclarante: TipoClaveDeclaranteType;
    FTipoOperacion: TipoOperacionType;
    FContraparte: PersonaFisicaJuridicaType;
    FContraparte_Specified: boolean;
    FSustitutoDestinatarioInicial: PersonaFisicaJuridicaType;
    FSustitutoDestinatarioInicial_Specified: boolean;
    FDeposito: DepositoType;
    FDeposito_Specified: boolean;
    FOperacionIntracomunitaria: VentaBienesConsignaType;
    function  GetClaveDeclarante: TipoClaveDeclaranteType;
    procedure SetClaveDeclarante(const ATipoClaveDeclaranteType: TipoClaveDeclaranteType);
    function  GetTipoOperacion: TipoOperacionType;
    procedure SetTipoOperacion(const ATipoOperacionType: TipoOperacionType);
    function  GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetSustitutoDestinatarioInicial(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetSustitutoDestinatarioInicial(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  SustitutoDestinatarioInicial_Specified(Index: Integer): boolean;
    function  GetDeposito(Index: Integer): DepositoType;
    procedure SetDeposito(Index: Integer; const ADepositoType: DepositoType);
    function  Deposito_Specified(Index: Integer): boolean;
    function  GetOperacionIntracomunitaria: VentaBienesConsignaType;
    procedure SetOperacionIntracomunitaria(const AVentaBienesConsignaType: VentaBienesConsignaType);
  public
    destructor Destroy; override;
  published
    property ClaveDeclarante:              TipoClaveDeclaranteType    read GetClaveDeclarante write SetClaveDeclarante;
    property TipoOperacion:                TipoOperacionType          read GetTipoOperacion write SetTipoOperacion;
    property Contraparte:                  PersonaFisicaJuridicaType  Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property SustitutoDestinatarioInicial: PersonaFisicaJuridicaType  Index (IS_OPTN) read GetSustitutoDestinatarioInicial write SetSustitutoDestinatarioInicial stored SustitutoDestinatarioInicial_Specified;
    property Deposito:                     DepositoType               Index (IS_OPTN) read GetDeposito write SetDeposito stored Deposito_Specified;
    property OperacionIntracomunitaria:    VentaBienesConsignaType    read GetOperacionIntracomunitaria write SetOperacionIntracomunitaria;
  end;



  // ************************************************************************ //
  // XML       : LRVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRVentaBienesConsignaType = class(TRemotable)
  private
    FClaveDeclarante: TipoClaveDeclaranteType;
    FIdRegistroDeclarado: IdRegistroDeclaradoType;
    FTipoOperacion: TipoOperacionType;
    FContraparte: PersonaFisicaJuridicaType;
    FContraparte_Specified: boolean;
    FSustitutoDestinatarioInicial: PersonaFisicaJuridicaType;
    FSustitutoDestinatarioInicial_Specified: boolean;
    FDeposito: DepositoType;
    FDeposito_Specified: boolean;
    FOperacionIntracomunitaria: VentaBienesConsignaType;
    function  GetClaveDeclarante: TipoClaveDeclaranteType;
    procedure SetClaveDeclarante(const ATipoClaveDeclaranteType: TipoClaveDeclaranteType);
    function  GetIdRegistroDeclarado: IdRegistroDeclaradoType;
    procedure SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
    function  GetTipoOperacion: TipoOperacionType;
    procedure SetTipoOperacion(const ATipoOperacionType: TipoOperacionType);
    function  GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetSustitutoDestinatarioInicial(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetSustitutoDestinatarioInicial(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  SustitutoDestinatarioInicial_Specified(Index: Integer): boolean;
    function  GetDeposito(Index: Integer): DepositoType;
    procedure SetDeposito(Index: Integer; const ADepositoType: DepositoType);
    function  Deposito_Specified(Index: Integer): boolean;
    function  GetOperacionIntracomunitaria: VentaBienesConsignaType;
    procedure SetOperacionIntracomunitaria(const AVentaBienesConsignaType: VentaBienesConsignaType);
  public
    destructor Destroy; override;
  published
    property ClaveDeclarante:              TipoClaveDeclaranteType    read GetClaveDeclarante write SetClaveDeclarante;
    property IdRegistroDeclarado:          IdRegistroDeclaradoType    read GetIdRegistroDeclarado write SetIdRegistroDeclarado;
    property TipoOperacion:                TipoOperacionType          read GetTipoOperacion write SetTipoOperacion;
    property Contraparte:                  PersonaFisicaJuridicaType  Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property SustitutoDestinatarioInicial: PersonaFisicaJuridicaType  Index (IS_OPTN) read GetSustitutoDestinatarioInicial write SetSustitutoDestinatarioInicial stored SustitutoDestinatarioInicial_Specified;
    property Deposito:                     DepositoType               Index (IS_OPTN) read GetDeposito write SetDeposito stored Deposito_Specified;
    property OperacionIntracomunitaria:    VentaBienesConsignaType    read GetOperacionIntracomunitaria write SetOperacionIntracomunitaria;
  end;

  Array_Of_RegistroRespuestaConsultaAgenciasViajesType = array of RegistroRespuestaConsultaAgenciasViajesType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }
  Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType = array of RegistroRespuestaConsultaVentaBienesConsignaType;   { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblUbnd] }


  // ************************************************************************ //
  // XML       : InversionSujetoPasivo, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  InversionSujetoPasivo = class(TRemotable)
  private
    FDetalleIVA: Array_Of_DetalleIVARecibida2Type;
    function  GetDetalleIVA(Index: Integer): Array_Of_DetalleIVARecibida2Type;
    procedure SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVARecibida2Type: Array_Of_DetalleIVARecibida2Type);
  public
    destructor Destroy; override;
    function   GetDetalleIVARecibida2TypeArray(Index: Integer): DetalleIVARecibida2Type;       
    procedure  SetDetalleIVARecibida2TypeArray(Index: Integer; const Item: DetalleIVARecibida2Type);
    function   GetDetalleIVARecibida2TypeArrayLength: Integer;
    procedure  SetDetalleIVARecibida2TypeArrayLength(Len: Integer);

    property   DetalleIVARecibida2TypeArray[Index: Integer]: DetalleIVARecibida2Type read GetDetalleIVARecibida2TypeArray write SetDetalleIVARecibida2TypeArray; default;
    property   Len: Integer read GetDetalleIVARecibida2TypeArrayLength write SetDetalleIVARecibida2TypeArrayLength;
  published
    property DetalleIVA: Array_Of_DetalleIVARecibida2Type  Index (IS_UNBD) read GetDetalleIVA write SetDetalleIVA;
  end;



  // ************************************************************************ //
  // XML       : DesgloseIVA, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DesgloseIVA = class(TRemotable)
  private
    FDetalleIVA: Array_Of_DetalleIVARecibidaType;
    function  GetDetalleIVA(Index: Integer): Array_Of_DetalleIVARecibidaType;
    procedure SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVARecibidaType: Array_Of_DetalleIVARecibidaType);
  public
    destructor Destroy; override;
    function   GetDetalleIVARecibidaTypeArray(Index: Integer): DetalleIVARecibidaType;       
    procedure  SetDetalleIVARecibidaTypeArray(Index: Integer; const Item: DetalleIVARecibidaType);
    function   GetDetalleIVARecibidaTypeArrayLength: Integer;
    procedure  SetDetalleIVARecibidaTypeArrayLength(Len: Integer);

    property   DetalleIVARecibidaTypeArray[Index: Integer]: DetalleIVARecibidaType read GetDetalleIVARecibidaTypeArray write SetDetalleIVARecibidaTypeArray; default;
    property   Len: Integer read GetDetalleIVARecibidaTypeArrayLength write SetDetalleIVARecibidaTypeArrayLength;
  published
    property DetalleIVA: Array_Of_DetalleIVARecibidaType  Index (IS_UNBD) read GetDetalleIVA write SetDetalleIVA;
  end;



  // ************************************************************************ //
  // XML       : TipoSinDesgloseType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  TipoSinDesgloseType = class(TRemotable)
  private
    FSujeta: SujetaType;
    FSujeta_Specified: boolean;
    FNoSujeta: NoSujetaType;
    FNoSujeta_Specified: boolean;
    function  GetSujeta(Index: Integer): SujetaType;
    procedure SetSujeta(Index: Integer; const ASujetaType: SujetaType);
    function  Sujeta_Specified(Index: Integer): boolean;
    function  GetNoSujeta(Index: Integer): NoSujetaType;
    procedure SetNoSujeta(Index: Integer; const ANoSujetaType: NoSujetaType);
    function  NoSujeta_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Sujeta:   SujetaType    Index (IS_OPTN) read GetSujeta write SetSujeta stored Sujeta_Specified;
    property NoSujeta: NoSujetaType  Index (IS_OPTN) read GetNoSujeta write SetNoSujeta stored NoSujeta_Specified;
  end;



  // ************************************************************************ //
  // XML       : TipoConDesgloseType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  TipoConDesgloseType = class(TRemotable)
  private
    FPrestacionServicios: TipoSinDesglosePrestacionType;
    FPrestacionServicios_Specified: boolean;
    FEntrega: TipoSinDesgloseType;
    FEntrega_Specified: boolean;
    function  GetPrestacionServicios(Index: Integer): TipoSinDesglosePrestacionType;
    procedure SetPrestacionServicios(Index: Integer; const ATipoSinDesglosePrestacionType: TipoSinDesglosePrestacionType);
    function  PrestacionServicios_Specified(Index: Integer): boolean;
    function  GetEntrega(Index: Integer): TipoSinDesgloseType;
    procedure SetEntrega(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
    function  Entrega_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PrestacionServicios: TipoSinDesglosePrestacionType  Index (IS_OPTN) read GetPrestacionServicios write SetPrestacionServicios stored PrestacionServicios_Specified;
    property Entrega:             TipoSinDesgloseType            Index (IS_OPTN) read GetEntrega write SetEntrega stored Entrega_Specified;
  end;



  // ************************************************************************ //
  // XML       : DesgloseFacturaRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DesgloseFacturaRecibidasType = class(TRemotable)
  private
    FInversionSujetoPasivo: InversionSujetoPasivo;
    FInversionSujetoPasivo_Specified: boolean;
    FDesgloseIVA: DesgloseIVA;
    FDesgloseIVA_Specified: boolean;
    function  GetInversionSujetoPasivo(Index: Integer): InversionSujetoPasivo;
    procedure SetInversionSujetoPasivo(Index: Integer; const AInversionSujetoPasivo: InversionSujetoPasivo);
    function  InversionSujetoPasivo_Specified(Index: Integer): boolean;
    function  GetDesgloseIVA(Index: Integer): DesgloseIVA;
    procedure SetDesgloseIVA(Index: Integer; const ADesgloseIVA: DesgloseIVA);
    function  DesgloseIVA_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property InversionSujetoPasivo: InversionSujetoPasivo  Index (IS_OPTN) read GetInversionSujetoPasivo write SetInversionSujetoPasivo stored InversionSujetoPasivo_Specified;
    property DesgloseIVA:           DesgloseIVA            Index (IS_OPTN) read GetDesgloseIVA write SetDesgloseIVA stored DesgloseIVA_Specified;
  end;



  // ************************************************************************ //
  // XML       : DatosInmueble, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DatosInmueble3 = class(TRemotable)
  private
    FDetalleInmueble: Array_Of_DatosInmuebleType;
    function  GetDetalleInmueble(Index: Integer): Array_Of_DatosInmuebleType;
    procedure SetDetalleInmueble(Index: Integer; const AArray_Of_DatosInmuebleType: Array_Of_DatosInmuebleType);
  public
    destructor Destroy; override;
    function   GetDatosInmuebleTypeArray(Index: Integer): DatosInmuebleType;       
    procedure  SetDatosInmuebleTypeArray(Index: Integer; const Item: DatosInmuebleType);
    function   GetDatosInmuebleTypeArrayLength: Integer;
    procedure  SetDatosInmuebleTypeArrayLength(Len: Integer);

    property   DatosInmuebleTypeArray[Index: Integer]: DatosInmuebleType read GetDatosInmuebleTypeArray write SetDatosInmuebleTypeArray; default;
    property   Len: Integer read GetDatosInmuebleTypeArrayLength write SetDatosInmuebleTypeArrayLength;
  published
    property DetalleInmueble: Array_Of_DatosInmuebleType  Index (IS_UNBD) read GetDetalleInmueble write SetDetalleInmueble;
  end;



  // ************************************************************************ //
  // XML       : TipoDesglose, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  TipoDesglose3 = class(TRemotable)
  private
    FDesgloseFactura: TipoSinDesgloseType;
    FDesgloseFactura_Specified: boolean;
    FDesgloseTipoOperacion: TipoConDesgloseType;
    FDesgloseTipoOperacion_Specified: boolean;
    function  GetDesgloseFactura(Index: Integer): TipoSinDesgloseType;
    procedure SetDesgloseFactura(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
    function  DesgloseFactura_Specified(Index: Integer): boolean;
    function  GetDesgloseTipoOperacion(Index: Integer): TipoConDesgloseType;
    procedure SetDesgloseTipoOperacion(Index: Integer; const ATipoConDesgloseType: TipoConDesgloseType);
    function  DesgloseTipoOperacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property DesgloseFactura:       TipoSinDesgloseType  Index (IS_OPTN) read GetDesgloseFactura write SetDesgloseFactura stored DesgloseFactura_Specified;
    property DesgloseTipoOperacion: TipoConDesgloseType  Index (IS_OPTN) read GetDesgloseTipoOperacion write SetDesgloseTipoOperacion stored DesgloseTipoOperacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : DesgloseIVA, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DesgloseIVA2 = class(TRemotable)
  private
    FDetalleIVA: Array_Of_DetalleIVAEmitidaType;
    function  GetDetalleIVA(Index: Integer): Array_Of_DetalleIVAEmitidaType;
    procedure SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVAEmitidaType: Array_Of_DetalleIVAEmitidaType);
  public
    destructor Destroy; override;
    function   GetDetalleIVAEmitidaTypeArray(Index: Integer): DetalleIVAEmitidaType;       
    procedure  SetDetalleIVAEmitidaTypeArray(Index: Integer; const Item: DetalleIVAEmitidaType);
    function   GetDetalleIVAEmitidaTypeArrayLength: Integer;
    procedure  SetDetalleIVAEmitidaTypeArrayLength(Len: Integer);

    property   DetalleIVAEmitidaTypeArray[Index: Integer]: DetalleIVAEmitidaType read GetDetalleIVAEmitidaTypeArray write SetDetalleIVAEmitidaTypeArray; default;
    property   Len: Integer read GetDetalleIVAEmitidaTypeArrayLength write SetDetalleIVAEmitidaTypeArrayLength;
  published
    property DetalleIVA: Array_Of_DetalleIVAEmitidaType  Index (IS_UNBD) read GetDetalleIVA write SetDetalleIVA;
  end;



  // ************************************************************************ //
  // XML       : Exenta, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  Exenta = class(TRemotable)
  private
    FDetalleExenta: Array_Of_DetalleExentaType;
    function  GetDetalleExenta(Index: Integer): Array_Of_DetalleExentaType;
    procedure SetDetalleExenta(Index: Integer; const AArray_Of_DetalleExentaType: Array_Of_DetalleExentaType);
  public
    destructor Destroy; override;
    function   GetDetalleExentaTypeArray(Index: Integer): DetalleExentaType;       
    procedure  SetDetalleExentaTypeArray(Index: Integer; const Item: DetalleExentaType);
    function   GetDetalleExentaTypeArrayLength: Integer;
    procedure  SetDetalleExentaTypeArrayLength(Len: Integer);

    property   DetalleExentaTypeArray[Index: Integer]: DetalleExentaType read GetDetalleExentaTypeArray write SetDetalleExentaTypeArray; default;
    property   Len: Integer read GetDetalleExentaTypeArrayLength write SetDetalleExentaTypeArrayLength;
  published
    property DetalleExenta: Array_Of_DetalleExentaType  Index (IS_UNBD) read GetDetalleExenta write SetDetalleExenta;
  end;



  // ************************************************************************ //
  // XML       : Exenta, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  Exenta2 = class(TRemotable)
  private
    FDetalleExenta: Array_Of_DetalleExentaType;
    function  GetDetalleExenta(Index: Integer): Array_Of_DetalleExentaType;
    procedure SetDetalleExenta(Index: Integer; const AArray_Of_DetalleExentaType: Array_Of_DetalleExentaType);
  public
    destructor Destroy; override;
    function   GetDetalleExentaTypeArray(Index: Integer): DetalleExentaType;       
    procedure  SetDetalleExentaTypeArray(Index: Integer; const Item: DetalleExentaType);
    function   GetDetalleExentaTypeArrayLength: Integer;
    procedure  SetDetalleExentaTypeArrayLength(Len: Integer);

    property   DetalleExentaTypeArray[Index: Integer]: DetalleExentaType read GetDetalleExentaTypeArray write SetDetalleExentaTypeArray; default;
    property   Len: Integer read GetDetalleExentaTypeArrayLength write SetDetalleExentaTypeArrayLength;
  published
    property DetalleExenta: Array_Of_DetalleExentaType  Index (IS_UNBD) read GetDetalleExenta write SetDetalleExenta;
  end;



  // ************************************************************************ //
  // XML       : NoExenta, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  NoExenta = class(TRemotable)
  private
    FTipoNoExenta: TipoOperacionSujetaNoExentaType;
    FDesgloseIVA: DesgloseIVA2;
    function  GetTipoNoExenta: TipoOperacionSujetaNoExentaType;
    procedure SetTipoNoExenta(const ATipoOperacionSujetaNoExentaType: TipoOperacionSujetaNoExentaType);
    function  GetDesgloseIVA: DesgloseIVA2;
    procedure SetDesgloseIVA(const ADesgloseIVA2: DesgloseIVA2);
  public
    destructor Destroy; override;
  published
    property TipoNoExenta: TipoOperacionSujetaNoExentaType  read GetTipoNoExenta write SetTipoNoExenta;
    property DesgloseIVA:  DesgloseIVA2                     read GetDesgloseIVA write SetDesgloseIVA;
  end;



  // ************************************************************************ //
  // XML       : NoExenta, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  NoExenta2 = class(TRemotable)
  private
    FTipoNoExenta: TipoOperacionSujetaNoExentaType;
    FDesgloseIVA: DesgloseIVA3;
    function  GetTipoNoExenta: TipoOperacionSujetaNoExentaType;
    procedure SetTipoNoExenta(const ATipoOperacionSujetaNoExentaType: TipoOperacionSujetaNoExentaType);
    function  GetDesgloseIVA: DesgloseIVA3;
    procedure SetDesgloseIVA(const ADesgloseIVA3: DesgloseIVA3);
  public
    destructor Destroy; override;
  published
    property TipoNoExenta: TipoOperacionSujetaNoExentaType  read GetTipoNoExenta write SetTipoNoExenta;
    property DesgloseIVA:  DesgloseIVA3                     read GetDesgloseIVA write SetDesgloseIVA;
  end;



  // ************************************************************************ //
  // XML       : DesgloseIVA, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DesgloseIVA3 = class(TRemotable)
  private
    FDetalleIVA: Array_Of_DetalleIVAEmitidaPrestacionType;
    function  GetDetalleIVA(Index: Integer): Array_Of_DetalleIVAEmitidaPrestacionType;
    procedure SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVAEmitidaPrestacionType: Array_Of_DetalleIVAEmitidaPrestacionType);
  public
    destructor Destroy; override;
    function   GetDetalleIVAEmitidaPrestacionTypeArray(Index: Integer): DetalleIVAEmitidaPrestacionType;       
    procedure  SetDetalleIVAEmitidaPrestacionTypeArray(Index: Integer; const Item: DetalleIVAEmitidaPrestacionType);
    function   GetDetalleIVAEmitidaPrestacionTypeArrayLength: Integer;
    procedure  SetDetalleIVAEmitidaPrestacionTypeArrayLength(Len: Integer);

    property   DetalleIVAEmitidaPrestacionTypeArray[Index: Integer]: DetalleIVAEmitidaPrestacionType read GetDetalleIVAEmitidaPrestacionTypeArray write SetDetalleIVAEmitidaPrestacionTypeArray; default;
    property   Len: Integer read GetDetalleIVAEmitidaPrestacionTypeArrayLength write SetDetalleIVAEmitidaPrestacionTypeArrayLength;
  published
    property DetalleIVA: Array_Of_DetalleIVAEmitidaPrestacionType  Index (IS_UNBD) read GetDetalleIVA write SetDetalleIVA;
  end;



  // ************************************************************************ //
  // XML       : SujetaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  SujetaType = class(TRemotable)
  private
    FExenta: Exenta2;
    FExenta_Specified: boolean;
    FNoExenta: NoExenta;
    FNoExenta_Specified: boolean;
    function  GetExenta(Index: Integer): Exenta2;
    procedure SetExenta(Index: Integer; const AExenta2: Exenta2);
    function  Exenta_Specified(Index: Integer): boolean;
    function  GetNoExenta(Index: Integer): NoExenta;
    procedure SetNoExenta(Index: Integer; const ANoExenta: NoExenta);
    function  NoExenta_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Exenta:   Exenta2   Index (IS_OPTN) read GetExenta write SetExenta stored Exenta_Specified;
    property NoExenta: NoExenta  Index (IS_OPTN) read GetNoExenta write SetNoExenta stored NoExenta_Specified;
  end;



  // ************************************************************************ //
  // XML       : SujetaPrestacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  SujetaPrestacionType = class(TRemotable)
  private
    FExenta: Exenta;
    FExenta_Specified: boolean;
    FNoExenta: NoExenta2;
    FNoExenta_Specified: boolean;
    function  GetExenta(Index: Integer): Exenta;
    procedure SetExenta(Index: Integer; const AExenta: Exenta);
    function  Exenta_Specified(Index: Integer): boolean;
    function  GetNoExenta(Index: Integer): NoExenta2;
    procedure SetNoExenta(Index: Integer; const ANoExenta2: NoExenta2);
    function  NoExenta_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Exenta:   Exenta     Index (IS_OPTN) read GetExenta write SetExenta stored Exenta_Specified;
    property NoExenta: NoExenta2  Index (IS_OPTN) read GetNoExenta write SetNoExenta stored NoExenta_Specified;
  end;



  // ************************************************************************ //
  // XML       : TipoSinDesglosePrestacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  TipoSinDesglosePrestacionType = class(TRemotable)
  private
    FSujeta: SujetaPrestacionType;
    FSujeta_Specified: boolean;
    FNoSujeta: NoSujetaType;
    FNoSujeta_Specified: boolean;
    function  GetSujeta(Index: Integer): SujetaPrestacionType;
    procedure SetSujeta(Index: Integer; const ASujetaPrestacionType: SujetaPrestacionType);
    function  Sujeta_Specified(Index: Integer): boolean;
    function  GetNoSujeta(Index: Integer): NoSujetaType;
    procedure SetNoSujeta(Index: Integer; const ANoSujetaType: NoSujetaType);
    function  NoSujeta_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Sujeta:   SujetaPrestacionType  Index (IS_OPTN) read GetSujeta write SetSujeta stored Sujeta_Specified;
    property NoSujeta: NoSujetaType          Index (IS_OPTN) read GetNoSujeta write SetNoSujeta stored NoSujeta_Specified;
  end;

  TextMax20Type   =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  ReferenciaCatastralType =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TextMax500Type  =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : DatosInmuebleType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DatosInmuebleType = class(TRemotable)
  private
    FSituacionInmueble: SituacionInmuebleType;
    FReferenciaCatastral: ReferenciaCatastralType;
    FReferenciaCatastral_Specified: boolean;
    function  GetSituacionInmueble: SituacionInmuebleType;
    procedure SetSituacionInmueble(const ASituacionInmuebleType: SituacionInmuebleType);
    function  GetReferenciaCatastral(Index: Integer): ReferenciaCatastralType;
    procedure SetReferenciaCatastral(Index: Integer; const AReferenciaCatastralType: ReferenciaCatastralType);
    function  ReferenciaCatastral_Specified(Index: Integer): boolean;
  published
    property SituacionInmueble:   SituacionInmuebleType    read GetSituacionInmueble write SetSituacionInmueble;
    property ReferenciaCatastral: ReferenciaCatastralType  Index (IS_OPTN) read GetReferenciaCatastral write SetReferenciaCatastral stored ReferenciaCatastral_Specified;
  end;

  TextMax34Type   =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TextMax150Type  =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  TextMax40Type   =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  PlazoOperacion  =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[Smpl] }


  // ************************************************************************ //
  // XML       : RespuestaComunBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaComunBajaType = class(TRemotable)
  private
    FCSV: string;
    FCSV_Specified: boolean;
    FDatosPresentacion: DatosPresentacionType;
    FDatosPresentacion_Specified: boolean;
    FCabecera: CabeceraSiiBaja;
    FEstadoEnvio: EstadoEnvioType;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetDatosPresentacion(Index: Integer): DatosPresentacionType;
    procedure SetDatosPresentacion(Index: Integer; const ADatosPresentacionType: DatosPresentacionType);
    function  DatosPresentacion_Specified(Index: Integer): boolean;
    function  GetCabecera: CabeceraSiiBaja;
    procedure SetCabecera(const ACabeceraSiiBaja: CabeceraSiiBaja);
    function  GetEstadoEnvio: EstadoEnvioType;
    procedure SetEstadoEnvio(const AEstadoEnvioType: EstadoEnvioType);
  public
    destructor Destroy; override;
  published
    property CSV:               string                 Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property DatosPresentacion: DatosPresentacionType  Index (IS_OPTN) read GetDatosPresentacion write SetDatosPresentacion stored DatosPresentacion_Specified;
    property Cabecera:          CabeceraSiiBaja        read GetCabecera write SetCabecera;
    property EstadoEnvio:       EstadoEnvioType        read GetEstadoEnvio write SetEstadoEnvio;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaVentaBienesConsignaType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaVentaBienesConsignaBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaVentaBienesConsignaBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaVentaBienesConsignaBajaType: Array_Of_RespuestaVentaBienesConsignaBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaVentaBienesConsignaBajaTypeArray(Index: Integer): RespuestaVentaBienesConsignaBajaType;       
    procedure  SetRespuestaVentaBienesConsignaBajaTypeArray(Index: Integer; const Item: RespuestaVentaBienesConsignaBajaType);
    function   GetRespuestaVentaBienesConsignaBajaTypeArrayLength: Integer;
    procedure  SetRespuestaVentaBienesConsignaBajaTypeArrayLength(Len: Integer);

    property   RespuestaVentaBienesConsignaBajaTypeArray[Index: Integer]: RespuestaVentaBienesConsignaBajaType read GetRespuestaVentaBienesConsignaBajaTypeArray write SetRespuestaVentaBienesConsignaBajaTypeArray; default;
    property   Len: Integer read GetRespuestaVentaBienesConsignaBajaTypeArrayLength write SetRespuestaVentaBienesConsignaBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaVentaBienesConsignaBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaVentaBienesConsigna, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaVentaBienesConsigna = class(RespuestaLRBajaVentaBienesConsignaType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaIMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaIMetalicoType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaMetalicoBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaMetalicoBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaMetalicoBajaType: Array_Of_RespuestaMetalicoBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaMetalicoBajaTypeArray(Index: Integer): RespuestaMetalicoBajaType;       
    procedure  SetRespuestaMetalicoBajaTypeArray(Index: Integer; const Item: RespuestaMetalicoBajaType);
    function   GetRespuestaMetalicoBajaTypeArrayLength: Integer;
    procedure  SetRespuestaMetalicoBajaTypeArrayLength(Len: Integer);

    property   RespuestaMetalicoBajaTypeArray[Index: Integer]: RespuestaMetalicoBajaType read GetRespuestaMetalicoBajaTypeArray write SetRespuestaMetalicoBajaTypeArray; default;
    property   Len: Integer read GetRespuestaMetalicoBajaTypeArrayLength write SetRespuestaMetalicoBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaMetalicoBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaCobrosMetalico, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaCobrosMetalico = class(RespuestaLRBajaIMetalicoType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaFRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaFRecibidasType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaRecibidaBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaRecibidaBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaRecibidaBajaType: Array_Of_RespuestaRecibidaBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaRecibidaBajaTypeArray(Index: Integer): RespuestaRecibidaBajaType;       
    procedure  SetRespuestaRecibidaBajaTypeArray(Index: Integer; const Item: RespuestaRecibidaBajaType);
    function   GetRespuestaRecibidaBajaTypeArrayLength: Integer;
    procedure  SetRespuestaRecibidaBajaTypeArrayLength(Len: Integer);

    property   RespuestaRecibidaBajaTypeArray[Index: Integer]: RespuestaRecibidaBajaType read GetRespuestaRecibidaBajaTypeArray write SetRespuestaRecibidaBajaTypeArray; default;
    property   Len: Integer read GetRespuestaRecibidaBajaTypeArrayLength write SetRespuestaRecibidaBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaRecibidaBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaFacturasRecibidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaFacturasRecibidas = class(RespuestaLRBajaFRecibidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaOComunitariasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaOComunitariasType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaComunitariaBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaComunitariaBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaComunitariaBajaType: Array_Of_RespuestaComunitariaBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaComunitariaBajaTypeArray(Index: Integer): RespuestaComunitariaBajaType;       
    procedure  SetRespuestaComunitariaBajaTypeArray(Index: Integer; const Item: RespuestaComunitariaBajaType);
    function   GetRespuestaComunitariaBajaTypeArrayLength: Integer;
    procedure  SetRespuestaComunitariaBajaTypeArrayLength(Len: Integer);

    property   RespuestaComunitariaBajaTypeArray[Index: Integer]: RespuestaComunitariaBajaType read GetRespuestaComunitariaBajaTypeArray write SetRespuestaComunitariaBajaTypeArray; default;
    property   Len: Integer read GetRespuestaComunitariaBajaTypeArrayLength write SetRespuestaComunitariaBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaComunitariaBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaDetOperacionesIntracomunitarias, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaDetOperacionesIntracomunitarias = class(RespuestaLRBajaOComunitariasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaBienesInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaBienesInversionType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaBienBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaBienBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaBienBajaType: Array_Of_RespuestaBienBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaBienBajaTypeArray(Index: Integer): RespuestaBienBajaType;       
    procedure  SetRespuestaBienBajaTypeArray(Index: Integer; const Item: RespuestaBienBajaType);
    function   GetRespuestaBienBajaTypeArrayLength: Integer;
    procedure  SetRespuestaBienBajaTypeArrayLength(Len: Integer);

    property   RespuestaBienBajaTypeArray[Index: Integer]: RespuestaBienBajaType read GetRespuestaBienBajaTypeArray write SetRespuestaBienBajaTypeArray; default;
    property   Len: Integer read GetRespuestaBienBajaTypeArrayLength write SetRespuestaBienBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaBienBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaBienesInversion, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaBienesInversion = class(RespuestaLRBajaBienesInversionType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaOperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaOperacionesSegurosType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaOperacionesSegurosBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaOperacionesSegurosBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaOperacionesSegurosBajaType: Array_Of_RespuestaOperacionesSegurosBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaOperacionesSegurosBajaTypeArray(Index: Integer): RespuestaOperacionesSegurosBajaType;       
    procedure  SetRespuestaOperacionesSegurosBajaTypeArray(Index: Integer; const Item: RespuestaOperacionesSegurosBajaType);
    function   GetRespuestaOperacionesSegurosBajaTypeArrayLength: Integer;
    procedure  SetRespuestaOperacionesSegurosBajaTypeArrayLength(Len: Integer);

    property   RespuestaOperacionesSegurosBajaTypeArray[Index: Integer]: RespuestaOperacionesSegurosBajaType read GetRespuestaOperacionesSegurosBajaTypeArray write SetRespuestaOperacionesSegurosBajaTypeArray; default;
    property   Len: Integer read GetRespuestaOperacionesSegurosBajaTypeArrayLength write SetRespuestaOperacionesSegurosBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaOperacionesSegurosBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaOperacionesSeguros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaOperacionesSeguros = class(RespuestaLRBajaOperacionesSegurosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaAgenciasViajesType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaAgenciasViajesBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaAgenciasViajesBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaAgenciasViajesBajaType: Array_Of_RespuestaAgenciasViajesBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaAgenciasViajesBajaTypeArray(Index: Integer): RespuestaAgenciasViajesBajaType;       
    procedure  SetRespuestaAgenciasViajesBajaTypeArray(Index: Integer; const Item: RespuestaAgenciasViajesBajaType);
    function   GetRespuestaAgenciasViajesBajaTypeArrayLength: Integer;
    procedure  SetRespuestaAgenciasViajesBajaTypeArrayLength(Len: Integer);

    property   RespuestaAgenciasViajesBajaTypeArray[Index: Integer]: RespuestaAgenciasViajesBajaType read GetRespuestaAgenciasViajesBajaTypeArray write SetRespuestaAgenciasViajesBajaTypeArray; default;
    property   Len: Integer read GetRespuestaAgenciasViajesBajaTypeArrayLength write SetRespuestaAgenciasViajesBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaAgenciasViajesBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaAgenciasViajes, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaAgenciasViajes = class(RespuestaLRBajaAgenciasViajesType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaFEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaLRBajaFEmitidasType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaExpedidaBajaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaExpedidaBajaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaExpedidaBajaType: Array_Of_RespuestaExpedidaBajaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetRespuestaExpedidaBajaTypeArray(Index: Integer): RespuestaExpedidaBajaType;       
    procedure  SetRespuestaExpedidaBajaTypeArray(Index: Integer; const Item: RespuestaExpedidaBajaType);
    function   GetRespuestaExpedidaBajaTypeArrayLength: Integer;
    procedure  SetRespuestaExpedidaBajaTypeArrayLength(Len: Integer);

    property   RespuestaExpedidaBajaTypeArray[Index: Integer]: RespuestaExpedidaBajaType read GetRespuestaExpedidaBajaTypeArray write SetRespuestaExpedidaBajaTypeArray; default;
    property   Len: Integer read GetRespuestaExpedidaBajaTypeArrayLength write SetRespuestaExpedidaBajaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaExpedidaBajaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaFacturasEmitidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaLRBajaFacturasEmitidas = class(RespuestaLRBajaFEmitidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBajaFRecibidasPagosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBajaFRecibidasPagosType = class(RespuestaComunBajaType)
  private
    FRespuestaLinea: Array_Of_RespuestaRecibidaPagoType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaRecibidaPagoType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaRecibidaPagoType: Array_Of_RespuestaRecibidaPagoType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaRecibidaPagoTypeArray(Index: Integer): RespuestaRecibidaPagoType;       
    procedure  SetRespuestaRecibidaPagoTypeArray(Index: Integer; const Item: RespuestaRecibidaPagoType);
    function   GetRespuestaRecibidaPagoTypeArrayLength: Integer;
    procedure  SetRespuestaRecibidaPagoTypeArrayLength(Len: Integer);

    property   RespuestaRecibidaPagoTypeArray[Index: Integer]: RespuestaRecibidaPagoType read GetRespuestaRecibidaPagoTypeArray write SetRespuestaRecibidaPagoTypeArray; default;
    property   Len: Integer read GetRespuestaRecibidaPagoTypeArrayLength write SetRespuestaRecibidaPagoTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaRecibidaPagoType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaComunAltaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaComunAltaType = class(TRemotable)
  private
    FCSV: string;
    FCSV_Specified: boolean;
    FDatosPresentacion: DatosPresentacionType;
    FDatosPresentacion_Specified: boolean;
    FCabecera: CabeceraSii;
    FEstadoEnvio: EstadoEnvioType;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetDatosPresentacion(Index: Integer): DatosPresentacionType;
    procedure SetDatosPresentacion(Index: Integer; const ADatosPresentacionType: DatosPresentacionType);
    function  DatosPresentacion_Specified(Index: Integer): boolean;
    function  GetCabecera: CabeceraSii;
    procedure SetCabecera(const ACabeceraSii: CabeceraSii);
    function  GetEstadoEnvio: EstadoEnvioType;
    procedure SetEstadoEnvio(const AEstadoEnvioType: EstadoEnvioType);
  public
    destructor Destroy; override;
  published
    property CSV:               string                 Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property DatosPresentacion: DatosPresentacionType  Index (IS_OPTN) read GetDatosPresentacion write SetDatosPresentacion stored DatosPresentacion_Specified;
    property Cabecera:          CabeceraSii            read GetCabecera write SetCabecera;
    property EstadoEnvio:       EstadoEnvioType        read GetEstadoEnvio write SetEstadoEnvio;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLROComunitariasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLROComunitariasType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaComunitariaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaComunitariaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaComunitariaType: Array_Of_RespuestaComunitariaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaComunitariaTypeArray(Index: Integer): RespuestaComunitariaType;       
    procedure  SetRespuestaComunitariaTypeArray(Index: Integer; const Item: RespuestaComunitariaType);
    function   GetRespuestaComunitariaTypeArrayLength: Integer;
    procedure  SetRespuestaComunitariaTypeArrayLength(Len: Integer);

    property   RespuestaComunitariaTypeArray[Index: Integer]: RespuestaComunitariaType read GetRespuestaComunitariaTypeArray write SetRespuestaComunitariaTypeArray; default;
    property   Len: Integer read GetRespuestaComunitariaTypeArrayLength write SetRespuestaComunitariaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaComunitariaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRDetOperacionesIntracomunitarias, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRDetOperacionesIntracomunitarias = class(RespuestaLROComunitariasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRAgenciasViajesType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaAgenciasViajesType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaAgenciasViajesType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaAgenciasViajesType: Array_Of_RespuestaAgenciasViajesType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaAgenciasViajesTypeArray(Index: Integer): RespuestaAgenciasViajesType;       
    procedure  SetRespuestaAgenciasViajesTypeArray(Index: Integer; const Item: RespuestaAgenciasViajesType);
    function   GetRespuestaAgenciasViajesTypeArrayLength: Integer;
    procedure  SetRespuestaAgenciasViajesTypeArrayLength(Len: Integer);

    property   RespuestaAgenciasViajesTypeArray[Index: Integer]: RespuestaAgenciasViajesType read GetRespuestaAgenciasViajesTypeArray write SetRespuestaAgenciasViajesTypeArray; default;
    property   Len: Integer read GetRespuestaAgenciasViajesTypeArrayLength write SetRespuestaAgenciasViajesTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaAgenciasViajesType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRAgenciasViajes, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRAgenciasViajes = class(RespuestaLRAgenciasViajesType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRIMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRIMetalicoType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaMetalicoType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaMetalicoType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaMetalicoType: Array_Of_RespuestaMetalicoType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaMetalicoTypeArray(Index: Integer): RespuestaMetalicoType;       
    procedure  SetRespuestaMetalicoTypeArray(Index: Integer; const Item: RespuestaMetalicoType);
    function   GetRespuestaMetalicoTypeArrayLength: Integer;
    procedure  SetRespuestaMetalicoTypeArrayLength(Len: Integer);

    property   RespuestaMetalicoTypeArray[Index: Integer]: RespuestaMetalicoType read GetRespuestaMetalicoTypeArray write SetRespuestaMetalicoTypeArray; default;
    property   Len: Integer read GetRespuestaMetalicoTypeArrayLength write SetRespuestaMetalicoTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaMetalicoType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRCobrosMetalico, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRCobrosMetalico = class(RespuestaLRIMetalicoType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBienesInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBienesInversionType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaBienType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaBienType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaBienType: Array_Of_RespuestaBienType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaBienTypeArray(Index: Integer): RespuestaBienType;       
    procedure  SetRespuestaBienTypeArray(Index: Integer; const Item: RespuestaBienType);
    function   GetRespuestaBienTypeArrayLength: Integer;
    procedure  SetRespuestaBienTypeArrayLength(Len: Integer);

    property   RespuestaBienTypeArray[Index: Integer]: RespuestaBienType read GetRespuestaBienTypeArray write SetRespuestaBienTypeArray; default;
    property   Len: Integer read GetRespuestaBienTypeArrayLength write SetRespuestaBienTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaBienType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRBienesInversion, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRBienesInversion = class(RespuestaLRBienesInversionType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRFRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRFRecibidasType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaRecibidaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaRecibidaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaRecibidaType: Array_Of_RespuestaRecibidaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaRecibidaTypeArray(Index: Integer): RespuestaRecibidaType;       
    procedure  SetRespuestaRecibidaTypeArray(Index: Integer; const Item: RespuestaRecibidaType);
    function   GetRespuestaRecibidaTypeArrayLength: Integer;
    procedure  SetRespuestaRecibidaTypeArrayLength(Len: Integer);

    property   RespuestaRecibidaTypeArray[Index: Integer]: RespuestaRecibidaType read GetRespuestaRecibidaTypeArray write SetRespuestaRecibidaTypeArray; default;
    property   Len: Integer read GetRespuestaRecibidaTypeArrayLength write SetRespuestaRecibidaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaRecibidaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRFacturasRecibidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRFacturasRecibidas = class(RespuestaLRFRecibidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRVentaBienesConsignaType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaVentaBienesConsignaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaVentaBienesConsignaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaVentaBienesConsignaType: Array_Of_RespuestaVentaBienesConsignaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaVentaBienesConsignaType2Array(Index: Integer): RespuestaVentaBienesConsignaType2;       
    procedure  SetRespuestaVentaBienesConsignaType2Array(Index: Integer; const Item: RespuestaVentaBienesConsignaType2);
    function   GetRespuestaVentaBienesConsignaType2ArrayLength: Integer;
    procedure  SetRespuestaVentaBienesConsignaType2ArrayLength(Len: Integer);

    property   RespuestaVentaBienesConsignaType2Array[Index: Integer]: RespuestaVentaBienesConsignaType2 read GetRespuestaVentaBienesConsignaType2Array write SetRespuestaVentaBienesConsignaType2Array; default;
    property   Len: Integer read GetRespuestaVentaBienesConsignaType2ArrayLength write SetRespuestaVentaBienesConsignaType2ArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaVentaBienesConsignaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRVentaBienesConsigna, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLRVentaBienesConsigna = class(RespuestaLRVentaBienesConsignaType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRFEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaLRFEmitidasType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaExpedidaType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaExpedidaType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaExpedidaType: Array_Of_RespuestaExpedidaType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetRespuestaExpedidaTypeArray(Index: Integer): RespuestaExpedidaType;       
    procedure  SetRespuestaExpedidaTypeArray(Index: Integer; const Item: RespuestaExpedidaType);
    function   GetRespuestaExpedidaTypeArrayLength: Integer;
    procedure  SetRespuestaExpedidaTypeArrayLength(Len: Integer);

    property   RespuestaExpedidaTypeArray[Index: Integer]: RespuestaExpedidaType read GetRespuestaExpedidaTypeArray write SetRespuestaExpedidaTypeArray; default;
    property   Len: Integer read GetRespuestaExpedidaTypeArrayLength write SetRespuestaExpedidaTypeArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaExpedidaType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLRFacturasEmitidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaLRFacturasEmitidas = class(RespuestaLRFEmitidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaLROperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLROperacionesSegurosType = class(RespuestaComunAltaType)
  private
    FRespuestaLinea: Array_Of_RespuestaOperacionesSegurosType;
    FRespuestaLinea_Specified: boolean;
    function  GetRespuestaLinea(Index: Integer): Array_Of_RespuestaOperacionesSegurosType;
    procedure SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaOperacionesSegurosType: Array_Of_RespuestaOperacionesSegurosType);
    function  RespuestaLinea_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRespuestaOperacionesSegurosType2Array(Index: Integer): RespuestaOperacionesSegurosType2;       
    procedure  SetRespuestaOperacionesSegurosType2Array(Index: Integer; const Item: RespuestaOperacionesSegurosType2);
    function   GetRespuestaOperacionesSegurosType2ArrayLength: Integer;
    procedure  SetRespuestaOperacionesSegurosType2ArrayLength(Len: Integer);

    property   RespuestaOperacionesSegurosType2Array[Index: Integer]: RespuestaOperacionesSegurosType2 read GetRespuestaOperacionesSegurosType2Array write SetRespuestaOperacionesSegurosType2Array; default;
    property   Len: Integer read GetRespuestaOperacionesSegurosType2ArrayLength write SetRespuestaOperacionesSegurosType2ArrayLength;
  published
    property RespuestaLinea: Array_Of_RespuestaOperacionesSegurosType  Index (IS_OPTN or IS_UNBD) read GetRespuestaLinea write SetRespuestaLinea stored RespuestaLinea_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaLROperacionesSeguros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaLROperacionesSeguros = class(RespuestaLROperacionesSegurosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RegistroSii, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  RegistroSii = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion: PeriodoLiquidacion);
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion: PeriodoLiquidacion  read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
  end;

  NIFType         =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura = class(TRemotable)
  private
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NIF:    NIFType     Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro: IDOtroType  Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;

  Timestamp       =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : DatosPresentacion2Type, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DatosPresentacion2Type = class(TRemotable)
  private
    FNIFPresentador: NIFType;
    FTimestampPresentacion: Timestamp;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetNIFPresentador: NIFType;
    procedure SetNIFPresentador(const ANIFType: NIFType);
    function  GetTimestampPresentacion: Timestamp;
    procedure SetTimestampPresentacion(const ATimestamp: Timestamp);
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  published
    property NIFPresentador:        NIFType    read GetNIFPresentador write SetNIFPresentador;
    property TimestampPresentacion: Timestamp  read GetTimestampPresentacion write SetTimestampPresentacion;
    property CSV:                   string     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RegistroSiiImputacion, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  RegistroSiiImputacion = class(TRemotable)
  private
    FPeriodoImputacion: PeriodoImputacion;
    function  GetPeriodoImputacion: PeriodoImputacion;
    procedure SetPeriodoImputacion(const APeriodoImputacion: PeriodoImputacion);
  public
    destructor Destroy; override;
  published
    property PeriodoImputacion: PeriodoImputacion  read GetPeriodoImputacion write SetPeriodoImputacion;
  end;

  TextMax120Type  =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : PersonaFisicaJuridicaUnicaESType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  PersonaFisicaJuridicaUnicaESType = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : ContraparteConsultaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  ContraparteConsultaType = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro:      IDOtroType      Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;



  // ************************************************************************ //
  // XML       : PersonaFisicaJuridicaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  PersonaFisicaJuridicaType = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIFRepresentante: NIFType;
    FNIFRepresentante_Specified: boolean;
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIFRepresentante(Index: Integer): NIFType;
    procedure SetNIFRepresentante(Index: Integer; const ANIFType: NIFType);
    function  NIFRepresentante_Specified(Index: Integer): boolean;
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NombreRazon:      TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIFRepresentante: NIFType         Index (IS_OPTN) read GetNIFRepresentante write SetNIFRepresentante stored NIFRepresentante_Specified;
    property NIF:              NIFType         Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro:           IDOtroType      Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;



  // ************************************************************************ //
  // XML       : DepositoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DepositoType = class(TRemotable)
  private
    FDepositario: PersonaFisicaJuridicaType;
    FDepositario_Specified: boolean;
    FDireccionAlmacen: TextMax120Type;
    function  GetDepositario(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetDepositario(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  Depositario_Specified(Index: Integer): boolean;
    function  GetDireccionAlmacen: TextMax120Type;
    procedure SetDireccionAlmacen(const ATextMax120Type: TextMax120Type);
  public
    destructor Destroy; override;
  published
    property Depositario:      PersonaFisicaJuridicaType  Index (IS_OPTN) read GetDepositario write SetDepositario stored Depositario_Specified;
    property DireccionAlmacen: TextMax120Type             read GetDireccionAlmacen write SetDireccionAlmacen;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura2 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro:      IDOtroType      Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura3 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro:      IDOtroType      Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura4 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura5 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro:      IDOtroType      Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura6 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    FNIF_Specified: boolean;
    FIDOtro: IDOtroType;
    FIDOtro_Specified: boolean;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF(Index: Integer): NIFType;
    procedure SetNIF(Index: Integer; const ANIFType: NIFType);
    function  NIF_Specified(Index: Integer): boolean;
    function  GetIDOtro(Index: Integer): IDOtroType;
    procedure SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
    function  IDOtro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         Index (IS_OPTN) read GetNIF write SetNIF stored NIF_Specified;
    property IDOtro:      IDOtroType      Index (IS_OPTN) read GetIDOtro write SetIDOtro stored IDOtro_Specified;
  end;

  YearType        =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  PeriodoLiquidacion = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoImputacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  PeriodoImputacion = class(TRemotable)
  private
    FEjercicioImputacion: YearType;
    FPeriodoImputacion: TipoPeriodoType;
    function  GetEjercicioImputacion: YearType;
    procedure SetEjercicioImputacion(const AYearType: YearType);
    function  GetPeriodoImputacion: TipoPeriodoType;
    procedure SetPeriodoImputacion(const ATipoPeriodoType: TipoPeriodoType);
  published
    property EjercicioImputacion: YearType         read GetEjercicioImputacion write SetEjercicioImputacion;
    property PeriodoImputacion:   TipoPeriodoType  read GetPeriodoImputacion write SetPeriodoImputacion;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion2 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion3 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion4 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion5 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion6 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion7 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion8 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  PeriodoLiquidacion9 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  PeriodoLiquidacion10 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : PeriodoLiquidacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  PeriodoLiquidacion11 = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
  published
    property Ejercicio: YearType         read GetEjercicio write SetEjercicio;
    property Periodo:   TipoPeriodoType  read GetPeriodo write SetPeriodo;
  end;



  // ************************************************************************ //
  // XML       : ConsultaInformacion, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  ConsultaInformacion = class(TRemotable)
  private
    FCabecera: CabeceraConsultaSii;
    function  GetCabecera: CabeceraConsultaSii;
    procedure SetCabecera(const ACabeceraConsultaSii: CabeceraConsultaSii);
  public
    destructor Destroy; override;
  published
    property Cabecera: CabeceraConsultaSii  read GetCabecera write SetCabecera;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaFacturaCobrosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaFacturaCobrosType = class(ConsultaInformacion)
  private
    FIDFactura: IDFacturaExpedidaBCType;
    FIndicadorPaginacion: IndicadorPaginacionType;
    FResultadoConsulta: ResultadoConsultaType;
    function  GetIDFactura: IDFacturaExpedidaBCType;
    procedure SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
    function  GetIndicadorPaginacion: IndicadorPaginacionType;
    procedure SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  public
    destructor Destroy; override;
  published
    property IDFactura:           IDFacturaExpedidaBCType  read GetIDFactura write SetIDFactura;
    property IndicadorPaginacion: IndicadorPaginacionType  read GetIndicadorPaginacion write SetIndicadorPaginacion;
    property ResultadoConsulta:   ResultadoConsultaType    read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRVentaBVType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRVentaBVType = class(ConsultaInformacion)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    FIndicadorPaginacion: IndicadorPaginacionType;
    FResultadoConsulta: ResultadoConsultaType;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
    function  GetIndicadorPaginacion: IndicadorPaginacionType;
    procedure SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  published
    property Ejercicio:           YearType                 read GetEjercicio write SetEjercicio;
    property Periodo:             TipoPeriodoType          read GetPeriodo write SetPeriodo;
    property IndicadorPaginacion: IndicadorPaginacionType  read GetIndicadorPaginacion write SetIndicadorPaginacion;
    property ResultadoConsulta:   ResultadoConsultaType    read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRVentaBienesConsignaType = class(RespuestaConsultaLRVentaBVType)
  private
    FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna: Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType;
    FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer): Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType;
    procedure SetRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer; const AArray_Of_RegistroRespuestaConsultaVentaBienesConsignaType: Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType);
    function  RegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaVentaBienesConsignaTypeArray(Index: Integer): RegistroRespuestaConsultaVentaBienesConsignaType;       
    procedure  SetRegistroRespuestaConsultaVentaBienesConsignaTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaVentaBienesConsignaType);
    function   GetRegistroRespuestaConsultaVentaBienesConsignaTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaVentaBienesConsignaTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaVentaBienesConsignaTypeArray[Index: Integer]: RegistroRespuestaConsultaVentaBienesConsignaType read GetRegistroRespuestaConsultaVentaBienesConsignaTypeArray write SetRegistroRespuestaConsultaVentaBienesConsignaTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaVentaBienesConsignaTypeArrayLength write SetRegistroRespuestaConsultaVentaBienesConsignaTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna: Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna write SetRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna stored RegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRVentaBienesConsigna, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRVentaBienesConsigna = class(RespuestaConsultaLRVentaBienesConsignaType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaInmueblesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaInmueblesType = class(ConsultaInformacion)
  private
    FIDFactura: IDFacturaExpedidaBCType;
    FResultadoConsulta: ResultadoConsultaType;
    function  GetIDFactura: IDFacturaExpedidaBCType;
    procedure SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  public
    destructor Destroy; override;
  published
    property IDFactura:         IDFacturaExpedidaBCType  read GetIDFactura write SetIDFactura;
    property ResultadoConsulta: ResultadoConsultaType    read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaInmueblesAdicionalesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaInmueblesAdicionalesType = class(RespuestaConsultaInmueblesType)
  private
    FRegistroRespuestaConsultaInmueblesAdicionales: Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType;
    FRegistroRespuestaConsultaInmueblesAdicionales_Specified: boolean;
    function  GetRegistroRespuestaConsultaInmueblesAdicionales(Index: Integer): Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType;
    procedure SetRegistroRespuestaConsultaInmueblesAdicionales(Index: Integer; const AArray_Of_RegistroRespuestaConsultaInmueblesAdicionalesType: Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType);
    function  RegistroRespuestaConsultaInmueblesAdicionales_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaInmueblesAdicionalesTypeArray(Index: Integer): RegistroRespuestaConsultaInmueblesAdicionalesType;       
    procedure  SetRegistroRespuestaConsultaInmueblesAdicionalesTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaInmueblesAdicionalesType);
    function   GetRegistroRespuestaConsultaInmueblesAdicionalesTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaInmueblesAdicionalesTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaInmueblesAdicionalesTypeArray[Index: Integer]: RegistroRespuestaConsultaInmueblesAdicionalesType read GetRegistroRespuestaConsultaInmueblesAdicionalesTypeArray write SetRegistroRespuestaConsultaInmueblesAdicionalesTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaInmueblesAdicionalesTypeArrayLength write SetRegistroRespuestaConsultaInmueblesAdicionalesTypeArrayLength;
  published
    property RegistroRespuestaConsultaInmueblesAdicionales: Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaInmueblesAdicionales write SetRegistroRespuestaConsultaInmueblesAdicionales stored RegistroRespuestaConsultaInmueblesAdicionales_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaInmueblesAdicionales, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaInmueblesAdicionales = class(RespuestaConsultaInmueblesAdicionalesType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaFacturaPagosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaFacturaPagosType = class(ConsultaInformacion)
  private
    FIDFactura: IDFacturaRecibidaNombreBCType;
    FIndicadorPaginacion: IndicadorPaginacionType;
    FResultadoConsulta: ResultadoConsultaType;
    function  GetIDFactura: IDFacturaRecibidaNombreBCType;
    procedure SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
    function  GetIndicadorPaginacion: IndicadorPaginacionType;
    procedure SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  public
    destructor Destroy; override;
  published
    property IDFactura:           IDFacturaRecibidaNombreBCType  read GetIDFactura write SetIDFactura;
    property IndicadorPaginacion: IndicadorPaginacionType        read GetIndicadorPaginacion write SetIndicadorPaginacion;
    property ResultadoConsulta:   ResultadoConsultaType          read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : SuministroInformacion, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  SuministroInformacion = class(TRemotable)
  private
    FCabecera: CabeceraSii;
    function  GetCabecera: CabeceraSii;
    procedure SetCabecera(const ACabeceraSii: CabeceraSii);
  public
    destructor Destroy; override;
  published
    property Cabecera: CabeceraSii  read GetCabecera write SetCabecera;
  end;



  // ************************************************************************ //
  // XML       : SuministroInformacionBaja, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  SuministroInformacionBaja = class(TRemotable)
  private
    FCabecera: CabeceraSiiBaja;
    function  GetCabecera: CabeceraSiiBaja;
    procedure SetCabecera(const ACabeceraSiiBaja: CabeceraSiiBaja);
  public
    destructor Destroy; override;
  published
    property Cabecera: CabeceraSiiBaja  read GetCabecera write SetCabecera;
  end;



  // ************************************************************************ //
  // XML       : PersonaFisicaJuridicaESType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  PersonaFisicaJuridicaESType = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIFRepresentante: NIFType;
    FNIFRepresentante_Specified: boolean;
    FNIF: NIFType;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIFRepresentante(Index: Integer): NIFType;
    procedure SetNIFRepresentante(Index: Integer; const ANIFType: NIFType);
    function  NIFRepresentante_Specified(Index: Integer): boolean;
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NombreRazon:      TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIFRepresentante: NIFType         Index (IS_OPTN) read GetNIFRepresentante write SetNIFRepresentante stored NIFRepresentante_Specified;
    property NIF:              NIFType         read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : DatosPresentacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DatosPresentacionType = class(TRemotable)
  private
    FNIFPresentador: NIFType;
    FTimestampPresentacion: Timestamp;
    function  GetNIFPresentador: NIFType;
    procedure SetNIFPresentador(const ANIFType: NIFType);
    function  GetTimestampPresentacion: Timestamp;
    procedure SetTimestampPresentacion(const ATimestamp: Timestamp);
  published
    property NIFPresentador:        NIFType    read GetNIFPresentador write SetNIFPresentador;
    property TimestampPresentacion: Timestamp  read GetTimestampPresentacion write SetTimestampPresentacion;
  end;



  // ************************************************************************ //
  // XML       : ConsultaInformacionCliente, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  ConsultaInformacionCliente = class(TRemotable)
  private
    FCabecera: CabeceraConsultaSiiCliente;
    function  GetCabecera: CabeceraConsultaSiiCliente;
    procedure SetCabecera(const ACabeceraConsultaSiiCliente: CabeceraConsultaSiiCliente);
  public
    destructor Destroy; override;
  published
    property Cabecera: CabeceraConsultaSiiCliente  read GetCabecera write SetCabecera;
  end;



  // ************************************************************************ //
  // XML       : CabeceraConsultaSiiCliente, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  CabeceraConsultaSiiCliente = class(TRemotable)
  private
    FIDVersionSii: VersionSiiType;
    FTitularLRFE: PersonaFisicaJuridicaUnicaESType;
    function  GetIDVersionSii: VersionSiiType;
    procedure SetIDVersionSii(const AVersionSiiType: VersionSiiType);
    function  GetTitularLRFE: PersonaFisicaJuridicaUnicaESType;
    procedure SetTitularLRFE(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
  public
    destructor Destroy; override;
  published
    property IDVersionSii: VersionSiiType                    read GetIDVersionSii write SetIDVersionSii;
    property TitularLRFE:  PersonaFisicaJuridicaUnicaESType  read GetTitularLRFE write SetTitularLRFE;
  end;



  // ************************************************************************ //
  // XML       : CabeceraSii, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  CabeceraSii = class(TRemotable)
  private
    FIDVersionSii: VersionSiiType;
    FTitular: PersonaFisicaJuridicaESType;
    FTipoComunicacion: ClaveTipoComunicacionType;
    function  GetIDVersionSii: VersionSiiType;
    procedure SetIDVersionSii(const AVersionSiiType: VersionSiiType);
    function  GetTitular: PersonaFisicaJuridicaESType;
    procedure SetTitular(const APersonaFisicaJuridicaESType: PersonaFisicaJuridicaESType);
    function  GetTipoComunicacion: ClaveTipoComunicacionType;
    procedure SetTipoComunicacion(const AClaveTipoComunicacionType: ClaveTipoComunicacionType);
  public
    destructor Destroy; override;
  published
    property IDVersionSii:     VersionSiiType               read GetIDVersionSii write SetIDVersionSii;
    property Titular:          PersonaFisicaJuridicaESType  read GetTitular write SetTitular;
    property TipoComunicacion: ClaveTipoComunicacionType    read GetTipoComunicacion write SetTipoComunicacion;
  end;



  // ************************************************************************ //
  // XML       : CabeceraConsultaSii, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  CabeceraConsultaSii = class(TRemotable)
  private
    FIDVersionSii: VersionSiiType;
    FTitular: PersonaFisicaJuridicaUnicaESType;
    function  GetIDVersionSii: VersionSiiType;
    procedure SetIDVersionSii(const AVersionSiiType: VersionSiiType);
    function  GetTitular: PersonaFisicaJuridicaUnicaESType;
    procedure SetTitular(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
  public
    destructor Destroy; override;
  published
    property IDVersionSii: VersionSiiType                    read GetIDVersionSii write SetIDVersionSii;
    property Titular:      PersonaFisicaJuridicaUnicaESType  read GetTitular write SetTitular;
  end;



  // ************************************************************************ //
  // XML       : CabeceraSiiBaja, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  CabeceraSiiBaja = class(TRemotable)
  private
    FIDVersionSii: VersionSiiType;
    FTitular: PersonaFisicaJuridicaESType;
    function  GetIDVersionSii: VersionSiiType;
    procedure SetIDVersionSii(const AVersionSiiType: VersionSiiType);
    function  GetTitular: PersonaFisicaJuridicaESType;
    procedure SetTitular(const APersonaFisicaJuridicaESType: PersonaFisicaJuridicaESType);
  public
    destructor Destroy; override;
  published
    property IDVersionSii: VersionSiiType               read GetIDVersionSii write SetIDVersionSii;
    property Titular:      PersonaFisicaJuridicaESType  read GetTitular write SetTitular;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura7 = class(TRemotable)
  private
    FNIF: NIFType;
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NIF: NIFType  read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura8 = class(TRemotable)
  private
    FNIF: NIFType;
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NIF: NIFType  read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : FacturasAgrupadas, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  FacturasAgrupadas2 = class(TRemotable)
  private
    FIDFacturaAgrupada: Array_Of_IDFacturaARType;
    function  GetIDFacturaAgrupada(Index: Integer): Array_Of_IDFacturaARType;
    procedure SetIDFacturaAgrupada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
  public
    destructor Destroy; override;
    function   GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;       
    procedure  SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
    function   GetIDFacturaARTypeArrayLength: Integer;
    procedure  SetIDFacturaARTypeArrayLength(Len: Integer);

    property   IDFacturaARTypeArray[Index: Integer]: IDFacturaARType read GetIDFacturaARTypeArray write SetIDFacturaARTypeArray; default;
    property   Len: Integer read GetIDFacturaARTypeArrayLength write SetIDFacturaARTypeArrayLength;
  published
    property IDFacturaAgrupada: Array_Of_IDFacturaARType  Index (IS_UNBD) read GetIDFacturaAgrupada write SetIDFacturaAgrupada;
  end;



  // ************************************************************************ //
  // XML       : FacturasRectificadas, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  FacturasRectificadas2 = class(TRemotable)
  private
    FIDFacturaRectificada: Array_Of_IDFacturaARType;
    function  GetIDFacturaRectificada(Index: Integer): Array_Of_IDFacturaARType;
    procedure SetIDFacturaRectificada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
  public
    destructor Destroy; override;
    function   GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;       
    procedure  SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
    function   GetIDFacturaARTypeArrayLength: Integer;
    procedure  SetIDFacturaARTypeArrayLength(Len: Integer);

    property   IDFacturaARTypeArray[Index: Integer]: IDFacturaARType read GetIDFacturaARTypeArray write SetIDFacturaARTypeArray; default;
    property   Len: Integer read GetIDFacturaARTypeArrayLength write SetIDFacturaARTypeArrayLength;
  published
    property IDFacturaRectificada: Array_Of_IDFacturaARType  Index (IS_UNBD) read GetIDFacturaRectificada write SetIDFacturaRectificada;
  end;

  fecha           =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : RangoFechaPresentacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  RangoFechaPresentacionType = class(TRemotable)
  private
    FDesde: fecha;
    FDesde_Specified: boolean;
    FHasta: fecha;
    FHasta_Specified: boolean;
    function  GetDesde(Index: Integer): fecha;
    procedure SetDesde(Index: Integer; const Afecha: fecha);
    function  Desde_Specified(Index: Integer): boolean;
    function  GetHasta(Index: Integer): fecha;
    procedure SetHasta(Index: Integer; const Afecha: fecha);
    function  Hasta_Specified(Index: Integer): boolean;
  published
    property Desde: fecha  Index (IS_OPTN) read GetDesde write SetDesde stored Desde_Specified;
    property Hasta: fecha  Index (IS_OPTN) read GetHasta write SetHasta stored Hasta_Specified;
  end;



  // ************************************************************************ //
  // XML       : RangoFechaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  RangoFechaType = class(TRemotable)
  private
    FDesde: fecha;
    FDesde_Specified: boolean;
    FHasta: fecha;
    FHasta_Specified: boolean;
    function  GetDesde(Index: Integer): fecha;
    procedure SetDesde(Index: Integer; const Afecha: fecha);
    function  Desde_Specified(Index: Integer): boolean;
    function  GetHasta(Index: Integer): fecha;
    procedure SetHasta(Index: Integer; const Afecha: fecha);
    function  Hasta_Specified(Index: Integer): boolean;
  published
    property Desde: fecha  Index (IS_OPTN) read GetDesde write SetDesde stored Desde_Specified;
    property Hasta: fecha  Index (IS_OPTN) read GetHasta write SetHasta stored Hasta_Specified;
  end;

  Tipo2_2Type     =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }
  ImporteSgn12_2Type =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : DesgloseRectificacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DesgloseRectificacionType = class(TRemotable)
  private
    FBaseRectificada: ImporteSgn12_2Type;
    FCuotaRectificada: ImporteSgn12_2Type;
    FCuotaRecargoRectificado: ImporteSgn12_2Type;
    FCuotaRecargoRectificado_Specified: boolean;
    function  GetBaseRectificada: ImporteSgn12_2Type;
    procedure SetBaseRectificada(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetCuotaRectificada: ImporteSgn12_2Type;
    procedure SetCuotaRectificada(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetCuotaRecargoRectificado(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaRecargoRectificado(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaRecargoRectificado_Specified(Index: Integer): boolean;
  published
    property BaseRectificada:         ImporteSgn12_2Type  read GetBaseRectificada write SetBaseRectificada;
    property CuotaRectificada:        ImporteSgn12_2Type  read GetCuotaRectificada write SetCuotaRectificada;
    property CuotaRecargoRectificado: ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaRecargoRectificado write SetCuotaRecargoRectificado stored CuotaRecargoRectificado_Specified;
  end;



  // ************************************************************************ //
  // XML       : NoSujetaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  NoSujetaType = class(TRemotable)
  private
    FImportePorArticulos7_14_Otros: ImporteSgn12_2Type;
    FImportePorArticulos7_14_Otros_Specified: boolean;
    FImporteTAIReglasLocalizacion: ImporteSgn12_2Type;
    FImporteTAIReglasLocalizacion_Specified: boolean;
    function  GetImportePorArticulos7_14_Otros(Index: Integer): ImporteSgn12_2Type;
    procedure SetImportePorArticulos7_14_Otros(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImportePorArticulos7_14_Otros_Specified(Index: Integer): boolean;
    function  GetImporteTAIReglasLocalizacion(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTAIReglasLocalizacion(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTAIReglasLocalizacion_Specified(Index: Integer): boolean;
  published
    property ImportePorArticulos7_14_Otros: ImporteSgn12_2Type  Index (IS_OPTN) read GetImportePorArticulos7_14_Otros write SetImportePorArticulos7_14_Otros stored ImportePorArticulos7_14_Otros_Specified;
    property ImporteTAIReglasLocalizacion:  ImporteSgn12_2Type  Index (IS_OPTN) read GetImporteTAIReglasLocalizacion write SetImporteTAIReglasLocalizacion stored ImporteTAIReglasLocalizacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : DetalleIVAEmitidaPrestacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DetalleIVAEmitidaPrestacionType = class(TRemotable)
  private
    FTipoImpositivo: Tipo2_2Type;
    FTipoImpositivo_Specified: boolean;
    FBaseImponible: ImporteSgn12_2Type;
    FCuotaRepercutida: ImporteSgn12_2Type;
    FCuotaRepercutida_Specified: boolean;
    function  GetTipoImpositivo(Index: Integer): Tipo2_2Type;
    procedure SetTipoImpositivo(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  TipoImpositivo_Specified(Index: Integer): boolean;
    function  GetBaseImponible: ImporteSgn12_2Type;
    procedure SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetCuotaRepercutida(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaRepercutida(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaRepercutida_Specified(Index: Integer): boolean;
  published
    property TipoImpositivo:   Tipo2_2Type         Index (IS_OPTN) read GetTipoImpositivo write SetTipoImpositivo stored TipoImpositivo_Specified;
    property BaseImponible:    ImporteSgn12_2Type  read GetBaseImponible write SetBaseImponible;
    property CuotaRepercutida: ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaRepercutida write SetCuotaRepercutida stored CuotaRepercutida_Specified;
  end;



  // ************************************************************************ //
  // XML       : DetalleIVARecibidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DetalleIVARecibidaType = class(TRemotable)
  private
    FTipoImpositivo: Tipo2_2Type;
    FTipoImpositivo_Specified: boolean;
    FBaseImponible: ImporteSgn12_2Type;
    FCuotaSoportada: ImporteSgn12_2Type;
    FCuotaSoportada_Specified: boolean;
    FTipoRecargoEquivalencia: Tipo2_2Type;
    FTipoRecargoEquivalencia_Specified: boolean;
    FCuotaRecargoEquivalencia: ImporteSgn12_2Type;
    FCuotaRecargoEquivalencia_Specified: boolean;
    FPorcentCompensacionREAGYP: Tipo2_2Type;
    FPorcentCompensacionREAGYP_Specified: boolean;
    FImporteCompensacionREAGYP: ImporteSgn12_2Type;
    FImporteCompensacionREAGYP_Specified: boolean;
    FBienInversion: BienInversionType;
    FBienInversion_Specified: boolean;
    function  GetTipoImpositivo(Index: Integer): Tipo2_2Type;
    procedure SetTipoImpositivo(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  TipoImpositivo_Specified(Index: Integer): boolean;
    function  GetBaseImponible: ImporteSgn12_2Type;
    procedure SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetCuotaSoportada(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaSoportada(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaSoportada_Specified(Index: Integer): boolean;
    function  GetTipoRecargoEquivalencia(Index: Integer): Tipo2_2Type;
    procedure SetTipoRecargoEquivalencia(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  TipoRecargoEquivalencia_Specified(Index: Integer): boolean;
    function  GetCuotaRecargoEquivalencia(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
    function  GetPorcentCompensacionREAGYP(Index: Integer): Tipo2_2Type;
    procedure SetPorcentCompensacionREAGYP(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  PorcentCompensacionREAGYP_Specified(Index: Integer): boolean;
    function  GetImporteCompensacionREAGYP(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteCompensacionREAGYP(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteCompensacionREAGYP_Specified(Index: Integer): boolean;
    function  GetBienInversion(Index: Integer): BienInversionType;
    procedure SetBienInversion(Index: Integer; const ABienInversionType: BienInversionType);
    function  BienInversion_Specified(Index: Integer): boolean;
  published
    property TipoImpositivo:            Tipo2_2Type         Index (IS_OPTN) read GetTipoImpositivo write SetTipoImpositivo stored TipoImpositivo_Specified;
    property BaseImponible:             ImporteSgn12_2Type  read GetBaseImponible write SetBaseImponible;
    property CuotaSoportada:            ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaSoportada write SetCuotaSoportada stored CuotaSoportada_Specified;
    property TipoRecargoEquivalencia:   Tipo2_2Type         Index (IS_OPTN) read GetTipoRecargoEquivalencia write SetTipoRecargoEquivalencia stored TipoRecargoEquivalencia_Specified;
    property CuotaRecargoEquivalencia:  ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaRecargoEquivalencia write SetCuotaRecargoEquivalencia stored CuotaRecargoEquivalencia_Specified;
    property PorcentCompensacionREAGYP: Tipo2_2Type         Index (IS_OPTN) read GetPorcentCompensacionREAGYP write SetPorcentCompensacionREAGYP stored PorcentCompensacionREAGYP_Specified;
    property ImporteCompensacionREAGYP: ImporteSgn12_2Type  Index (IS_OPTN) read GetImporteCompensacionREAGYP write SetImporteCompensacionREAGYP stored ImporteCompensacionREAGYP_Specified;
    property BienInversion:             BienInversionType   Index (IS_OPTN) read GetBienInversion write SetBienInversion stored BienInversion_Specified;
  end;



  // ************************************************************************ //
  // XML       : DetalleExentaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DetalleExentaType = class(TRemotable)
  private
    FCausaExencion: CausaExencionType;
    FCausaExencion_Specified: boolean;
    FBaseImponible: ImporteSgn12_2Type;
    function  GetCausaExencion(Index: Integer): CausaExencionType;
    procedure SetCausaExencion(Index: Integer; const ACausaExencionType: CausaExencionType);
    function  CausaExencion_Specified(Index: Integer): boolean;
    function  GetBaseImponible: ImporteSgn12_2Type;
    procedure SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
  published
    property CausaExencion: CausaExencionType   Index (IS_OPTN) read GetCausaExencion write SetCausaExencion stored CausaExencion_Specified;
    property BaseImponible: ImporteSgn12_2Type  read GetBaseImponible write SetBaseImponible;
  end;



  // ************************************************************************ //
  // XML       : DetalleIVAEmitidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DetalleIVAEmitidaType = class(TRemotable)
  private
    FTipoImpositivo: Tipo2_2Type;
    FTipoImpositivo_Specified: boolean;
    FBaseImponible: ImporteSgn12_2Type;
    FCuotaRepercutida: ImporteSgn12_2Type;
    FCuotaRepercutida_Specified: boolean;
    FTipoRecargoEquivalencia: Tipo2_2Type;
    FTipoRecargoEquivalencia_Specified: boolean;
    FCuotaRecargoEquivalencia: ImporteSgn12_2Type;
    FCuotaRecargoEquivalencia_Specified: boolean;
    function  GetTipoImpositivo(Index: Integer): Tipo2_2Type;
    procedure SetTipoImpositivo(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  TipoImpositivo_Specified(Index: Integer): boolean;
    function  GetBaseImponible: ImporteSgn12_2Type;
    procedure SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetCuotaRepercutida(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaRepercutida(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaRepercutida_Specified(Index: Integer): boolean;
    function  GetTipoRecargoEquivalencia(Index: Integer): Tipo2_2Type;
    procedure SetTipoRecargoEquivalencia(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  TipoRecargoEquivalencia_Specified(Index: Integer): boolean;
    function  GetCuotaRecargoEquivalencia(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
  published
    property TipoImpositivo:           Tipo2_2Type         Index (IS_OPTN) read GetTipoImpositivo write SetTipoImpositivo stored TipoImpositivo_Specified;
    property BaseImponible:            ImporteSgn12_2Type  read GetBaseImponible write SetBaseImponible;
    property CuotaRepercutida:         ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaRepercutida write SetCuotaRepercutida stored CuotaRepercutida_Specified;
    property TipoRecargoEquivalencia:  Tipo2_2Type         Index (IS_OPTN) read GetTipoRecargoEquivalencia write SetTipoRecargoEquivalencia stored TipoRecargoEquivalencia_Specified;
    property CuotaRecargoEquivalencia: ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaRecargoEquivalencia write SetCuotaRecargoEquivalencia stored CuotaRecargoEquivalencia_Specified;
  end;



  // ************************************************************************ //
  // XML       : DetalleIVARecibida2Type, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DetalleIVARecibida2Type = class(TRemotable)
  private
    FTipoImpositivo: Tipo2_2Type;
    FBaseImponible: ImporteSgn12_2Type;
    FCuotaSoportada: ImporteSgn12_2Type;
    FTipoRecargoEquivalencia: Tipo2_2Type;
    FTipoRecargoEquivalencia_Specified: boolean;
    FCuotaRecargoEquivalencia: ImporteSgn12_2Type;
    FCuotaRecargoEquivalencia_Specified: boolean;
    FBienInversion: BienInversionType;
    FBienInversion_Specified: boolean;
    function  GetTipoImpositivo: Tipo2_2Type;
    procedure SetTipoImpositivo(const ATipo2_2Type: Tipo2_2Type);
    function  GetBaseImponible: ImporteSgn12_2Type;
    procedure SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetCuotaSoportada: ImporteSgn12_2Type;
    procedure SetCuotaSoportada(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetTipoRecargoEquivalencia(Index: Integer): Tipo2_2Type;
    procedure SetTipoRecargoEquivalencia(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
    function  TipoRecargoEquivalencia_Specified(Index: Integer): boolean;
    function  GetCuotaRecargoEquivalencia(Index: Integer): ImporteSgn12_2Type;
    procedure SetCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  CuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
    function  GetBienInversion(Index: Integer): BienInversionType;
    procedure SetBienInversion(Index: Integer; const ABienInversionType: BienInversionType);
    function  BienInversion_Specified(Index: Integer): boolean;
  published
    property TipoImpositivo:           Tipo2_2Type         read GetTipoImpositivo write SetTipoImpositivo;
    property BaseImponible:            ImporteSgn12_2Type  read GetBaseImponible write SetBaseImponible;
    property CuotaSoportada:           ImporteSgn12_2Type  read GetCuotaSoportada write SetCuotaSoportada;
    property TipoRecargoEquivalencia:  Tipo2_2Type         Index (IS_OPTN) read GetTipoRecargoEquivalencia write SetTipoRecargoEquivalencia stored TipoRecargoEquivalencia_Specified;
    property CuotaRecargoEquivalencia: ImporteSgn12_2Type  Index (IS_OPTN) read GetCuotaRecargoEquivalencia write SetCuotaRecargoEquivalencia stored CuotaRecargoEquivalencia_Specified;
    property BienInversion:            BienInversionType   Index (IS_OPTN) read GetBienInversion write SetBienInversion stored BienInversion_Specified;
  end;



  // ************************************************************************ //
  // XML       : InfoExpedicionRecepcionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  InfoExpedicionRecepcionType = class(TRemotable)
  private
    FValorBienes: ImporteSgn12_2Type;
    FValorBienes_Specified: boolean;
    FEmPartida: CountryMiembroType;
    FEmPartida_Specified: boolean;
    FEmLlegada: CountryMiembroType;
    FEmLlegada_Specified: boolean;
    FFechaExpedicion: fecha;
    FFechaExpedicion_Specified: boolean;
    FFechaLlegada: fecha;
    FFechaLlegada_Specified: boolean;
    FCantidad: TextMax120Type;
    FDescripBienes: TextMax120Type;
    FFechaSustitucion: fecha;
    FFechaSustitucion_Specified: boolean;
    function  GetValorBienes(Index: Integer): ImporteSgn12_2Type;
    procedure SetValorBienes(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ValorBienes_Specified(Index: Integer): boolean;
    function  GetEmPartida(Index: Integer): CountryMiembroType;
    procedure SetEmPartida(Index: Integer; const ACountryMiembroType: CountryMiembroType);
    function  EmPartida_Specified(Index: Integer): boolean;
    function  GetEmLlegada(Index: Integer): CountryMiembroType;
    procedure SetEmLlegada(Index: Integer; const ACountryMiembroType: CountryMiembroType);
    function  EmLlegada_Specified(Index: Integer): boolean;
    function  GetFechaExpedicion(Index: Integer): fecha;
    procedure SetFechaExpedicion(Index: Integer; const Afecha: fecha);
    function  FechaExpedicion_Specified(Index: Integer): boolean;
    function  GetFechaLlegada(Index: Integer): fecha;
    procedure SetFechaLlegada(Index: Integer; const Afecha: fecha);
    function  FechaLlegada_Specified(Index: Integer): boolean;
    function  GetCantidad: TextMax120Type;
    procedure SetCantidad(const ATextMax120Type: TextMax120Type);
    function  GetDescripBienes: TextMax120Type;
    procedure SetDescripBienes(const ATextMax120Type: TextMax120Type);
    function  GetFechaSustitucion(Index: Integer): fecha;
    procedure SetFechaSustitucion(Index: Integer; const Afecha: fecha);
    function  FechaSustitucion_Specified(Index: Integer): boolean;
  published
    property ValorBienes:      ImporteSgn12_2Type  Index (IS_OPTN) read GetValorBienes write SetValorBienes stored ValorBienes_Specified;
    property EmPartida:        CountryMiembroType  Index (IS_OPTN) read GetEmPartida write SetEmPartida stored EmPartida_Specified;
    property EmLlegada:        CountryMiembroType  Index (IS_OPTN) read GetEmLlegada write SetEmLlegada stored EmLlegada_Specified;
    property FechaExpedicion:  fecha               Index (IS_OPTN) read GetFechaExpedicion write SetFechaExpedicion stored FechaExpedicion_Specified;
    property FechaLlegada:     fecha               Index (IS_OPTN) read GetFechaLlegada write SetFechaLlegada stored FechaLlegada_Specified;
    property Cantidad:         TextMax120Type      read GetCantidad write SetCantidad;
    property DescripBienes:    TextMax120Type      read GetDescripBienes write SetDescripBienes;
    property FechaSustitucion: fecha               Index (IS_OPTN) read GetFechaSustitucion write SetFechaSustitucion stored FechaSustitucion_Specified;
  end;



  // ************************************************************************ //
  // XML       : DestinoFinalExpedRecepType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DestinoFinalExpedRecepType = class(TRemotable)
  private
    FDescripBienes: TextMax120Type;
    FCantidad: TextMax120Type;
    FFechaOpDeclarada: fecha;
    FDestinatarioFinal: PersonaFisicaJuridicaType;
    FDestinatarioFinal_Specified: boolean;
    FBaseImponibleValor: ImporteSgn12_2Type;
    FPrecioUnitario: ImporteSgn12_2Type;
    FPrecioUnitario_Specified: boolean;
    function  GetDescripBienes: TextMax120Type;
    procedure SetDescripBienes(const ATextMax120Type: TextMax120Type);
    function  GetCantidad: TextMax120Type;
    procedure SetCantidad(const ATextMax120Type: TextMax120Type);
    function  GetFechaOpDeclarada: fecha;
    procedure SetFechaOpDeclarada(const Afecha: fecha);
    function  GetDestinatarioFinal(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetDestinatarioFinal(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  DestinatarioFinal_Specified(Index: Integer): boolean;
    function  GetBaseImponibleValor: ImporteSgn12_2Type;
    procedure SetBaseImponibleValor(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetPrecioUnitario(Index: Integer): ImporteSgn12_2Type;
    procedure SetPrecioUnitario(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  PrecioUnitario_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property DescripBienes:      TextMax120Type             read GetDescripBienes write SetDescripBienes;
    property Cantidad:           TextMax120Type             read GetCantidad write SetCantidad;
    property FechaOpDeclarada:   fecha                      read GetFechaOpDeclarada write SetFechaOpDeclarada;
    property DestinatarioFinal:  PersonaFisicaJuridicaType  Index (IS_OPTN) read GetDestinatarioFinal write SetDestinatarioFinal stored DestinatarioFinal_Specified;
    property BaseImponibleValor: ImporteSgn12_2Type         read GetBaseImponibleValor write SetBaseImponibleValor;
    property PrecioUnitario:     ImporteSgn12_2Type         Index (IS_OPTN) read GetPrecioUnitario write SetPrecioUnitario stored PrecioUnitario_Specified;
  end;



  // ************************************************************************ //
  // XML       : DatosPagoCobroType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  DatosPagoCobroType = class(TRemotable)
  private
    FFecha: fecha;
    FImporte: ImporteSgn12_2Type;
    FMedio: MedioPagoType;
    FCuenta_O_Medio: TextMax34Type;
    FCuenta_O_Medio_Specified: boolean;
    function  GetFecha: fecha;
    procedure SetFecha(const Afecha: fecha);
    function  GetImporte: ImporteSgn12_2Type;
    procedure SetImporte(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetMedio: MedioPagoType;
    procedure SetMedio(const AMedioPagoType: MedioPagoType);
    function  GetCuenta_O_Medio(Index: Integer): TextMax34Type;
    procedure SetCuenta_O_Medio(Index: Integer; const ATextMax34Type: TextMax34Type);
    function  Cuenta_O_Medio_Specified(Index: Integer): boolean;
  published
    property Fecha:          fecha               read GetFecha write SetFecha;
    property Importe:        ImporteSgn12_2Type  read GetImporte write SetImporte;
    property Medio:          MedioPagoType       read GetMedio write SetMedio;
    property Cuenta_O_Medio: TextMax34Type       Index (IS_OPTN) read GetCuenta_O_Medio write SetCuenta_O_Medio stored Cuenta_O_Medio_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaCobrosMetalicoType = class(TRemotable)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FImporteTotal: ImporteSgn12_2Type;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetImporteTotal: ImporteSgn12_2Type;
    procedure SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:     PersonaFisicaJuridicaType         read GetContraparte write SetContraparte;
    property ImporteTotal:    ImporteSgn12_2Type                read GetImporteTotal write SetImporteTotal;
    property EntidadSucedida: PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
  end;

  TextMax60Type   =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : IdRegistroDeclaradoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IdRegistroDeclaradoType = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    FIdRegistro: TextMax60Type;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
    function  GetIdRegistro: TextMax60Type;
    procedure SetIdRegistro(const ATextMax60Type: TextMax60Type);
  published
    property Ejercicio:  YearType         read GetEjercicio write SetEjercicio;
    property Periodo:    TipoPeriodoType  read GetPeriodo write SetPeriodo;
    property IdRegistro: TextMax60Type    read GetIdRegistro write SetIdRegistro;
  end;



  // ************************************************************************ //
  // XML       : IdRegistroExpInicialType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IdRegistroExpInicialType = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    FIdExpInicial: TextMax60Type;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
    function  GetIdExpInicial: TextMax60Type;
    procedure SetIdExpInicial(const ATextMax60Type: TextMax60Type);
  published
    property Ejercicio:    YearType         read GetEjercicio write SetEjercicio;
    property Periodo:      TipoPeriodoType  read GetPeriodo write SetPeriodo;
    property IdExpInicial: TextMax60Type    read GetIdExpInicial write SetIdExpInicial;
  end;



  // ************************************************************************ //
  // XML       : ClavePaginacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ClavePaginacion = class(TRemotable)
  private
    FIdRegistro: TextMax60Type;
    function  GetIdRegistro: TextMax60Type;
    procedure SetIdRegistro(const ATextMax60Type: TextMax60Type);
  published
    property IdRegistro: TextMax60Type  read GetIdRegistro write SetIdRegistro;
  end;



  // ************************************************************************ //
  // XML       : LRBajaVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaVentaBienesConsignaType = class(TRemotable)
  private
    FIdRegistroDeclarado: IdRegistroDeclaradoType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    function  GetIdRegistroDeclarado: IdRegistroDeclaradoType;
    procedure SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IdRegistroDeclarado: IdRegistroDeclaradoType  read GetIdRegistroDeclarado write SetIdRegistroDeclarado;
    property RefExterna:          TextMax60Type            Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
  end;

  TextMax15Type   =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : BienDeInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  BienDeInversionType = class(TRemotable)
  private
    FIdentificacionBien: TextMax40Type;
    FFechaInicioUtilizacion: fecha;
    FProrrataAnualDefinitiva: Tipo2_2Type;
    FRegularizacionAnualDeduccion: ImporteSgn12_2Type;
    FRegularizacionAnualDeduccion_Specified: boolean;
    FIdentificacionEntrega: TextMax40Type;
    FIdentificacionEntrega_Specified: boolean;
    FRegularizacionDeduccionEfectuada: ImporteSgn12_2Type;
    FRegularizacionDeduccionEfectuada_Specified: boolean;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FNumRegistroAcuerdoFacturacion: TextMax15Type;
    FNumRegistroAcuerdoFacturacion_Specified: boolean;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    function  GetIdentificacionBien: TextMax40Type;
    procedure SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
    function  GetFechaInicioUtilizacion: fecha;
    procedure SetFechaInicioUtilizacion(const Afecha: fecha);
    function  GetProrrataAnualDefinitiva: Tipo2_2Type;
    procedure SetProrrataAnualDefinitiva(const ATipo2_2Type: Tipo2_2Type);
    function  GetRegularizacionAnualDeduccion(Index: Integer): ImporteSgn12_2Type;
    procedure SetRegularizacionAnualDeduccion(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  RegularizacionAnualDeduccion_Specified(Index: Integer): boolean;
    function  GetIdentificacionEntrega(Index: Integer): TextMax40Type;
    procedure SetIdentificacionEntrega(Index: Integer; const ATextMax40Type: TextMax40Type);
    function  IdentificacionEntrega_Specified(Index: Integer): boolean;
    function  GetRegularizacionDeduccionEfectuada(Index: Integer): ImporteSgn12_2Type;
    procedure SetRegularizacionDeduccionEfectuada(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  RegularizacionDeduccionEfectuada_Specified(Index: Integer): boolean;
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
    procedure SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
    function  NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IdentificacionBien:               TextMax40Type                     read GetIdentificacionBien write SetIdentificacionBien;
    property FechaInicioUtilizacion:           fecha                             read GetFechaInicioUtilizacion write SetFechaInicioUtilizacion;
    property ProrrataAnualDefinitiva:          Tipo2_2Type                       read GetProrrataAnualDefinitiva write SetProrrataAnualDefinitiva;
    property RegularizacionAnualDeduccion:     ImporteSgn12_2Type                Index (IS_OPTN) read GetRegularizacionAnualDeduccion write SetRegularizacionAnualDeduccion stored RegularizacionAnualDeduccion_Specified;
    property IdentificacionEntrega:            TextMax40Type                     Index (IS_OPTN) read GetIdentificacionEntrega write SetIdentificacionEntrega stored IdentificacionEntrega_Specified;
    property RegularizacionDeduccionEfectuada: ImporteSgn12_2Type                Index (IS_OPTN) read GetRegularizacionDeduccionEfectuada write SetRegularizacionDeduccionEfectuada stored RegularizacionDeduccionEfectuada_Specified;
    property RefExterna:                       TextMax60Type                     Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property NumRegistroAcuerdoFacturacion:    TextMax15Type                     Index (IS_OPTN) read GetNumRegistroAcuerdoFacturacion write SetNumRegistroAcuerdoFacturacion stored NumRegistroAcuerdoFacturacion_Specified;
    property EntidadSucedida:                  PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
  end;



  // ************************************************************************ //
  // XML       : FacturaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  FacturaType = class(TRemotable)
  private
    FTipoFactura: ClaveTipoFacturaType;
    FTipoRectificativa: ClaveTipoRectificativaType;
    FTipoRectificativa_Specified: boolean;
    FFacturasAgrupadas: FacturasAgrupadas2;
    FFacturasAgrupadas_Specified: boolean;
    FFacturasRectificadas: FacturasRectificadas2;
    FFacturasRectificadas_Specified: boolean;
    FImporteRectificacion: DesgloseRectificacionType;
    FImporteRectificacion_Specified: boolean;
    FFechaOperacion: fecha;
    FFechaOperacion_Specified: boolean;
    FClaveRegimenEspecialOTrascendencia: IdOperacionesTrascendenciaTributariaType;
    FClaveRegimenEspecialOTrascendenciaAdicional1: IdOperacionesTrascendenciaTributariaType;
    FClaveRegimenEspecialOTrascendenciaAdicional1_Specified: boolean;
    FClaveRegimenEspecialOTrascendenciaAdicional2: IdOperacionesTrascendenciaTributariaType;
    FClaveRegimenEspecialOTrascendenciaAdicional2_Specified: boolean;
    FNumRegistroAcuerdoFacturacion: TextMax15Type;
    FNumRegistroAcuerdoFacturacion_Specified: boolean;
    FImporteTotal: ImporteSgn12_2Type;
    FImporteTotal_Specified: boolean;
    FBaseImponibleACoste: ImporteSgn12_2Type;
    FBaseImponibleACoste_Specified: boolean;
    FDescripcionOperacion: TextMax500Type;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FFacturaSimplificadaArticulos7_2_7_3: SimplificadaCualificadaType;
    FFacturaSimplificadaArticulos7_2_7_3_Specified: boolean;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    FRegPrevioGGEEoREDEMEoCompetencia: RegPrevioGGEEoREDEMEoCompetenciaType;
    FRegPrevioGGEEoREDEMEoCompetencia_Specified: boolean;
    FMacrodato: MacrodatoType;
    FMacrodato_Specified: boolean;
    function  GetTipoFactura: ClaveTipoFacturaType;
    procedure SetTipoFactura(const AClaveTipoFacturaType: ClaveTipoFacturaType);
    function  GetTipoRectificativa(Index: Integer): ClaveTipoRectificativaType;
    procedure SetTipoRectificativa(Index: Integer; const AClaveTipoRectificativaType: ClaveTipoRectificativaType);
    function  TipoRectificativa_Specified(Index: Integer): boolean;
    function  GetFacturasAgrupadas(Index: Integer): FacturasAgrupadas2;
    procedure SetFacturasAgrupadas(Index: Integer; const AFacturasAgrupadas2: FacturasAgrupadas2);
    function  FacturasAgrupadas_Specified(Index: Integer): boolean;
    function  GetFacturasRectificadas(Index: Integer): FacturasRectificadas2;
    procedure SetFacturasRectificadas(Index: Integer; const AFacturasRectificadas2: FacturasRectificadas2);
    function  FacturasRectificadas_Specified(Index: Integer): boolean;
    function  GetImporteRectificacion(Index: Integer): DesgloseRectificacionType;
    procedure SetImporteRectificacion(Index: Integer; const ADesgloseRectificacionType: DesgloseRectificacionType);
    function  ImporteRectificacion_Specified(Index: Integer): boolean;
    function  GetFechaOperacion(Index: Integer): fecha;
    procedure SetFechaOperacion(Index: Integer; const Afecha: fecha);
    function  FechaOperacion_Specified(Index: Integer): boolean;
    function  GetClaveRegimenEspecialOTrascendencia: IdOperacionesTrascendenciaTributariaType;
    procedure SetClaveRegimenEspecialOTrascendencia(const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
    function  GetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer): IdOperacionesTrascendenciaTributariaType;
    procedure SetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
    function  ClaveRegimenEspecialOTrascendenciaAdicional1_Specified(Index: Integer): boolean;
    function  GetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer): IdOperacionesTrascendenciaTributariaType;
    procedure SetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
    function  ClaveRegimenEspecialOTrascendenciaAdicional2_Specified(Index: Integer): boolean;
    function  GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
    procedure SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
    function  NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
    function  GetImporteTotal(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTotal(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTotal_Specified(Index: Integer): boolean;
    function  GetBaseImponibleACoste(Index: Integer): ImporteSgn12_2Type;
    procedure SetBaseImponibleACoste(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  BaseImponibleACoste_Specified(Index: Integer): boolean;
    function  GetDescripcionOperacion: TextMax500Type;
    procedure SetDescripcionOperacion(const ATextMax500Type: TextMax500Type);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetFacturaSimplificadaArticulos7_2_7_3(Index: Integer): SimplificadaCualificadaType;
    procedure SetFacturaSimplificadaArticulos7_2_7_3(Index: Integer; const ASimplificadaCualificadaType: SimplificadaCualificadaType);
    function  FacturaSimplificadaArticulos7_2_7_3_Specified(Index: Integer): boolean;
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
    function  GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
    procedure SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
    function  RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
    function  GetMacrodato(Index: Integer): MacrodatoType;
    procedure SetMacrodato(Index: Integer; const AMacrodatoType: MacrodatoType);
    function  Macrodato_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property TipoFactura:                                  ClaveTipoFacturaType                      read GetTipoFactura write SetTipoFactura;
    property TipoRectificativa:                            ClaveTipoRectificativaType                Index (IS_OPTN) read GetTipoRectificativa write SetTipoRectificativa stored TipoRectificativa_Specified;
    property FacturasAgrupadas:                            FacturasAgrupadas2                        Index (IS_OPTN) read GetFacturasAgrupadas write SetFacturasAgrupadas stored FacturasAgrupadas_Specified;
    property FacturasRectificadas:                         FacturasRectificadas2                     Index (IS_OPTN) read GetFacturasRectificadas write SetFacturasRectificadas stored FacturasRectificadas_Specified;
    property ImporteRectificacion:                         DesgloseRectificacionType                 Index (IS_OPTN) read GetImporteRectificacion write SetImporteRectificacion stored ImporteRectificacion_Specified;
    property FechaOperacion:                               fecha                                     Index (IS_OPTN) read GetFechaOperacion write SetFechaOperacion stored FechaOperacion_Specified;
    property ClaveRegimenEspecialOTrascendencia:           IdOperacionesTrascendenciaTributariaType  read GetClaveRegimenEspecialOTrascendencia write SetClaveRegimenEspecialOTrascendencia;
    property ClaveRegimenEspecialOTrascendenciaAdicional1: IdOperacionesTrascendenciaTributariaType  Index (IS_OPTN) read GetClaveRegimenEspecialOTrascendenciaAdicional1 write SetClaveRegimenEspecialOTrascendenciaAdicional1 stored ClaveRegimenEspecialOTrascendenciaAdicional1_Specified;
    property ClaveRegimenEspecialOTrascendenciaAdicional2: IdOperacionesTrascendenciaTributariaType  Index (IS_OPTN) read GetClaveRegimenEspecialOTrascendenciaAdicional2 write SetClaveRegimenEspecialOTrascendenciaAdicional2 stored ClaveRegimenEspecialOTrascendenciaAdicional2_Specified;
    property NumRegistroAcuerdoFacturacion:                TextMax15Type                             Index (IS_OPTN) read GetNumRegistroAcuerdoFacturacion write SetNumRegistroAcuerdoFacturacion stored NumRegistroAcuerdoFacturacion_Specified;
    property ImporteTotal:                                 ImporteSgn12_2Type                        Index (IS_OPTN) read GetImporteTotal write SetImporteTotal stored ImporteTotal_Specified;
    property BaseImponibleACoste:                          ImporteSgn12_2Type                        Index (IS_OPTN) read GetBaseImponibleACoste write SetBaseImponibleACoste stored BaseImponibleACoste_Specified;
    property DescripcionOperacion:                         TextMax500Type                            read GetDescripcionOperacion write SetDescripcionOperacion;
    property RefExterna:                                   TextMax60Type                             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property FacturaSimplificadaArticulos7_2_7_3:          SimplificadaCualificadaType               Index (IS_OPTN) read GetFacturaSimplificadaArticulos7_2_7_3 write SetFacturaSimplificadaArticulos7_2_7_3 stored FacturaSimplificadaArticulos7_2_7_3_Specified;
    property EntidadSucedida:                              PersonaFisicaJuridicaUnicaESType          Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
    property RegPrevioGGEEoREDEMEoCompetencia:             RegPrevioGGEEoREDEMEoCompetenciaType      Index (IS_OPTN) read GetRegPrevioGGEEoREDEMEoCompetencia write SetRegPrevioGGEEoREDEMEoCompetencia stored RegPrevioGGEEoREDEMEoCompetencia_Specified;
    property Macrodato:                                    MacrodatoType                             Index (IS_OPTN) read GetMacrodato write SetMacrodato stored Macrodato_Specified;
  end;



  // ************************************************************************ //
  // XML       : FacturaRecibidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  FacturaRecibidaType = class(FacturaType)
  private
    FDesgloseFactura: DesgloseFacturaRecibidasType;
    FContraparte: PersonaFisicaJuridicaType;
    FFechaRegContable: fecha;
    FCuotaDeducible: ImporteSgn12_2Type;
    FADeducirEnPeriodoPosterior: DeducirEnPeriodoPosteriorType;
    FADeducirEnPeriodoPosterior_Specified: boolean;
    FEjercicioDeduccion: YearType;
    FEjercicioDeduccion_Specified: boolean;
    FPeriodoDeduccion: TipoPeriodoType;
    FPeriodoDeduccion_Specified: boolean;
    function  GetDesgloseFactura: DesgloseFacturaRecibidasType;
    procedure SetDesgloseFactura(const ADesgloseFacturaRecibidasType: DesgloseFacturaRecibidasType);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetFechaRegContable: fecha;
    procedure SetFechaRegContable(const Afecha: fecha);
    function  GetCuotaDeducible: ImporteSgn12_2Type;
    procedure SetCuotaDeducible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetADeducirEnPeriodoPosterior(Index: Integer): DeducirEnPeriodoPosteriorType;
    procedure SetADeducirEnPeriodoPosterior(Index: Integer; const ADeducirEnPeriodoPosteriorType: DeducirEnPeriodoPosteriorType);
    function  ADeducirEnPeriodoPosterior_Specified(Index: Integer): boolean;
    function  GetEjercicioDeduccion(Index: Integer): YearType;
    procedure SetEjercicioDeduccion(Index: Integer; const AYearType: YearType);
    function  EjercicioDeduccion_Specified(Index: Integer): boolean;
    function  GetPeriodoDeduccion(Index: Integer): TipoPeriodoType;
    procedure SetPeriodoDeduccion(Index: Integer; const ATipoPeriodoType: TipoPeriodoType);
    function  PeriodoDeduccion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property DesgloseFactura:            DesgloseFacturaRecibidasType   read GetDesgloseFactura write SetDesgloseFactura;
    property Contraparte:                PersonaFisicaJuridicaType      read GetContraparte write SetContraparte;
    property FechaRegContable:           fecha                          read GetFechaRegContable write SetFechaRegContable;
    property CuotaDeducible:             ImporteSgn12_2Type             read GetCuotaDeducible write SetCuotaDeducible;
    property ADeducirEnPeriodoPosterior: DeducirEnPeriodoPosteriorType  Index (IS_OPTN) read GetADeducirEnPeriodoPosterior write SetADeducirEnPeriodoPosterior stored ADeducirEnPeriodoPosterior_Specified;
    property EjercicioDeduccion:         YearType                       Index (IS_OPTN) read GetEjercicioDeduccion write SetEjercicioDeduccion stored EjercicioDeduccion_Specified;
    property PeriodoDeduccion:           TipoPeriodoType                Index (IS_OPTN) read GetPeriodoDeduccion write SetPeriodoDeduccion stored PeriodoDeduccion_Specified;
  end;



  // ************************************************************************ //
  // XML       : FacturaExpedidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  FacturaExpedidaType = class(FacturaType)
  private
    FDatosInmueble: DatosInmueble3;
    FDatosInmueble_Specified: boolean;
    FImporteTransmisionInmueblesSujetoAIVA: ImporteSgn12_2Type;
    FImporteTransmisionInmueblesSujetoAIVA_Specified: boolean;
    FEmitidaPorTercerosODestinatario: EmitidaPorTercerosType;
    FEmitidaPorTercerosODestinatario_Specified: boolean;
    FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas: EmitidaPorTercerosType;
    FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified: boolean;
    FVariosDestinatarios: VariosDestinatariosType;
    FVariosDestinatarios_Specified: boolean;
    FCupon: CuponType;
    FCupon_Specified: boolean;
    FFacturaSinIdentifDestinatarioAritculo6_1_d: CompletaSinDestinatarioType;
    FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified: boolean;
    FContraparte: PersonaFisicaJuridicaType;
    FContraparte_Specified: boolean;
    FTipoDesglose: TipoDesglose3;
    function  GetDatosInmueble(Index: Integer): DatosInmueble3;
    procedure SetDatosInmueble(Index: Integer; const ADatosInmueble3: DatosInmueble3);
    function  DatosInmueble_Specified(Index: Integer): boolean;
    function  GetImporteTransmisionInmueblesSujetoAIVA(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTransmisionInmueblesSujetoAIVA(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTransmisionInmueblesSujetoAIVA_Specified(Index: Integer): boolean;
    function  GetEmitidaPorTercerosODestinatario(Index: Integer): EmitidaPorTercerosType;
    procedure SetEmitidaPorTercerosODestinatario(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
    function  EmitidaPorTercerosODestinatario_Specified(Index: Integer): boolean;
    function  GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer): EmitidaPorTercerosType;
    procedure SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
    function  FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified(Index: Integer): boolean;
    function  GetVariosDestinatarios(Index: Integer): VariosDestinatariosType;
    procedure SetVariosDestinatarios(Index: Integer; const AVariosDestinatariosType: VariosDestinatariosType);
    function  VariosDestinatarios_Specified(Index: Integer): boolean;
    function  GetCupon(Index: Integer): CuponType;
    procedure SetCupon(Index: Integer; const ACuponType: CuponType);
    function  Cupon_Specified(Index: Integer): boolean;
    function  GetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer): CompletaSinDestinatarioType;
    procedure SetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer; const ACompletaSinDestinatarioType: CompletaSinDestinatarioType);
    function  FacturaSinIdentifDestinatarioAritculo6_1_d_Specified(Index: Integer): boolean;
    function  GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetTipoDesglose: TipoDesglose3;
    procedure SetTipoDesglose(const ATipoDesglose3: TipoDesglose3);
  public
    destructor Destroy; override;
  published
    property DatosInmueble:                                                    DatosInmueble3               Index (IS_OPTN) read GetDatosInmueble write SetDatosInmueble stored DatosInmueble_Specified;
    property ImporteTransmisionInmueblesSujetoAIVA:                            ImporteSgn12_2Type           Index (IS_OPTN) read GetImporteTransmisionInmueblesSujetoAIVA write SetImporteTransmisionInmueblesSujetoAIVA stored ImporteTransmisionInmueblesSujetoAIVA_Specified;
    property EmitidaPorTercerosODestinatario:                                  EmitidaPorTercerosType       Index (IS_OPTN) read GetEmitidaPorTercerosODestinatario write SetEmitidaPorTercerosODestinatario stored EmitidaPorTercerosODestinatario_Specified;
    property FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas: EmitidaPorTercerosType       Index (IS_OPTN) read GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas write SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas stored FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified;
    property VariosDestinatarios:                                              VariosDestinatariosType      Index (IS_OPTN) read GetVariosDestinatarios write SetVariosDestinatarios stored VariosDestinatarios_Specified;
    property Cupon:                                                            CuponType                    Index (IS_OPTN) read GetCupon write SetCupon stored Cupon_Specified;
    property FacturaSinIdentifDestinatarioAritculo6_1_d:                       CompletaSinDestinatarioType  Index (IS_OPTN) read GetFacturaSinIdentifDestinatarioAritculo6_1_d write SetFacturaSinIdentifDestinatarioAritculo6_1_d stored FacturaSinIdentifDestinatarioAritculo6_1_d_Specified;
    property Contraparte:                                                      PersonaFisicaJuridicaType    Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property TipoDesglose:                                                     TipoDesglose3                read GetTipoDesglose write SetTipoDesglose;
  end;



  // ************************************************************************ //
  // XML       : VentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  VentaBienesConsignaType = class(TRemotable)
  private
    FInfoExpedicionRecepcion: InfoExpedicionRecepcionType;
    FInfoExpedicionRecepcion_Specified: boolean;
    FIdRegistroExpInicial: IdRegistroExpInicialType;
    FIdRegistroExpInicial_Specified: boolean;
    FDestinoFinalExpedRecep: DestinoFinalExpedRecepType;
    FDestinoFinalExpedRecep_Specified: boolean;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FNumRegistroAcuerdoFacturacion: TextMax15Type;
    FNumRegistroAcuerdoFacturacion_Specified: boolean;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    FRegPrevioGGEEoREDEMEoCompetencia: RegPrevioGGEEoREDEMEoCompetenciaType;
    FRegPrevioGGEEoREDEMEoCompetencia_Specified: boolean;
    function  GetInfoExpedicionRecepcion(Index: Integer): InfoExpedicionRecepcionType;
    procedure SetInfoExpedicionRecepcion(Index: Integer; const AInfoExpedicionRecepcionType: InfoExpedicionRecepcionType);
    function  InfoExpedicionRecepcion_Specified(Index: Integer): boolean;
    function  GetIdRegistroExpInicial(Index: Integer): IdRegistroExpInicialType;
    procedure SetIdRegistroExpInicial(Index: Integer; const AIdRegistroExpInicialType: IdRegistroExpInicialType);
    function  IdRegistroExpInicial_Specified(Index: Integer): boolean;
    function  GetDestinoFinalExpedRecep(Index: Integer): DestinoFinalExpedRecepType;
    procedure SetDestinoFinalExpedRecep(Index: Integer; const ADestinoFinalExpedRecepType: DestinoFinalExpedRecepType);
    function  DestinoFinalExpedRecep_Specified(Index: Integer): boolean;
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
    procedure SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
    function  NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
    function  GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
    procedure SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
    function  RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property InfoExpedicionRecepcion:          InfoExpedicionRecepcionType           Index (IS_OPTN) read GetInfoExpedicionRecepcion write SetInfoExpedicionRecepcion stored InfoExpedicionRecepcion_Specified;
    property IdRegistroExpInicial:             IdRegistroExpInicialType              Index (IS_OPTN) read GetIdRegistroExpInicial write SetIdRegistroExpInicial stored IdRegistroExpInicial_Specified;
    property DestinoFinalExpedRecep:           DestinoFinalExpedRecepType            Index (IS_OPTN) read GetDestinoFinalExpedRecep write SetDestinoFinalExpedRecep stored DestinoFinalExpedRecep_Specified;
    property RefExterna:                       TextMax60Type                         Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property NumRegistroAcuerdoFacturacion:    TextMax15Type                         Index (IS_OPTN) read GetNumRegistroAcuerdoFacturacion write SetNumRegistroAcuerdoFacturacion stored NumRegistroAcuerdoFacturacion_Specified;
    property EntidadSucedida:                  PersonaFisicaJuridicaUnicaESType      Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
    property RegPrevioGGEEoREDEMEoCompetencia: RegPrevioGGEEoREDEMEoCompetenciaType  Index (IS_OPTN) read GetRegPrevioGGEEoREDEMEoCompetencia write SetRegPrevioGGEEoREDEMEoCompetencia stored RegPrevioGGEEoREDEMEoCompetencia_Specified;
  end;



  // ************************************************************************ //
  // XML       : OperacionIntracomunitariaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  OperacionIntracomunitariaType = class(TRemotable)
  private
    FTipoOperacion: TipoOperacion;
    FClaveDeclarado: ClaveDeclarado;
    FEstadoMiembro: CountryMiembroType;
    FPlazoOperacion: PlazoOperacion;
    FPlazoOperacion_Specified: boolean;
    FDescripcionBienes: TextMax40Type;
    FDireccionOperador: TextMax120Type;
    FFacturasODocumentacion: TextMax150Type;
    FFacturasODocumentacion_Specified: boolean;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FNumRegistroAcuerdoFacturacion: TextMax15Type;
    FNumRegistroAcuerdoFacturacion_Specified: boolean;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    FRegPrevioGGEEoREDEMEoCompetencia: RegPrevioGGEEoREDEMEoCompetenciaType;
    FRegPrevioGGEEoREDEMEoCompetencia_Specified: boolean;
    function  GetTipoOperacion: TipoOperacion;
    procedure SetTipoOperacion(const ATipoOperacion: TipoOperacion);
    function  GetClaveDeclarado: ClaveDeclarado;
    procedure SetClaveDeclarado(const AClaveDeclarado: ClaveDeclarado);
    function  GetEstadoMiembro: CountryMiembroType;
    procedure SetEstadoMiembro(const ACountryMiembroType: CountryMiembroType);
    function  GetPlazoOperacion(Index: Integer): PlazoOperacion;
    procedure SetPlazoOperacion(Index: Integer; const APlazoOperacion: PlazoOperacion);
    function  PlazoOperacion_Specified(Index: Integer): boolean;
    function  GetDescripcionBienes: TextMax40Type;
    procedure SetDescripcionBienes(const ATextMax40Type: TextMax40Type);
    function  GetDireccionOperador: TextMax120Type;
    procedure SetDireccionOperador(const ATextMax120Type: TextMax120Type);
    function  GetFacturasODocumentacion(Index: Integer): TextMax150Type;
    procedure SetFacturasODocumentacion(Index: Integer; const ATextMax150Type: TextMax150Type);
    function  FacturasODocumentacion_Specified(Index: Integer): boolean;
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
    procedure SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
    function  NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
    function  GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
    procedure SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
    function  RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property TipoOperacion:                    TipoOperacion                         read GetTipoOperacion write SetTipoOperacion;
    property ClaveDeclarado:                   ClaveDeclarado                        read GetClaveDeclarado write SetClaveDeclarado;
    property EstadoMiembro:                    CountryMiembroType                    read GetEstadoMiembro write SetEstadoMiembro;
    property PlazoOperacion:                   PlazoOperacion                        Index (IS_OPTN) read GetPlazoOperacion write SetPlazoOperacion stored PlazoOperacion_Specified;
    property DescripcionBienes:                TextMax40Type                         read GetDescripcionBienes write SetDescripcionBienes;
    property DireccionOperador:                TextMax120Type                        read GetDireccionOperador write SetDireccionOperador;
    property FacturasODocumentacion:           TextMax150Type                        Index (IS_OPTN) read GetFacturasODocumentacion write SetFacturasODocumentacion stored FacturasODocumentacion_Specified;
    property RefExterna:                       TextMax60Type                         Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property NumRegistroAcuerdoFacturacion:    TextMax15Type                         Index (IS_OPTN) read GetNumRegistroAcuerdoFacturacion write SetNumRegistroAcuerdoFacturacion stored NumRegistroAcuerdoFacturacion_Specified;
    property EntidadSucedida:                  PersonaFisicaJuridicaUnicaESType      Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
    property RegPrevioGGEEoREDEMEoCompetencia: RegPrevioGGEEoREDEMEoCompetenciaType  Index (IS_OPTN) read GetRegPrevioGGEEoREDEMEoCompetencia write SetRegPrevioGGEEoREDEMEoCompetencia stored RegPrevioGGEEoREDEMEoCompetencia_Specified;
  end;



  // ************************************************************************ //
  // XML       : FacturaRespuestaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturaRespuestaType = class(TRemotable)
  private
    FTipoFactura: ClaveTipoFacturaType;
    FTipoRectificativa: ClaveTipoRectificativaType;
    FTipoRectificativa_Specified: boolean;
    FFacturasAgrupadas: FacturasAgrupadas;
    FFacturasAgrupadas_Specified: boolean;
    FFacturasRectificadas: FacturasRectificadas;
    FFacturasRectificadas_Specified: boolean;
    FImporteRectificacion: DesgloseRectificacionType;
    FImporteRectificacion_Specified: boolean;
    FFechaOperacion: fecha;
    FFechaOperacion_Specified: boolean;
    FClaveRegimenEspecialOTrascendencia: IdOperacionesTrascendenciaTributariaType;
    FClaveRegimenEspecialOTrascendenciaAdicional1: IdOperacionesTrascendenciaTributariaType;
    FClaveRegimenEspecialOTrascendenciaAdicional1_Specified: boolean;
    FClaveRegimenEspecialOTrascendenciaAdicional2: IdOperacionesTrascendenciaTributariaType;
    FClaveRegimenEspecialOTrascendenciaAdicional2_Specified: boolean;
    FNumRegistroAcuerdoFacturacion: TextMax15Type;
    FNumRegistroAcuerdoFacturacion_Specified: boolean;
    FImporteTotal: ImporteSgn12_2Type;
    FImporteTotal_Specified: boolean;
    FBaseImponibleACoste: ImporteSgn12_2Type;
    FBaseImponibleACoste_Specified: boolean;
    FDescripcionOperacion: TextMax500Type;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FFacturaSimplificadaArticulos7_2_7_3: SimplificadaCualificadaType;
    FFacturaSimplificadaArticulos7_2_7_3_Specified: boolean;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    FRegPrevioGGEEoREDEMEoCompetencia: RegPrevioGGEEoREDEMEoCompetenciaType;
    FRegPrevioGGEEoREDEMEoCompetencia_Specified: boolean;
    FMacrodato: MacrodatoType;
    FMacrodato_Specified: boolean;
    function  GetTipoFactura: ClaveTipoFacturaType;
    procedure SetTipoFactura(const AClaveTipoFacturaType: ClaveTipoFacturaType);
    function  GetTipoRectificativa(Index: Integer): ClaveTipoRectificativaType;
    procedure SetTipoRectificativa(Index: Integer; const AClaveTipoRectificativaType: ClaveTipoRectificativaType);
    function  TipoRectificativa_Specified(Index: Integer): boolean;
    function  GetFacturasAgrupadas(Index: Integer): FacturasAgrupadas;
    procedure SetFacturasAgrupadas(Index: Integer; const AFacturasAgrupadas: FacturasAgrupadas);
    function  FacturasAgrupadas_Specified(Index: Integer): boolean;
    function  GetFacturasRectificadas(Index: Integer): FacturasRectificadas;
    procedure SetFacturasRectificadas(Index: Integer; const AFacturasRectificadas: FacturasRectificadas);
    function  FacturasRectificadas_Specified(Index: Integer): boolean;
    function  GetImporteRectificacion(Index: Integer): DesgloseRectificacionType;
    procedure SetImporteRectificacion(Index: Integer; const ADesgloseRectificacionType: DesgloseRectificacionType);
    function  ImporteRectificacion_Specified(Index: Integer): boolean;
    function  GetFechaOperacion(Index: Integer): fecha;
    procedure SetFechaOperacion(Index: Integer; const Afecha: fecha);
    function  FechaOperacion_Specified(Index: Integer): boolean;
    function  GetClaveRegimenEspecialOTrascendencia: IdOperacionesTrascendenciaTributariaType;
    procedure SetClaveRegimenEspecialOTrascendencia(const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
    function  GetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer): IdOperacionesTrascendenciaTributariaType;
    procedure SetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
    function  ClaveRegimenEspecialOTrascendenciaAdicional1_Specified(Index: Integer): boolean;
    function  GetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer): IdOperacionesTrascendenciaTributariaType;
    procedure SetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
    function  ClaveRegimenEspecialOTrascendenciaAdicional2_Specified(Index: Integer): boolean;
    function  GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
    procedure SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
    function  NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
    function  GetImporteTotal(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTotal(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTotal_Specified(Index: Integer): boolean;
    function  GetBaseImponibleACoste(Index: Integer): ImporteSgn12_2Type;
    procedure SetBaseImponibleACoste(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  BaseImponibleACoste_Specified(Index: Integer): boolean;
    function  GetDescripcionOperacion: TextMax500Type;
    procedure SetDescripcionOperacion(const ATextMax500Type: TextMax500Type);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetFacturaSimplificadaArticulos7_2_7_3(Index: Integer): SimplificadaCualificadaType;
    procedure SetFacturaSimplificadaArticulos7_2_7_3(Index: Integer; const ASimplificadaCualificadaType: SimplificadaCualificadaType);
    function  FacturaSimplificadaArticulos7_2_7_3_Specified(Index: Integer): boolean;
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
    function  GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
    procedure SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
    function  RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
    function  GetMacrodato(Index: Integer): MacrodatoType;
    procedure SetMacrodato(Index: Integer; const AMacrodatoType: MacrodatoType);
    function  Macrodato_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property TipoFactura:                                  ClaveTipoFacturaType                      read GetTipoFactura write SetTipoFactura;
    property TipoRectificativa:                            ClaveTipoRectificativaType                Index (IS_OPTN) read GetTipoRectificativa write SetTipoRectificativa stored TipoRectificativa_Specified;
    property FacturasAgrupadas:                            FacturasAgrupadas                         Index (IS_OPTN) read GetFacturasAgrupadas write SetFacturasAgrupadas stored FacturasAgrupadas_Specified;
    property FacturasRectificadas:                         FacturasRectificadas                      Index (IS_OPTN) read GetFacturasRectificadas write SetFacturasRectificadas stored FacturasRectificadas_Specified;
    property ImporteRectificacion:                         DesgloseRectificacionType                 Index (IS_OPTN) read GetImporteRectificacion write SetImporteRectificacion stored ImporteRectificacion_Specified;
    property FechaOperacion:                               fecha                                     Index (IS_OPTN) read GetFechaOperacion write SetFechaOperacion stored FechaOperacion_Specified;
    property ClaveRegimenEspecialOTrascendencia:           IdOperacionesTrascendenciaTributariaType  read GetClaveRegimenEspecialOTrascendencia write SetClaveRegimenEspecialOTrascendencia;
    property ClaveRegimenEspecialOTrascendenciaAdicional1: IdOperacionesTrascendenciaTributariaType  Index (IS_OPTN) read GetClaveRegimenEspecialOTrascendenciaAdicional1 write SetClaveRegimenEspecialOTrascendenciaAdicional1 stored ClaveRegimenEspecialOTrascendenciaAdicional1_Specified;
    property ClaveRegimenEspecialOTrascendenciaAdicional2: IdOperacionesTrascendenciaTributariaType  Index (IS_OPTN) read GetClaveRegimenEspecialOTrascendenciaAdicional2 write SetClaveRegimenEspecialOTrascendenciaAdicional2 stored ClaveRegimenEspecialOTrascendenciaAdicional2_Specified;
    property NumRegistroAcuerdoFacturacion:                TextMax15Type                             Index (IS_OPTN) read GetNumRegistroAcuerdoFacturacion write SetNumRegistroAcuerdoFacturacion stored NumRegistroAcuerdoFacturacion_Specified;
    property ImporteTotal:                                 ImporteSgn12_2Type                        Index (IS_OPTN) read GetImporteTotal write SetImporteTotal stored ImporteTotal_Specified;
    property BaseImponibleACoste:                          ImporteSgn12_2Type                        Index (IS_OPTN) read GetBaseImponibleACoste write SetBaseImponibleACoste stored BaseImponibleACoste_Specified;
    property DescripcionOperacion:                         TextMax500Type                            read GetDescripcionOperacion write SetDescripcionOperacion;
    property RefExterna:                                   TextMax60Type                             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property FacturaSimplificadaArticulos7_2_7_3:          SimplificadaCualificadaType               Index (IS_OPTN) read GetFacturaSimplificadaArticulos7_2_7_3 write SetFacturaSimplificadaArticulos7_2_7_3 stored FacturaSimplificadaArticulos7_2_7_3_Specified;
    property EntidadSucedida:                              PersonaFisicaJuridicaUnicaESType          Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
    property RegPrevioGGEEoREDEMEoCompetencia:             RegPrevioGGEEoREDEMEoCompetenciaType      Index (IS_OPTN) read GetRegPrevioGGEEoREDEMEoCompetencia write SetRegPrevioGGEEoREDEMEoCompetencia stored RegPrevioGGEEoREDEMEoCompetencia_Specified;
    property Macrodato:                                    MacrodatoType                             Index (IS_OPTN) read GetMacrodato write SetMacrodato stored Macrodato_Specified;
  end;



  // ************************************************************************ //
  // XML       : FacturaRespuestaInformadaClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturaRespuestaInformadaClienteType = class(FacturaRespuestaType)
  private
    FDesgloseFactura: DesgloseFacturaRecibidasType;
    FFechaRegContable: fecha;
    FPagos: FacturaARType;
    function  GetDesgloseFactura: DesgloseFacturaRecibidasType;
    procedure SetDesgloseFactura(const ADesgloseFacturaRecibidasType: DesgloseFacturaRecibidasType);
    function  GetFechaRegContable: fecha;
    procedure SetFechaRegContable(const Afecha: fecha);
    function  GetPagos: FacturaARType;
    procedure SetPagos(const AFacturaARType: FacturaARType);
  public
    destructor Destroy; override;
  published
    property DesgloseFactura:  DesgloseFacturaRecibidasType  read GetDesgloseFactura write SetDesgloseFactura;
    property FechaRegContable: fecha                         read GetFechaRegContable write SetFechaRegContable;
    property Pagos:            FacturaARType                 read GetPagos write SetPagos;
  end;



  // ************************************************************************ //
  // XML       : FacturaRespuestaInformadaProveedorType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturaRespuestaInformadaProveedorType = class(FacturaRespuestaType)
  private
    FDatosInmueble: DatosInmueble;
    FDatosInmueble_Specified: boolean;
    FImporteTransmisionInmueblesSujetoAIVA: ImporteSgn12_2Type;
    FImporteTransmisionInmueblesSujetoAIVA_Specified: boolean;
    FEmitidaPorTercerosODestinatario: EmitidaPorTercerosType;
    FEmitidaPorTercerosODestinatario_Specified: boolean;
    FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas: EmitidaPorTercerosType;
    FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified: boolean;
    FVariosDestinatarios: VariosDestinatariosType;
    FVariosDestinatarios_Specified: boolean;
    FCupon: CuponType;
    FCupon_Specified: boolean;
    FFacturaSinIdentifDestinatarioAritculo6_1_d: CompletaSinDestinatarioType;
    FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified: boolean;
    FTipoDesglose: TipoDesglose2;
    FCobros: FacturaARType;
    function  GetDatosInmueble(Index: Integer): DatosInmueble;
    procedure SetDatosInmueble(Index: Integer; const ADatosInmueble: DatosInmueble);
    function  DatosInmueble_Specified(Index: Integer): boolean;
    function  GetImporteTransmisionInmueblesSujetoAIVA(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTransmisionInmueblesSujetoAIVA(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTransmisionInmueblesSujetoAIVA_Specified(Index: Integer): boolean;
    function  GetEmitidaPorTercerosODestinatario(Index: Integer): EmitidaPorTercerosType;
    procedure SetEmitidaPorTercerosODestinatario(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
    function  EmitidaPorTercerosODestinatario_Specified(Index: Integer): boolean;
    function  GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer): EmitidaPorTercerosType;
    procedure SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
    function  FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified(Index: Integer): boolean;
    function  GetVariosDestinatarios(Index: Integer): VariosDestinatariosType;
    procedure SetVariosDestinatarios(Index: Integer; const AVariosDestinatariosType: VariosDestinatariosType);
    function  VariosDestinatarios_Specified(Index: Integer): boolean;
    function  GetCupon(Index: Integer): CuponType;
    procedure SetCupon(Index: Integer; const ACuponType: CuponType);
    function  Cupon_Specified(Index: Integer): boolean;
    function  GetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer): CompletaSinDestinatarioType;
    procedure SetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer; const ACompletaSinDestinatarioType: CompletaSinDestinatarioType);
    function  FacturaSinIdentifDestinatarioAritculo6_1_d_Specified(Index: Integer): boolean;
    function  GetTipoDesglose: TipoDesglose2;
    procedure SetTipoDesglose(const ATipoDesglose2: TipoDesglose2);
    function  GetCobros: FacturaARType;
    procedure SetCobros(const AFacturaARType: FacturaARType);
  public
    destructor Destroy; override;
  published
    property DatosInmueble:                                                    DatosInmueble                Index (IS_OPTN) read GetDatosInmueble write SetDatosInmueble stored DatosInmueble_Specified;
    property ImporteTransmisionInmueblesSujetoAIVA:                            ImporteSgn12_2Type           Index (IS_OPTN) read GetImporteTransmisionInmueblesSujetoAIVA write SetImporteTransmisionInmueblesSujetoAIVA stored ImporteTransmisionInmueblesSujetoAIVA_Specified;
    property EmitidaPorTercerosODestinatario:                                  EmitidaPorTercerosType       Index (IS_OPTN) read GetEmitidaPorTercerosODestinatario write SetEmitidaPorTercerosODestinatario stored EmitidaPorTercerosODestinatario_Specified;
    property FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas: EmitidaPorTercerosType       Index (IS_OPTN) read GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas write SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas stored FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified;
    property VariosDestinatarios:                                              VariosDestinatariosType      Index (IS_OPTN) read GetVariosDestinatarios write SetVariosDestinatarios stored VariosDestinatarios_Specified;
    property Cupon:                                                            CuponType                    Index (IS_OPTN) read GetCupon write SetCupon stored Cupon_Specified;
    property FacturaSinIdentifDestinatarioAritculo6_1_d:                       CompletaSinDestinatarioType  Index (IS_OPTN) read GetFacturaSinIdentifDestinatarioAritculo6_1_d write SetFacturaSinIdentifDestinatarioAritculo6_1_d stored FacturaSinIdentifDestinatarioAritculo6_1_d_Specified;
    property TipoDesglose:                                                     TipoDesglose2                read GetTipoDesglose write SetTipoDesglose;
    property Cobros:                                                           FacturaARType                read GetCobros write SetCobros;
  end;



  // ************************************************************************ //
  // XML       : FacturaRespuestaRecibidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturaRespuestaRecibidaType = class(FacturaRespuestaType)
  private
    FDesgloseFactura: DesgloseFacturaRecibidasType;
    FContraparte: PersonaFisicaJuridicaType;
    FFechaRegContable: fecha;
    FCuotaDeducible: ImporteSgn12_2Type;
    FPagos: FacturaARType;
    FADeducirEnPeriodoPosterior: DeducirEnPeriodoPosteriorType;
    FADeducirEnPeriodoPosterior_Specified: boolean;
    FEjercicioDeduccion: YearType;
    FEjercicioDeduccion_Specified: boolean;
    FPeriodoDeduccion: TipoPeriodoType;
    FPeriodoDeduccion_Specified: boolean;
    function  GetDesgloseFactura: DesgloseFacturaRecibidasType;
    procedure SetDesgloseFactura(const ADesgloseFacturaRecibidasType: DesgloseFacturaRecibidasType);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetFechaRegContable: fecha;
    procedure SetFechaRegContable(const Afecha: fecha);
    function  GetCuotaDeducible: ImporteSgn12_2Type;
    procedure SetCuotaDeducible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetPagos: FacturaARType;
    procedure SetPagos(const AFacturaARType: FacturaARType);
    function  GetADeducirEnPeriodoPosterior(Index: Integer): DeducirEnPeriodoPosteriorType;
    procedure SetADeducirEnPeriodoPosterior(Index: Integer; const ADeducirEnPeriodoPosteriorType: DeducirEnPeriodoPosteriorType);
    function  ADeducirEnPeriodoPosterior_Specified(Index: Integer): boolean;
    function  GetEjercicioDeduccion(Index: Integer): YearType;
    procedure SetEjercicioDeduccion(Index: Integer; const AYearType: YearType);
    function  EjercicioDeduccion_Specified(Index: Integer): boolean;
    function  GetPeriodoDeduccion(Index: Integer): TipoPeriodoType;
    procedure SetPeriodoDeduccion(Index: Integer; const ATipoPeriodoType: TipoPeriodoType);
    function  PeriodoDeduccion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property DesgloseFactura:            DesgloseFacturaRecibidasType   read GetDesgloseFactura write SetDesgloseFactura;
    property Contraparte:                PersonaFisicaJuridicaType      read GetContraparte write SetContraparte;
    property FechaRegContable:           fecha                          read GetFechaRegContable write SetFechaRegContable;
    property CuotaDeducible:             ImporteSgn12_2Type             read GetCuotaDeducible write SetCuotaDeducible;
    property Pagos:                      FacturaARType                  read GetPagos write SetPagos;
    property ADeducirEnPeriodoPosterior: DeducirEnPeriodoPosteriorType  Index (IS_OPTN) read GetADeducirEnPeriodoPosterior write SetADeducirEnPeriodoPosterior stored ADeducirEnPeriodoPosterior_Specified;
    property EjercicioDeduccion:         YearType                       Index (IS_OPTN) read GetEjercicioDeduccion write SetEjercicioDeduccion stored EjercicioDeduccion_Specified;
    property PeriodoDeduccion:           TipoPeriodoType                Index (IS_OPTN) read GetPeriodoDeduccion write SetPeriodoDeduccion stored PeriodoDeduccion_Specified;
  end;



  // ************************************************************************ //
  // XML       : FacturaRespuestaExpedidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  FacturaRespuestaExpedidaType = class(FacturaRespuestaType)
  private
    FDatosInmueble: DatosInmueble2;
    FDatosInmueble_Specified: boolean;
    FImporteTransmisionInmueblesSujetoAIVA: ImporteSgn12_2Type;
    FImporteTransmisionInmueblesSujetoAIVA_Specified: boolean;
    FEmitidaPorTercerosODestinatario: EmitidaPorTercerosType;
    FEmitidaPorTercerosODestinatario_Specified: boolean;
    FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas: EmitidaPorTercerosType;
    FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified: boolean;
    FVariosDestinatarios: VariosDestinatariosType;
    FVariosDestinatarios_Specified: boolean;
    FCupon: CuponType;
    FCupon_Specified: boolean;
    FFacturaSinIdentifDestinatarioAritculo6_1_d: CompletaSinDestinatarioType;
    FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified: boolean;
    FContraparte: PersonaFisicaJuridicaType;
    FContraparte_Specified: boolean;
    FTipoDesglose: TipoDesglose;
    FCobros: FacturaARType;
    function  GetDatosInmueble(Index: Integer): DatosInmueble2;
    procedure SetDatosInmueble(Index: Integer; const ADatosInmueble2: DatosInmueble2);
    function  DatosInmueble_Specified(Index: Integer): boolean;
    function  GetImporteTransmisionInmueblesSujetoAIVA(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTransmisionInmueblesSujetoAIVA(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTransmisionInmueblesSujetoAIVA_Specified(Index: Integer): boolean;
    function  GetEmitidaPorTercerosODestinatario(Index: Integer): EmitidaPorTercerosType;
    procedure SetEmitidaPorTercerosODestinatario(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
    function  EmitidaPorTercerosODestinatario_Specified(Index: Integer): boolean;
    function  GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer): EmitidaPorTercerosType;
    procedure SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
    function  FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified(Index: Integer): boolean;
    function  GetVariosDestinatarios(Index: Integer): VariosDestinatariosType;
    procedure SetVariosDestinatarios(Index: Integer; const AVariosDestinatariosType: VariosDestinatariosType);
    function  VariosDestinatarios_Specified(Index: Integer): boolean;
    function  GetCupon(Index: Integer): CuponType;
    procedure SetCupon(Index: Integer; const ACuponType: CuponType);
    function  Cupon_Specified(Index: Integer): boolean;
    function  GetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer): CompletaSinDestinatarioType;
    procedure SetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer; const ACompletaSinDestinatarioType: CompletaSinDestinatarioType);
    function  FacturaSinIdentifDestinatarioAritculo6_1_d_Specified(Index: Integer): boolean;
    function  GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
    procedure SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetTipoDesglose: TipoDesglose;
    procedure SetTipoDesglose(const ATipoDesglose: TipoDesglose);
    function  GetCobros: FacturaARType;
    procedure SetCobros(const AFacturaARType: FacturaARType);
  public
    destructor Destroy; override;
  published
    property DatosInmueble:                                                    DatosInmueble2               Index (IS_OPTN) read GetDatosInmueble write SetDatosInmueble stored DatosInmueble_Specified;
    property ImporteTransmisionInmueblesSujetoAIVA:                            ImporteSgn12_2Type           Index (IS_OPTN) read GetImporteTransmisionInmueblesSujetoAIVA write SetImporteTransmisionInmueblesSujetoAIVA stored ImporteTransmisionInmueblesSujetoAIVA_Specified;
    property EmitidaPorTercerosODestinatario:                                  EmitidaPorTercerosType       Index (IS_OPTN) read GetEmitidaPorTercerosODestinatario write SetEmitidaPorTercerosODestinatario stored EmitidaPorTercerosODestinatario_Specified;
    property FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas: EmitidaPorTercerosType       Index (IS_OPTN) read GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas write SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas stored FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified;
    property VariosDestinatarios:                                              VariosDestinatariosType      Index (IS_OPTN) read GetVariosDestinatarios write SetVariosDestinatarios stored VariosDestinatarios_Specified;
    property Cupon:                                                            CuponType                    Index (IS_OPTN) read GetCupon write SetCupon stored Cupon_Specified;
    property FacturaSinIdentifDestinatarioAritculo6_1_d:                       CompletaSinDestinatarioType  Index (IS_OPTN) read GetFacturaSinIdentifDestinatarioAritculo6_1_d write SetFacturaSinIdentifDestinatarioAritculo6_1_d stored FacturaSinIdentifDestinatarioAritculo6_1_d_Specified;
    property Contraparte:                                                      PersonaFisicaJuridicaType    Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property TipoDesglose:                                                     TipoDesglose                 read GetTipoDesglose write SetTipoDesglose;
    property Cobros:                                                           FacturaARType                read GetCobros write SetCobros;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura9 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : IDEmisorFactura, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDEmisorFactura10 = class(TRemotable)
  private
    FNombreRazon: TextMax120Type;
    FNIF: NIFType;
    function  GetNombreRazon: TextMax120Type;
    procedure SetNombreRazon(const ATextMax120Type: TextMax120Type);
    function  GetNIF: NIFType;
    procedure SetNIF(const ANIFType: NIFType);
  published
    property NombreRazon: TextMax120Type  read GetNombreRazon write SetNombreRazon;
    property NIF:         NIFType         read GetNIF write SetNIF;
  end;



  // ************************************************************************ //
  // XML       : IDOtroType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDOtroType = class(TRemotable)
  private
    FCodigoPais: CountryType2;
    FCodigoPais_Specified: boolean;
    FIDType: PersonaFisicaJuridicaIDTypeType;
    FID: TextMax20Type;
    function  GetCodigoPais(Index: Integer): CountryType2;
    procedure SetCodigoPais(Index: Integer; const ACountryType2: CountryType2);
    function  CodigoPais_Specified(Index: Integer): boolean;
    function  GetIDType: PersonaFisicaJuridicaIDTypeType;
    procedure SetIDType(const APersonaFisicaJuridicaIDTypeType: PersonaFisicaJuridicaIDTypeType);
    function  GetID: TextMax20Type;
    procedure SetID(const ATextMax20Type: TextMax20Type);
  published
    property CodigoPais: CountryType2                     Index (IS_OPTN) read GetCodigoPais write SetCodigoPais stored CodigoPais_Specified;
    property IDType:     PersonaFisicaJuridicaIDTypeType  read GetIDType write SetIDType;
    property ID:         TextMax20Type                    read GetID write SetID;
  end;

  TextoIDFacturaType =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : ClavePaginacionClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  ClavePaginacionClienteType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura10;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    FCliente: PersonaFisicaJuridicaUnicaESType;
    function  GetIDEmisorFactura: IDEmisorFactura10;
    procedure SetIDEmisorFactura(const AIDEmisorFactura10: IDEmisorFactura10);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
    function  GetCliente: PersonaFisicaJuridicaUnicaESType;
    procedure SetCliente(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura10                 read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:        TextoIDFacturaType                read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha                             read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
    property Cliente:                      PersonaFisicaJuridicaUnicaESType  read GetCliente write SetCliente;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaConsulta2Type, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaConsulta2Type = class(TRemotable)
  private
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisor_Specified: boolean;
    FFechaExpedicionFacturaEmisor: fecha;
    FFechaExpedicionFacturaEmisor_Specified: boolean;
    function  GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
    function  GetFechaExpedicionFacturaEmisor(Index: Integer): fecha;
    procedure SetFechaExpedicionFacturaEmisor(Index: Integer; const Afecha: fecha);
    function  FechaExpedicionFacturaEmisor_Specified(Index: Integer): boolean;
  published
    property NumSerieFacturaEmisor:        TextoIDFacturaType  Index (IS_OPTN) read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor stored NumSerieFacturaEmisor_Specified;
    property FechaExpedicionFacturaEmisor: fecha               Index (IS_OPTN) read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor stored FechaExpedicionFacturaEmisor_Specified;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaExpedidaBCType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaExpedidaBCType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura8;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura8;
    procedure SetIDEmisorFactura(const AIDEmisorFactura8: IDEmisorFactura8);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura8    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:        TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaARType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaARType = class(TRemotable)
  private
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  published
    property NumSerieFacturaEmisor:        TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaExpedidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaExpedidaType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura7;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisorResumenFin: TextoIDFacturaType;
    FNumSerieFacturaEmisorResumenFin_Specified: boolean;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura7;
    procedure SetIDEmisorFactura(const AIDEmisorFactura7: IDEmisorFactura7);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetNumSerieFacturaEmisorResumenFin(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisorResumenFin(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisorResumenFin_Specified(Index: Integer): boolean;
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:                 IDEmisorFactura7    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:           TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property NumSerieFacturaEmisorResumenFin: TextoIDFacturaType  Index (IS_OPTN) read GetNumSerieFacturaEmisorResumenFin write SetNumSerieFacturaEmisorResumenFin stored NumSerieFacturaEmisorResumenFin_Specified;
    property FechaExpedicionFacturaEmisor:    fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaComunitariaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaComunitariaType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura2;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura2;
    procedure SetIDEmisorFactura(const AIDEmisorFactura2: IDEmisorFactura2);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura2    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:        TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaRecibidaNombreBCType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaRecibidaNombreBCType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura3;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura3;
    procedure SetIDEmisorFactura(const AIDEmisorFactura3: IDEmisorFactura3);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura3    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:        TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaRecibidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaRecibidaType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisorResumenFin: TextoIDFacturaType;
    FNumSerieFacturaEmisorResumenFin_Specified: boolean;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura;
    procedure SetIDEmisorFactura(const AIDEmisorFactura: IDEmisorFactura);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetNumSerieFacturaEmisorResumenFin(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisorResumenFin(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisorResumenFin_Specified(Index: Integer): boolean;
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:                 IDEmisorFactura     read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:           TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property NumSerieFacturaEmisorResumenFin: TextoIDFacturaType  Index (IS_OPTN) read GetNumSerieFacturaEmisorResumenFin write SetNumSerieFacturaEmisorResumenFin stored NumSerieFacturaEmisorResumenFin_Specified;
    property FechaExpedicionFacturaEmisor:    fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : ClavePaginacionBienType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  ClavePaginacionBienType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura5;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    FIdentificacionBien: TextMax40Type;
    function  GetIDEmisorFactura: IDEmisorFactura5;
    procedure SetIDEmisorFactura(const AIDEmisorFactura5: IDEmisorFactura5);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
    function  GetIdentificacionBien: TextMax40Type;
    procedure SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura5    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:        TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
    property IdentificacionBien:           TextMax40Type       read GetIdentificacionBien write SetIdentificacionBien;
  end;



  // ************************************************************************ //
  // XML       : ClavePaginacionProveedorType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  ClavePaginacionProveedorType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura4;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura4;
    procedure SetIDEmisorFactura(const AIDEmisorFactura4: IDEmisorFactura4);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura4    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:        TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property FechaExpedicionFacturaEmisor: fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaConsulta1Type, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaConsulta1Type = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura6;
    FIDEmisorFactura_Specified: boolean;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisor_Specified: boolean;
    FFechaExpedicionFacturaEmisor: fecha;
    FFechaExpedicionFacturaEmisor_Specified: boolean;
    function  GetIDEmisorFactura(Index: Integer): IDEmisorFactura6;
    procedure SetIDEmisorFactura(Index: Integer; const AIDEmisorFactura6: IDEmisorFactura6);
    function  IDEmisorFactura_Specified(Index: Integer): boolean;
    function  GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
    function  GetFechaExpedicionFacturaEmisor(Index: Integer): fecha;
    procedure SetFechaExpedicionFacturaEmisor(Index: Integer; const Afecha: fecha);
    function  FechaExpedicionFacturaEmisor_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:              IDEmisorFactura6    Index (IS_OPTN) read GetIDEmisorFactura write SetIDEmisorFactura stored IDEmisorFactura_Specified;
    property NumSerieFacturaEmisor:        TextoIDFacturaType  Index (IS_OPTN) read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor stored NumSerieFacturaEmisor_Specified;
    property FechaExpedicionFacturaEmisor: fecha               Index (IS_OPTN) read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor stored FechaExpedicionFacturaEmisor_Specified;
  end;



  // ************************************************************************ //
  // XML       : IDFacturaImputacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  IDFacturaImputacionType = class(TRemotable)
  private
    FIDEmisorFactura: IDEmisorFactura9;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisorResumenFin: TextoIDFacturaType;
    FNumSerieFacturaEmisorResumenFin_Specified: boolean;
    FFechaExpedicionFacturaEmisor: fecha;
    function  GetIDEmisorFactura: IDEmisorFactura9;
    procedure SetIDEmisorFactura(const AIDEmisorFactura9: IDEmisorFactura9);
    function  GetNumSerieFacturaEmisor: TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
    function  GetNumSerieFacturaEmisorResumenFin(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisorResumenFin(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisorResumenFin_Specified(Index: Integer): boolean;
    function  GetFechaExpedicionFacturaEmisor: fecha;
    procedure SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
  public
    destructor Destroy; override;
  published
    property IDEmisorFactura:                 IDEmisorFactura9    read GetIDEmisorFactura write SetIDEmisorFactura;
    property NumSerieFacturaEmisor:           TextoIDFacturaType  read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor;
    property NumSerieFacturaEmisorResumenFin: TextoIDFacturaType  Index (IS_OPTN) read GetNumSerieFacturaEmisorResumenFin write SetNumSerieFacturaEmisorResumenFin stored NumSerieFacturaEmisorResumenFin_Specified;
    property FechaExpedicionFacturaEmisor:    fecha               read GetFechaExpedicionFacturaEmisor write SetFechaExpedicionFacturaEmisor;
  end;



  // ************************************************************************ //
  // XML       : ConsultaInmueblesAdicionalesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaInmueblesAdicionalesType = class(ConsultaInformacion)
  private
    FFiltroConsultaInmueblesAdicionales: LRFiltroInmueblesAdicionalesType;
    function  GetFiltroConsultaInmueblesAdicionales: LRFiltroInmueblesAdicionalesType;
    procedure SetFiltroConsultaInmueblesAdicionales(const ALRFiltroInmueblesAdicionalesType: LRFiltroInmueblesAdicionalesType);
  public
    destructor Destroy; override;
  published
    property FiltroConsultaInmueblesAdicionales: LRFiltroInmueblesAdicionalesType  read GetFiltroConsultaInmueblesAdicionales write SetFiltroConsultaInmueblesAdicionales;
  end;



  // ************************************************************************ //
  // XML       : LRConsultaVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaVentaBienesConsignaType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroVentaBienesConsignaType;
    function  GetFiltroConsulta: LRFiltroVentaBienesConsignaType;
    procedure SetFiltroConsulta(const ALRFiltroVentaBienesConsignaType: LRFiltroVentaBienesConsignaType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroVentaBienesConsignaType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : LRConsultaLROperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaLROperacionesSegurosType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroOperacionesSegurosType;
    function  GetFiltroConsulta: LRFiltroOperacionesSegurosType;
    procedure SetFiltroConsulta(const ALRFiltroOperacionesSegurosType: LRFiltroOperacionesSegurosType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroOperacionesSegurosType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaCobrosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaCobrosType = class(ConsultaInformacion)
  private
    FFiltroConsultaCobros: LRFiltroCobrosType;
    function  GetFiltroConsultaCobros: LRFiltroCobrosType;
    procedure SetFiltroConsultaCobros(const ALRFiltroCobrosType: LRFiltroCobrosType);
  public
    destructor Destroy; override;
  published
    property FiltroConsultaCobros: LRFiltroCobrosType  read GetFiltroConsultaCobros write SetFiltroConsultaCobros;
  end;



  // ************************************************************************ //
  // XML       : ConsultaPagosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaPagosType = class(ConsultaInformacion)
  private
    FFiltroConsultaPagos: LRFiltroPagosType;
    function  GetFiltroConsultaPagos: LRFiltroPagosType;
    procedure SetFiltroConsultaPagos(const ALRFiltroPagosType: LRFiltroPagosType);
  public
    destructor Destroy; override;
  published
    property FiltroConsultaPagos: LRFiltroPagosType  read GetFiltroConsultaPagos write SetFiltroConsultaPagos;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroPagosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroPagosType = class(TRemotable)
  private
    FIDFactura: IDFacturaRecibidaNombreBCType;
    FClavePaginacion: Double;
    FClavePaginacion_Specified: boolean;
    function  GetIDFactura: IDFacturaRecibidaNombreBCType;
    procedure SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
    function  GetClavePaginacion(Index: Integer): Double;
    procedure SetClavePaginacion(Index: Integer; const ADouble: Double);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:       IDFacturaRecibidaNombreBCType  read GetIDFactura write SetIDFactura;
    property ClavePaginacion: Double                         Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaCobrosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaCobrosType = class(RespuestaConsultaFacturaCobrosType)
  private
    FRegistroRespuestaConsultaCobros: Array_Of_RegistroRespuestaConsultaCobrosType;
    FRegistroRespuestaConsultaCobros_Specified: boolean;
    FClavePaginacion: Double;
    FClavePaginacion_Specified: boolean;
    function  GetRegistroRespuestaConsultaCobros(Index: Integer): Array_Of_RegistroRespuestaConsultaCobrosType;
    procedure SetRegistroRespuestaConsultaCobros(Index: Integer; const AArray_Of_RegistroRespuestaConsultaCobrosType: Array_Of_RegistroRespuestaConsultaCobrosType);
    function  RegistroRespuestaConsultaCobros_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): Double;
    procedure SetClavePaginacion(Index: Integer; const ADouble: Double);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property RegistroRespuestaConsultaCobros: Array_Of_RegistroRespuestaConsultaCobrosType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaCobros write SetRegistroRespuestaConsultaCobros stored RegistroRespuestaConsultaCobros_Specified;
    property ClavePaginacion:                 Double                                        Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaCobros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaCobros = class(RespuestaConsultaCobrosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaPagosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaPagosType = class(RespuestaConsultaFacturaPagosType)
  private
    FRegistroRespuestaConsultaPagos: Array_Of_RegistroRespuestaConsultaPagosType;
    FRegistroRespuestaConsultaPagos_Specified: boolean;
    FClavePaginacion: Double;
    FClavePaginacion_Specified: boolean;
    function  GetRegistroRespuestaConsultaPagos(Index: Integer): Array_Of_RegistroRespuestaConsultaPagosType;
    procedure SetRegistroRespuestaConsultaPagos(Index: Integer; const AArray_Of_RegistroRespuestaConsultaPagosType: Array_Of_RegistroRespuestaConsultaPagosType);
    function  RegistroRespuestaConsultaPagos_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): Double;
    procedure SetClavePaginacion(Index: Integer; const ADouble: Double);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property RegistroRespuestaConsultaPagos: Array_Of_RegistroRespuestaConsultaPagosType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaPagos write SetRegistroRespuestaConsultaPagos stored RegistroRespuestaConsultaPagos_Specified;
    property ClavePaginacion:                Double                                       Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaPagos, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaPagos = class(RespuestaConsultaPagosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : LRFiltroCobrosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroCobrosType = class(TRemotable)
  private
    FIDFactura: IDFacturaExpedidaBCType;
    FClavePaginacion: Double;
    FClavePaginacion_Specified: boolean;
    function  GetIDFactura: IDFacturaExpedidaBCType;
    procedure SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
    function  GetClavePaginacion(Index: Integer): Double;
    procedure SetClavePaginacion(Index: Integer; const ADouble: Double);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:       IDFacturaExpedidaBCType  read GetIDFactura write SetIDFactura;
    property ClavePaginacion: Double                   Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRConsultaRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaRecibidasType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroRecibidasType;
    function  GetFiltroConsulta: LRFiltroRecibidasType;
    procedure SetFiltroConsulta(const ALRFiltroRecibidasType: LRFiltroRecibidasType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroRecibidasType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRFacturasRecibidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLRFacturasRecibidas = class(LRConsultaRecibidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : LRConsultaEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  LRConsultaEmitidasType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroEmitidasType;
    function  GetFiltroConsulta: LRFiltroEmitidasType;
    procedure SetFiltroConsulta(const ALRFiltroEmitidasType: LRFiltroEmitidasType);
  public
    constructor Create; override;
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroEmitidasType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRFacturasEmitidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  ConsultaLRFacturasEmitidas = class(LRConsultaEmitidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ClavePaginacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ClavePaginacion2 = class(TRemotable)
  private
    FContraparte: PersonaFisicaJuridicaType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
  public
    destructor Destroy; override;
  published
    property Contraparte: PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
  end;



  // ************************************************************************ //
  // XML       : ClavePaginacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ClavePaginacion3 = class(TRemotable)
  private
    FContraparte: PersonaFisicaJuridicaType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
  public
    destructor Destroy; override;
  published
    property Contraparte: PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
  end;



  // ************************************************************************ //
  // XML       : LRConsultaDetOperIntracomunitariasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaDetOperIntracomunitariasType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroDetOperIntracomunitariasType;
    function  GetFiltroConsulta: LRFiltroDetOperIntracomunitariasType;
    procedure SetFiltroConsulta(const ALRFiltroDetOperIntracomunitariasType: LRFiltroDetOperIntracomunitariasType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroDetOperIntracomunitariasType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRDetOperIntracomunitarias, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLRDetOperIntracomunitarias = class(LRConsultaDetOperIntracomunitariasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : LRConsultaCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaCobrosMetalicoType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroCobrosMetalicoType;
    function  GetFiltroConsulta: LRFiltroCobrosMetalicoType;
    procedure SetFiltroConsulta(const ALRFiltroCobrosMetalicoType: LRFiltroCobrosMetalicoType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroCobrosMetalicoType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRCobrosMetalico, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLRCobrosMetalico = class(LRConsultaCobrosMetalicoType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : LRConsultaAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaAgenciasViajesType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroAgenciasViajesType;
    function  GetFiltroConsulta: LRFiltroAgenciasViajesType;
    procedure SetFiltroConsulta(const ALRFiltroAgenciasViajesType: LRFiltroAgenciasViajesType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroAgenciasViajesType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRFactInformadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  ConsultaLRFactInformadasClienteType = class(ConsultaInformacionCliente)
  private
    FFiltroConsulta: LRFiltroFactInformadasClienteType;
    function  GetFiltroConsulta: LRFiltroFactInformadasClienteType;
    procedure SetFiltroConsulta(const ALRFiltroFactInformadasClienteType: LRFiltroFactInformadasClienteType);
  public
    constructor Create; override;
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroFactInformadasClienteType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRFactInformadasCliente, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  ConsultaLRFactInformadasCliente = class(ConsultaLRFactInformadasClienteType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRFactInformadasAgrupadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  ConsultaLRFactInformadasAgrupadasClienteType = class(ConsultaInformacionCliente)
  private
    FFiltroConsulta: LRFiltroFactInformadasAgrupadasClienteType;
    function  GetFiltroConsulta: LRFiltroFactInformadasAgrupadasClienteType;
    procedure SetFiltroConsulta(const ALRFiltroFactInformadasAgrupadasClienteType: LRFiltroFactInformadasAgrupadasClienteType);
  public
    constructor Create; override;
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroFactInformadasAgrupadasClienteType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRFactInformadasAgrupadasCliente, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  ConsultaLRFactInformadasAgrupadasCliente = class(ConsultaLRFactInformadasAgrupadasClienteType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : LRConsultaBienesInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRConsultaBienesInversionType = class(ConsultaInformacion)
  private
    FFiltroConsulta: LRFiltroBienInversionType;
    function  GetFiltroConsulta: LRFiltroBienInversionType;
    procedure SetFiltroConsulta(const ALRFiltroBienInversionType: LRFiltroBienInversionType);
  public
    destructor Destroy; override;
  published
    property FiltroConsulta: LRFiltroBienInversionType  read GetFiltroConsulta write SetFiltroConsulta;
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRBienesInversion, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLRBienesInversion = class(LRConsultaBienesInversionType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasAgrupadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRFacturasAgrupadasClienteType = class(ConsultaInformacionCliente)
  private
    FResultadoConsulta: ResultadoConsultaType;
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  published
    property ResultadoConsulta: ResultadoConsultaType  read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRFacturasClienteType = class(ConsultaInformacionCliente)
  private
    FIndicadorPaginacion: IndicadorPaginacionType;
    FResultadoConsulta: ResultadoConsultaType;
    function  GetIndicadorPaginacion: IndicadorPaginacionType;
    procedure SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  published
    property IndicadorPaginacion: IndicadorPaginacionType  read GetIndicadorPaginacion write SetIndicadorPaginacion;
    property ResultadoConsulta:   ResultadoConsultaType    read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaFactInformadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaFactInformadasClienteType = class(TRemotable)
  private
    FIDFactura: IDFacturaImputacionType;
    FPeriodoLiquidacion: PeriodoLiquidacion10;
    FDatosFacturaInformadaCliente: FacturaRespuestaInformadaClienteType;
    FCliente: PersonaFisicaJuridicaUnicaESType;
    FEstadoFactura: EstadoFacturaImputacionType;
    function  GetIDFactura: IDFacturaImputacionType;
    procedure SetIDFactura(const AIDFacturaImputacionType: IDFacturaImputacionType);
    function  GetPeriodoLiquidacion: PeriodoLiquidacion10;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion10: PeriodoLiquidacion10);
    function  GetDatosFacturaInformadaCliente: FacturaRespuestaInformadaClienteType;
    procedure SetDatosFacturaInformadaCliente(const AFacturaRespuestaInformadaClienteType: FacturaRespuestaInformadaClienteType);
    function  GetCliente: PersonaFisicaJuridicaUnicaESType;
    procedure SetCliente(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  GetEstadoFactura: EstadoFacturaImputacionType;
    procedure SetEstadoFactura(const AEstadoFacturaImputacionType: EstadoFacturaImputacionType);
  public
    destructor Destroy; override;
  published
    property IDFactura:                    IDFacturaImputacionType               read GetIDFactura write SetIDFactura;
    property PeriodoLiquidacion:           PeriodoLiquidacion10                  read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property DatosFacturaInformadaCliente: FacturaRespuestaInformadaClienteType  read GetDatosFacturaInformadaCliente write SetDatosFacturaInformadaCliente;
    property Cliente:                      PersonaFisicaJuridicaUnicaESType      read GetCliente write SetCliente;
    property EstadoFactura:                EstadoFacturaImputacionType           read GetEstadoFactura write SetEstadoFactura;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFactInformadasAgrupadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaConsultaLRFactInformadasAgrupadasClienteType = class(RespuestaConsultaLRFacturasAgrupadasClienteType)
  private
    FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente: Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;
    FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente(Index: Integer): Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;
    procedure SetRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente(Index: Integer; const AArray_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType: Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType);
    function  RegistroRespuestaConsultaLRFactInformadasAgrupadasCliente_Specified(Index: Integer): boolean;
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray(Index: Integer): RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;       
    procedure  SetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaFactInformadasAgrupadasClienteType);
    function   GetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray[Index: Integer]: RegistroRespuestaConsultaFactInformadasAgrupadasClienteType read GetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray write SetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArrayLength write SetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRFactInformadasAgrupadasCliente: Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente write SetRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente stored RegistroRespuestaConsultaLRFactInformadasAgrupadasCliente_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFactInformadasAgrupadasCliente, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaConsultaLRFactInformadasAgrupadasCliente = class(RespuestaConsultaLRFactInformadasAgrupadasClienteType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaCobrosMetalicoType = class(TRemotable)
  private
    FDatosCobroMetalico: RespuestaCobrosMetalicoType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoCobroMetalico: EstadoFactura2Type;
    function  GetDatosCobroMetalico: RespuestaCobrosMetalicoType;
    procedure SetDatosCobroMetalico(const ARespuestaCobrosMetalicoType: RespuestaCobrosMetalicoType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoCobroMetalico: EstadoFactura2Type;
    procedure SetEstadoCobroMetalico(const AEstadoFactura2Type: EstadoFactura2Type);
  public
    destructor Destroy; override;
  published
    property DatosCobroMetalico:  RespuestaCobrosMetalicoType  read GetDatosCobroMetalico write SetDatosCobroMetalico;
    property DatosPresentacion:   DatosPresentacion2Type       read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoCobroMetalico: EstadoFactura2Type           read GetEstadoCobroMetalico write SetEstadoCobroMetalico;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaBienesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaBienesType = class(TRemotable)
  private
    FIDFactura: IDFacturaComunitariaType;
    FDatosBienInversion: BienDeInversionType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoFactura: EstadoFactura2Type;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetDatosBienInversion: BienDeInversionType;
    procedure SetDatosBienInversion(const ABienDeInversionType: BienDeInversionType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoFactura: EstadoFactura2Type;
    procedure SetEstadoFactura(const AEstadoFactura2Type: EstadoFactura2Type);
  public
    destructor Destroy; override;
  published
    property IDFactura:          IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property DatosBienInversion: BienDeInversionType       read GetDatosBienInversion write SetDatosBienInversion;
    property DatosPresentacion:  DatosPresentacion2Type    read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoFactura:      EstadoFactura2Type        read GetEstadoFactura write SetEstadoFactura;
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaDetOperIntracomunitariasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaDetOperIntracomunitariasType = class(TRemotable)
  private
    FIDFactura: IDFacturaComunitariaType;
    FDatosDetOperIntracomunitarias: RespuestaDetOperIntracomunitariaType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoFactura: EstadoFactura2Type;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetDatosDetOperIntracomunitarias: RespuestaDetOperIntracomunitariaType;
    procedure SetDatosDetOperIntracomunitarias(const ARespuestaDetOperIntracomunitariaType: RespuestaDetOperIntracomunitariaType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoFactura: EstadoFactura2Type;
    procedure SetEstadoFactura(const AEstadoFactura2Type: EstadoFactura2Type);
  public
    destructor Destroy; override;
  published
    property IDFactura:                     IDFacturaComunitariaType              read GetIDFactura write SetIDFactura;
    property DatosDetOperIntracomunitarias: RespuestaDetOperIntracomunitariaType  read GetDatosDetOperIntracomunitarias write SetDatosDetOperIntracomunitarias;
    property DatosPresentacion:             DatosPresentacion2Type                read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoFactura:                 EstadoFactura2Type                    read GetEstadoFactura write SetEstadoFactura;
  end;



  // ************************************************************************ //
  // XML       : ConsultaPagos, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaPagos = class(ConsultaPagosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ConsultaLROperacionesSeguros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLROperacionesSeguros = class(LRConsultaLROperacionesSegurosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRConsultaVentaBienesConsigna, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLRConsultaVentaBienesConsigna = class(LRConsultaVentaBienesConsignaType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ConsultaLRAgenciasViajes, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaLRAgenciasViajes = class(LRConsultaAgenciasViajesType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ConsultaCobros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaCobros = class(ConsultaCobrosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : ConsultaInmueblesAdicionales, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ConsultaInmueblesAdicionales = class(ConsultaInmueblesAdicionalesType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaRecibidasType = class(TRemotable)
  private
    FIDFactura: IDFacturaRecibidaType;
    FDatosFacturaRecibida: FacturaRespuestaRecibidaType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoFactura: EstadoFacturaType;
    FDatosDescuadreContraparte: DatosDescuadreContraparteType;
    FDatosDescuadreContraparte_Specified: boolean;
    function  GetIDFactura: IDFacturaRecibidaType;
    procedure SetIDFactura(const AIDFacturaRecibidaType: IDFacturaRecibidaType);
    function  GetDatosFacturaRecibida: FacturaRespuestaRecibidaType;
    procedure SetDatosFacturaRecibida(const AFacturaRespuestaRecibidaType: FacturaRespuestaRecibidaType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoFactura: EstadoFacturaType;
    procedure SetEstadoFactura(const AEstadoFacturaType: EstadoFacturaType);
    function  GetDatosDescuadreContraparte(Index: Integer): DatosDescuadreContraparteType;
    procedure SetDatosDescuadreContraparte(Index: Integer; const ADatosDescuadreContraparteType: DatosDescuadreContraparteType);
    function  DatosDescuadreContraparte_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                 IDFacturaRecibidaType          read GetIDFactura write SetIDFactura;
    property DatosFacturaRecibida:      FacturaRespuestaRecibidaType   read GetDatosFacturaRecibida write SetDatosFacturaRecibida;
    property DatosPresentacion:         DatosPresentacion2Type         read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoFactura:             EstadoFacturaType              read GetEstadoFactura write SetEstadoFactura;
    property DatosDescuadreContraparte: DatosDescuadreContraparteType  Index (IS_OPTN) read GetDatosDescuadreContraparte write SetDatosDescuadreContraparte stored DatosDescuadreContraparte_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFactInformadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaConsultaLRFactInformadasClienteType = class(RespuestaConsultaLRFacturasClienteType)
  private
    FRegistroRespuestaConsultaLRFactInformadasCliente: Array_Of_RegistroRespuestaConsultaFactInformadasClienteType;
    FRegistroRespuestaConsultaLRFactInformadasCliente_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRFactInformadasCliente(Index: Integer): Array_Of_RegistroRespuestaConsultaFactInformadasClienteType;
    procedure SetRegistroRespuestaConsultaLRFactInformadasCliente(Index: Integer; const AArray_Of_RegistroRespuestaConsultaFactInformadasClienteType: Array_Of_RegistroRespuestaConsultaFactInformadasClienteType);
    function  RegistroRespuestaConsultaLRFactInformadasCliente_Specified(Index: Integer): boolean;
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaFactInformadasClienteTypeArray(Index: Integer): RegistroRespuestaConsultaFactInformadasClienteType;       
    procedure  SetRegistroRespuestaConsultaFactInformadasClienteTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaFactInformadasClienteType);
    function   GetRegistroRespuestaConsultaFactInformadasClienteTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaFactInformadasClienteTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaFactInformadasClienteTypeArray[Index: Integer]: RegistroRespuestaConsultaFactInformadasClienteType read GetRegistroRespuestaConsultaFactInformadasClienteTypeArray write SetRegistroRespuestaConsultaFactInformadasClienteTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaFactInformadasClienteTypeArrayLength write SetRegistroRespuestaConsultaFactInformadasClienteTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRFactInformadasCliente: Array_Of_RegistroRespuestaConsultaFactInformadasClienteType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRFactInformadasCliente write SetRegistroRespuestaConsultaLRFactInformadasCliente stored RegistroRespuestaConsultaLRFactInformadasCliente_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFactInformadasCliente, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaConsultaLRFactInformadasCliente = class(RespuestaConsultaLRFactInformadasClienteType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRFacturasType = class(ConsultaInformacion)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion11;
    FIndicadorPaginacion: IndicadorPaginacionType;
    FResultadoConsulta: ResultadoConsultaType;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion11;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion11: PeriodoLiquidacion11);
    function  GetIndicadorPaginacion: IndicadorPaginacionType;
    procedure SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
    function  GetResultadoConsulta: ResultadoConsultaType;
    procedure SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:  PeriodoLiquidacion11     read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property IndicadorPaginacion: IndicadorPaginacionType  read GetIndicadorPaginacion write SetIndicadorPaginacion;
    property ResultadoConsulta:   ResultadoConsultaType    read GetResultadoConsulta write SetResultadoConsulta;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaConsultaLRFacturasEmitidasType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLRFacturasEmitidas: Array_Of_RegistroRespuestaConsultaEmitidasType;
    FRegistroRespuestaConsultaLRFacturasEmitidas_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRFacturasEmitidas(Index: Integer): Array_Of_RegistroRespuestaConsultaEmitidasType;
    procedure SetRegistroRespuestaConsultaLRFacturasEmitidas(Index: Integer; const AArray_Of_RegistroRespuestaConsultaEmitidasType: Array_Of_RegistroRespuestaConsultaEmitidasType);
    function  RegistroRespuestaConsultaLRFacturasEmitidas_Specified(Index: Integer): boolean;
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaEmitidasTypeArray(Index: Integer): RegistroRespuestaConsultaEmitidasType;       
    procedure  SetRegistroRespuestaConsultaEmitidasTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaEmitidasType);
    function   GetRegistroRespuestaConsultaEmitidasTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaEmitidasTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaEmitidasTypeArray[Index: Integer]: RegistroRespuestaConsultaEmitidasType read GetRegistroRespuestaConsultaEmitidasTypeArray write SetRegistroRespuestaConsultaEmitidasTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaEmitidasTypeArrayLength write SetRegistroRespuestaConsultaEmitidasTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRFacturasEmitidas: Array_Of_RegistroRespuestaConsultaEmitidasType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRFacturasEmitidas write SetRegistroRespuestaConsultaLRFacturasEmitidas stored RegistroRespuestaConsultaLRFacturasEmitidas_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasEmitidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // Info      : Wrapper
  // ************************************************************************ //
  RespuestaConsultaLRFacturasEmitidas = class(RespuestaConsultaLRFacturasEmitidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRFacturasRecibidasType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLRFacturasRecibidas: Array_Of_RegistroRespuestaConsultaRecibidasType;
    FRegistroRespuestaConsultaLRFacturasRecibidas_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRFacturasRecibidas(Index: Integer): Array_Of_RegistroRespuestaConsultaRecibidasType;
    procedure SetRegistroRespuestaConsultaLRFacturasRecibidas(Index: Integer; const AArray_Of_RegistroRespuestaConsultaRecibidasType: Array_Of_RegistroRespuestaConsultaRecibidasType);
    function  RegistroRespuestaConsultaLRFacturasRecibidas_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaRecibidasTypeArray(Index: Integer): RegistroRespuestaConsultaRecibidasType;       
    procedure  SetRegistroRespuestaConsultaRecibidasTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaRecibidasType);
    function   GetRegistroRespuestaConsultaRecibidasTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaRecibidasTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaRecibidasTypeArray[Index: Integer]: RegistroRespuestaConsultaRecibidasType read GetRegistroRespuestaConsultaRecibidasTypeArray write SetRegistroRespuestaConsultaRecibidasTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaRecibidasTypeArrayLength write SetRegistroRespuestaConsultaRecibidasTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRFacturasRecibidas: Array_Of_RegistroRespuestaConsultaRecibidasType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRFacturasRecibidas write SetRegistroRespuestaConsultaLRFacturasRecibidas stored RegistroRespuestaConsultaLRFacturasRecibidas_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRFacturasRecibidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRFacturasRecibidas = class(RespuestaConsultaLRFacturasRecibidasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRDetOperIntracomunitariasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRDetOperIntracomunitariasType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLRDetOperIntracomunitarias: Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType;
    FRegistroRespuestaConsultaLRDetOperIntracomunitarias_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRDetOperIntracomunitarias(Index: Integer): Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType;
    procedure SetRegistroRespuestaConsultaLRDetOperIntracomunitarias(Index: Integer; const AArray_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType: Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType);
    function  RegistroRespuestaConsultaLRDetOperIntracomunitarias_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArray(Index: Integer): RegistroRespuestaConsultaDetOperIntracomunitariasType;       
    procedure  SetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaDetOperIntracomunitariasType);
    function   GetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaDetOperIntracomunitariasTypeArray[Index: Integer]: RegistroRespuestaConsultaDetOperIntracomunitariasType read GetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArray write SetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArrayLength write SetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRDetOperIntracomunitarias: Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRDetOperIntracomunitarias write SetRegistroRespuestaConsultaLRDetOperIntracomunitarias stored RegistroRespuestaConsultaLRDetOperIntracomunitarias_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRDetOperIntracomunitarias, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRDetOperIntracomunitarias = class(RespuestaConsultaLRDetOperIntracomunitariasType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRAgenciasViajesType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLRAgenciasViajes: Array_Of_RegistroRespuestaConsultaAgenciasViajesType;
    FRegistroRespuestaConsultaLRAgenciasViajes_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRAgenciasViajes(Index: Integer): Array_Of_RegistroRespuestaConsultaAgenciasViajesType;
    procedure SetRegistroRespuestaConsultaLRAgenciasViajes(Index: Integer; const AArray_Of_RegistroRespuestaConsultaAgenciasViajesType: Array_Of_RegistroRespuestaConsultaAgenciasViajesType);
    function  RegistroRespuestaConsultaLRAgenciasViajes_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaAgenciasViajesTypeArray(Index: Integer): RegistroRespuestaConsultaAgenciasViajesType;       
    procedure  SetRegistroRespuestaConsultaAgenciasViajesTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaAgenciasViajesType);
    function   GetRegistroRespuestaConsultaAgenciasViajesTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaAgenciasViajesTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaAgenciasViajesTypeArray[Index: Integer]: RegistroRespuestaConsultaAgenciasViajesType read GetRegistroRespuestaConsultaAgenciasViajesTypeArray write SetRegistroRespuestaConsultaAgenciasViajesTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaAgenciasViajesTypeArrayLength write SetRegistroRespuestaConsultaAgenciasViajesTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRAgenciasViajes: Array_Of_RegistroRespuestaConsultaAgenciasViajesType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRAgenciasViajes write SetRegistroRespuestaConsultaLRAgenciasViajes stored RegistroRespuestaConsultaLRAgenciasViajes_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRAgenciasViajes, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRAgenciasViajes = class(RespuestaConsultaLRAgenciasViajesType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRCobrosMetalicoType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLRCobrosMetalico: Array_Of_RegistroRespuestaConsultaCobrosMetalicoType;
    FRegistroRespuestaConsultaLRCobrosMetalico_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRCobrosMetalico(Index: Integer): Array_Of_RegistroRespuestaConsultaCobrosMetalicoType;
    procedure SetRegistroRespuestaConsultaLRCobrosMetalico(Index: Integer; const AArray_Of_RegistroRespuestaConsultaCobrosMetalicoType: Array_Of_RegistroRespuestaConsultaCobrosMetalicoType);
    function  RegistroRespuestaConsultaLRCobrosMetalico_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaCobrosMetalicoTypeArray(Index: Integer): RegistroRespuestaConsultaCobrosMetalicoType;       
    procedure  SetRegistroRespuestaConsultaCobrosMetalicoTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaCobrosMetalicoType);
    function   GetRegistroRespuestaConsultaCobrosMetalicoTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaCobrosMetalicoTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaCobrosMetalicoTypeArray[Index: Integer]: RegistroRespuestaConsultaCobrosMetalicoType read GetRegistroRespuestaConsultaCobrosMetalicoTypeArray write SetRegistroRespuestaConsultaCobrosMetalicoTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaCobrosMetalicoTypeArrayLength write SetRegistroRespuestaConsultaCobrosMetalicoTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRCobrosMetalico: Array_Of_RegistroRespuestaConsultaCobrosMetalicoType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRCobrosMetalico write SetRegistroRespuestaConsultaLRCobrosMetalico stored RegistroRespuestaConsultaLRCobrosMetalico_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRCobrosMetalico, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRCobrosMetalico = class(RespuestaConsultaLRCobrosMetalicoType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRBienesInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRBienesInversionType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLRBienesInversion: Array_Of_RegistroRespuestaConsultaBienesType;
    FRegistroRespuestaConsultaLRBienesInversion_Specified: boolean;
    function  GetRegistroRespuestaConsultaLRBienesInversion(Index: Integer): Array_Of_RegistroRespuestaConsultaBienesType;
    procedure SetRegistroRespuestaConsultaLRBienesInversion(Index: Integer; const AArray_Of_RegistroRespuestaConsultaBienesType: Array_Of_RegistroRespuestaConsultaBienesType);
    function  RegistroRespuestaConsultaLRBienesInversion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaBienesTypeArray(Index: Integer): RegistroRespuestaConsultaBienesType;       
    procedure  SetRegistroRespuestaConsultaBienesTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaBienesType);
    function   GetRegistroRespuestaConsultaBienesTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaBienesTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaBienesTypeArray[Index: Integer]: RegistroRespuestaConsultaBienesType read GetRegistroRespuestaConsultaBienesTypeArray write SetRegistroRespuestaConsultaBienesTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaBienesTypeArrayLength write SetRegistroRespuestaConsultaBienesTypeArrayLength;
  published
    property RegistroRespuestaConsultaLRBienesInversion: Array_Of_RegistroRespuestaConsultaBienesType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLRBienesInversion write SetRegistroRespuestaConsultaLRBienesInversion stored RegistroRespuestaConsultaLRBienesInversion_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLRBienesInversion, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLRBienesInversion = class(RespuestaConsultaLRBienesInversionType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLROperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLROperacionesSegurosType = class(RespuestaConsultaLRFacturasType)
  private
    FRegistroRespuestaConsultaLROperacionesSeguros: Array_Of_RegistroRespuestaConsultaOperacionesSegurosType;
    FRegistroRespuestaConsultaLROperacionesSeguros_Specified: boolean;
    function  GetRegistroRespuestaConsultaLROperacionesSeguros(Index: Integer): Array_Of_RegistroRespuestaConsultaOperacionesSegurosType;
    procedure SetRegistroRespuestaConsultaLROperacionesSeguros(Index: Integer; const AArray_Of_RegistroRespuestaConsultaOperacionesSegurosType: Array_Of_RegistroRespuestaConsultaOperacionesSegurosType);
    function  RegistroRespuestaConsultaLROperacionesSeguros_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
    function   GetRegistroRespuestaConsultaOperacionesSegurosTypeArray(Index: Integer): RegistroRespuestaConsultaOperacionesSegurosType;       
    procedure  SetRegistroRespuestaConsultaOperacionesSegurosTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaOperacionesSegurosType);
    function   GetRegistroRespuestaConsultaOperacionesSegurosTypeArrayLength: Integer;
    procedure  SetRegistroRespuestaConsultaOperacionesSegurosTypeArrayLength(Len: Integer);

    property   RegistroRespuestaConsultaOperacionesSegurosTypeArray[Index: Integer]: RegistroRespuestaConsultaOperacionesSegurosType read GetRegistroRespuestaConsultaOperacionesSegurosTypeArray write SetRegistroRespuestaConsultaOperacionesSegurosTypeArray; default;
    property   Len: Integer read GetRegistroRespuestaConsultaOperacionesSegurosTypeArrayLength write SetRegistroRespuestaConsultaOperacionesSegurosTypeArrayLength;
  published
    property RegistroRespuestaConsultaLROperacionesSeguros: Array_Of_RegistroRespuestaConsultaOperacionesSegurosType  Index (IS_OPTN or IS_UNBD) read GetRegistroRespuestaConsultaLROperacionesSeguros write SetRegistroRespuestaConsultaLROperacionesSeguros stored RegistroRespuestaConsultaLROperacionesSeguros_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaConsultaLROperacionesSeguros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaConsultaLROperacionesSeguros = class(RespuestaConsultaLROperacionesSegurosType)
  private
  published
  end;



  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaEmitidasType = class(TRemotable)
  private
    FIDFactura: IDFacturaExpedidaType;
    FDatosFacturaEmitida: FacturaRespuestaExpedidaType;
    FDatosPresentacion: DatosPresentacion2Type;
    FEstadoFactura: EstadoFacturaType;
    FDatosDescuadreContraparte: DatosDescuadreContraparteType;
    FDatosDescuadreContraparte_Specified: boolean;
    function  GetIDFactura: IDFacturaExpedidaType;
    procedure SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
    function  GetDatosFacturaEmitida: FacturaRespuestaExpedidaType;
    procedure SetDatosFacturaEmitida(const AFacturaRespuestaExpedidaType: FacturaRespuestaExpedidaType);
    function  GetDatosPresentacion: DatosPresentacion2Type;
    procedure SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
    function  GetEstadoFactura: EstadoFacturaType;
    procedure SetEstadoFactura(const AEstadoFacturaType: EstadoFacturaType);
    function  GetDatosDescuadreContraparte(Index: Integer): DatosDescuadreContraparteType;
    procedure SetDatosDescuadreContraparte(Index: Integer; const ADatosDescuadreContraparteType: DatosDescuadreContraparteType);
    function  DatosDescuadreContraparte_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                 IDFacturaExpedidaType          read GetIDFactura write SetIDFactura;
    property DatosFacturaEmitida:       FacturaRespuestaExpedidaType   read GetDatosFacturaEmitida write SetDatosFacturaEmitida;
    property DatosPresentacion:         DatosPresentacion2Type         read GetDatosPresentacion write SetDatosPresentacion;
    property EstadoFactura:             EstadoFacturaType              read GetEstadoFactura write SetEstadoFactura;
    property DatosDescuadreContraparte: DatosDescuadreContraparteType  Index (IS_OPTN) read GetDatosDescuadreContraparte write SetDatosDescuadreContraparte stored DatosDescuadreContraparte_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRBajaAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaAgenciasViajesType = class(RegistroSii)
  private
    FContraparte: PersonaFisicaJuridicaType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
  public
    destructor Destroy; override;
  published
    property Contraparte: PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
  end;



  // ************************************************************************ //
  // XML       : LRCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRCobrosMetalicoType = class(RegistroSii)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FImporteTotal: ImporteSgn12_2Type;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetImporteTotal: ImporteSgn12_2Type;
    procedure SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:     PersonaFisicaJuridicaType         read GetContraparte write SetContraparte;
    property ImporteTotal:    ImporteSgn12_2Type                read GetImporteTotal write SetImporteTotal;
    property EntidadSucedida: PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRBajaCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaCobrosMetalicoType = class(RegistroSii)
  private
    FContraparte: PersonaFisicaJuridicaType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
  public
    destructor Destroy; override;
  published
    property Contraparte: PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
  end;



  // ************************************************************************ //
  // XML       : LRBienesInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBienesInversionType = class(RegistroSii)
  private
    FIDFactura: IDFacturaComunitariaType;
    FBienesInversion: BienDeInversionType;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetBienesInversion: BienDeInversionType;
    procedure SetBienesInversion(const ABienDeInversionType: BienDeInversionType);
  public
    destructor Destroy; override;
  published
    property IDFactura:       IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property BienesInversion: BienDeInversionType       read GetBienesInversion write SetBienesInversion;
  end;



  // ************************************************************************ //
  // XML       : LRBajaBienesInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaBienesInversionType = class(RegistroSii)
  private
    FIDFactura: IDFacturaComunitariaType;
    FIdentificacionBien: TextMax40Type;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetIdentificacionBien: TextMax40Type;
    procedure SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:          IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property IdentificacionBien: TextMax40Type             read GetIdentificacionBien write SetIdentificacionBien;
    property RefExterna:         TextMax60Type             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRAgenciasViajesType = class(RegistroSii)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FImporteTotal: ImporteSgn12_2Type;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetImporteTotal: ImporteSgn12_2Type;
    procedure SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:     PersonaFisicaJuridicaType         read GetContraparte write SetContraparte;
    property ImporteTotal:    ImporteSgn12_2Type                read GetImporteTotal write SetImporteTotal;
    property EntidadSucedida: PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRBajaOperacionIntracomunitariaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaOperacionIntracomunitariaType = class(RegistroSii)
  private
    FIDFactura: IDFacturaComunitariaType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:  IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property RefExterna: TextMax60Type             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRFacturasEmitidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  SuministroLRFacturasEmitidas = class(SuministroInformacion)
  private
    FRegistroLRFacturasEmitidas: Array_Of_LRfacturasEmitidasType;
    function  GetRegistroLRFacturasEmitidas(Index: Integer): Array_Of_LRfacturasEmitidasType;
    procedure SetRegistroLRFacturasEmitidas(Index: Integer; const AArray_Of_LRfacturasEmitidasType: Array_Of_LRfacturasEmitidasType);
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetLRfacturasEmitidasTypeArray(Index: Integer): LRfacturasEmitidasType;       
    procedure  SetLRfacturasEmitidasTypeArray(Index: Integer; const Item: LRfacturasEmitidasType);
    function   GetLRfacturasEmitidasTypeArrayLength: Integer;
    procedure  SetLRfacturasEmitidasTypeArrayLength(Len: Integer);

    property   LRfacturasEmitidasTypeArray[Index: Integer]: LRfacturasEmitidasType read GetLRfacturasEmitidasTypeArray write SetLRfacturasEmitidasTypeArray; default;
    property   Len: Integer read GetLRfacturasEmitidasTypeArrayLength write SetLRfacturasEmitidasTypeArrayLength;
  published
    property RegistroLRFacturasEmitidas: Array_Of_LRfacturasEmitidasType  Index (IS_UNBD) read GetRegistroLRFacturasEmitidas write SetRegistroLRFacturasEmitidas;
  end;



  // ************************************************************************ //
  // XML       : BajaLRFacturasEmitidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // Serializtn: [xoLiteralParam]
  // Info      : Wrapper
  // ************************************************************************ //
  BajaLRFacturasEmitidas = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaExpedidas: Array_Of_LRBajaExpedidasType;
    function  GetRegistroLRBajaExpedidas(Index: Integer): Array_Of_LRBajaExpedidasType;
    procedure SetRegistroLRBajaExpedidas(Index: Integer; const AArray_Of_LRBajaExpedidasType: Array_Of_LRBajaExpedidasType);
  public
    constructor Create; override;
    destructor Destroy; override;
    function   GetLRBajaExpedidasTypeArray(Index: Integer): LRBajaExpedidasType;       
    procedure  SetLRBajaExpedidasTypeArray(Index: Integer; const Item: LRBajaExpedidasType);
    function   GetLRBajaExpedidasTypeArrayLength: Integer;
    procedure  SetLRBajaExpedidasTypeArrayLength(Len: Integer);

    property   LRBajaExpedidasTypeArray[Index: Integer]: LRBajaExpedidasType read GetLRBajaExpedidasTypeArray write SetLRBajaExpedidasTypeArray; default;
    property   Len: Integer read GetLRBajaExpedidasTypeArrayLength write SetLRBajaExpedidasTypeArrayLength;
  published
    property RegistroLRBajaExpedidas: Array_Of_LRBajaExpedidasType  Index (IS_UNBD) read GetRegistroLRBajaExpedidas write SetRegistroLRBajaExpedidas;
  end;



  // ************************************************************************ //
  // XML       : LROperacionIntracomunitariaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LROperacionIntracomunitariaType = class(RegistroSii)
  private
    FIDFactura: IDFacturaComunitariaType;
    FContraparte: PersonaFisicaJuridicaType;
    FOperacionIntracomunitaria: OperacionIntracomunitariaType;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetOperacionIntracomunitaria: OperacionIntracomunitariaType;
    procedure SetOperacionIntracomunitaria(const AOperacionIntracomunitariaType: OperacionIntracomunitariaType);
  public
    destructor Destroy; override;
  published
    property IDFactura:                 IDFacturaComunitariaType       read GetIDFactura write SetIDFactura;
    property Contraparte:               PersonaFisicaJuridicaType      read GetContraparte write SetContraparte;
    property OperacionIntracomunitaria: OperacionIntracomunitariaType  read GetOperacionIntracomunitaria write SetOperacionIntracomunitaria;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroCobrosMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroCobrosMetalicoType = class(RegistroSii)
  private
    FContraparte: ContraparteConsultaType;
    FContraparte_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FCobroModificado: FacturaModificadaType;
    FCobroModificado_Specified: boolean;
    FClavePaginacion: ClavePaginacion2;
    FClavePaginacion_Specified: boolean;
    function  GetContraparte(Index: Integer): ContraparteConsultaType;
    procedure SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetCobroModificado(Index: Integer): FacturaModificadaType;
    procedure SetCobroModificado(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  CobroModificado_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacion2;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacion2: ClavePaginacion2);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:       ContraparteConsultaType     Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property FechaPresentacion: RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property CobroModificado:   FacturaModificadaType       Index (IS_OPTN) read GetCobroModificado write SetCobroModificado stored CobroModificado_Specified;
    property ClavePaginacion:   ClavePaginacion2            Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroAgenciasViajesType = class(RegistroSii)
  private
    FContraparte: ContraparteConsultaType;
    FContraparte_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FRegistroModificado: FacturaModificadaType;
    FRegistroModificado_Specified: boolean;
    FClavePaginacion: ClavePaginacion3;
    FClavePaginacion_Specified: boolean;
    function  GetContraparte(Index: Integer): ContraparteConsultaType;
    procedure SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetRegistroModificado(Index: Integer): FacturaModificadaType;
    procedure SetRegistroModificado(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  RegistroModificado_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacion3;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacion3: ClavePaginacion3);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:        ContraparteConsultaType     Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property FechaPresentacion:  RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property RegistroModificado: FacturaModificadaType       Index (IS_OPTN) read GetRegistroModificado write SetRegistroModificado stored RegistroModificado_Specified;
    property ClavePaginacion:    ClavePaginacion3            Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroVentaBienesConsignaType = class(TRemotable)
  private
    FEjercicio: YearType;
    FPeriodo: TipoPeriodoType;
    FIdRegistro: TextMax60Type;
    FIdRegistro_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FOperacionModificada: FacturaModificadaType;
    FOperacionModificada_Specified: boolean;
    FClavePaginacion: ClavePaginacion;
    FClavePaginacion_Specified: boolean;
    function  GetEjercicio: YearType;
    procedure SetEjercicio(const AYearType: YearType);
    function  GetPeriodo: TipoPeriodoType;
    procedure SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
    function  GetIdRegistro(Index: Integer): TextMax60Type;
    procedure SetIdRegistro(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  IdRegistro_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetOperacionModificada(Index: Integer): FacturaModificadaType;
    procedure SetOperacionModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  OperacionModificada_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacion;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacion: ClavePaginacion);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Ejercicio:           YearType                    read GetEjercicio write SetEjercicio;
    property Periodo:             TipoPeriodoType             read GetPeriodo write SetPeriodo;
    property IdRegistro:          TextMax60Type               Index (IS_OPTN) read GetIdRegistro write SetIdRegistro stored IdRegistro_Specified;
    property FechaPresentacion:   RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property OperacionModificada: FacturaModificadaType       Index (IS_OPTN) read GetOperacionModificada write SetOperacionModificada stored OperacionModificada_Specified;
    property ClavePaginacion:     ClavePaginacion             Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : EstadoFacturaImputacionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  EstadoFacturaImputacionType = class(TRemotable)
  private
    FEstadoCuadre: EstadoCuadreType;
    FEstadoCuadre_Specified: boolean;
    FTimestampEstadoCuadre: Timestamp;
    FTimestampEstadoCuadre_Specified: boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
    function  GetTimestampEstadoCuadre(Index: Integer): Timestamp;
    procedure SetTimestampEstadoCuadre(Index: Integer; const ATimestamp: Timestamp);
    function  TimestampEstadoCuadre_Specified(Index: Integer): boolean;
  published
    property EstadoCuadre:          EstadoCuadreType  Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
    property TimestampEstadoCuadre: Timestamp         Index (IS_OPTN) read GetTimestampEstadoCuadre write SetTimestampEstadoCuadre stored TimestampEstadoCuadre_Specified;
  end;

  Tipo10Type      =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : RegistroRespuestaConsultaFactInformadasAgrupadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RegistroRespuestaConsultaFactInformadasAgrupadasClienteType = class(TRemotable)
  private
    FCliente: PersonaFisicaJuridicaUnicaESType;
    FNumeroFacturas: Tipo10Type;
    function  GetCliente: PersonaFisicaJuridicaUnicaESType;
    procedure SetCliente(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  GetNumeroFacturas: Tipo10Type;
    procedure SetNumeroFacturas(const ATipo10Type: Tipo10Type);
  public
    destructor Destroy; override;
  published
    property Cliente:        PersonaFisicaJuridicaUnicaESType  read GetCliente write SetCliente;
    property NumeroFacturas: Tipo10Type                        read GetNumeroFacturas write SetNumeroFacturas;
  end;

  ImporteSgn14_2Type =  type string;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : DatosDescuadreContraparteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  DatosDescuadreContraparteType = class(TRemotable)
  private
    FSumBaseImponibleISP: ImporteSgn14_2Type;
    FSumBaseImponibleISP_Specified: boolean;
    FSumBaseImponible: ImporteSgn14_2Type;
    FSumBaseImponible_Specified: boolean;
    FSumCuota: ImporteSgn14_2Type;
    FSumCuota_Specified: boolean;
    FSumCuotaRecargoEquivalencia: ImporteSgn14_2Type;
    FSumCuotaRecargoEquivalencia_Specified: boolean;
    FImporteTotal: ImporteSgn12_2Type;
    FImporteTotal_Specified: boolean;
    function  GetSumBaseImponibleISP(Index: Integer): ImporteSgn14_2Type;
    procedure SetSumBaseImponibleISP(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
    function  SumBaseImponibleISP_Specified(Index: Integer): boolean;
    function  GetSumBaseImponible(Index: Integer): ImporteSgn14_2Type;
    procedure SetSumBaseImponible(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
    function  SumBaseImponible_Specified(Index: Integer): boolean;
    function  GetSumCuota(Index: Integer): ImporteSgn14_2Type;
    procedure SetSumCuota(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
    function  SumCuota_Specified(Index: Integer): boolean;
    function  GetSumCuotaRecargoEquivalencia(Index: Integer): ImporteSgn14_2Type;
    procedure SetSumCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
    function  SumCuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
    function  GetImporteTotal(Index: Integer): ImporteSgn12_2Type;
    procedure SetImporteTotal(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  ImporteTotal_Specified(Index: Integer): boolean;
  published
    property SumBaseImponibleISP:         ImporteSgn14_2Type  Index (IS_OPTN) read GetSumBaseImponibleISP write SetSumBaseImponibleISP stored SumBaseImponibleISP_Specified;
    property SumBaseImponible:            ImporteSgn14_2Type  Index (IS_OPTN) read GetSumBaseImponible write SetSumBaseImponible stored SumBaseImponible_Specified;
    property SumCuota:                    ImporteSgn14_2Type  Index (IS_OPTN) read GetSumCuota write SetSumCuota stored SumCuota_Specified;
    property SumCuotaRecargoEquivalencia: ImporteSgn14_2Type  Index (IS_OPTN) read GetSumCuotaRecargoEquivalencia write SetSumCuotaRecargoEquivalencia stored SumCuotaRecargoEquivalencia_Specified;
    property ImporteTotal:                ImporteSgn12_2Type  Index (IS_OPTN) read GetImporteTotal write SetImporteTotal stored ImporteTotal_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRBajaExpedidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaExpedidasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaExpedidaBCType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    function  GetIDFactura: IDFacturaExpedidaBCType;
    procedure SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:  IDFacturaExpedidaBCType  read GetIDFactura write SetIDFactura;
    property RefExterna: TextMax60Type            Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFacturasRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRFacturasRecibidasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaRecibidaType;
    FFacturaRecibida: FacturaRecibidaType;
    function  GetIDFactura: IDFacturaRecibidaType;
    procedure SetIDFactura(const AIDFacturaRecibidaType: IDFacturaRecibidaType);
    function  GetFacturaRecibida: FacturaRecibidaType;
    procedure SetFacturaRecibida(const AFacturaRecibidaType: FacturaRecibidaType);
  public
    destructor Destroy; override;
  published
    property IDFactura:       IDFacturaRecibidaType  read GetIDFactura write SetIDFactura;
    property FacturaRecibida: FacturaRecibidaType    read GetFacturaRecibida write SetFacturaRecibida;
  end;



  // ************************************************************************ //
  // XML       : LRBajaRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaRecibidasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaRecibidaNombreBCType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    function  GetIDFactura: IDFacturaRecibidaNombreBCType;
    procedure SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:  IDFacturaRecibidaNombreBCType  read GetIDFactura write SetIDFactura;
    property RefExterna: TextMax60Type                  Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRBajaRegistroLROperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRBajaRegistroLROperacionesSegurosType = class(RegistroSii)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FClaveOperacion: ClaveOperacionType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetClaveOperacion: ClaveOperacionType;
    procedure SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
  public
    destructor Destroy; override;
  published
    property Contraparte:    PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property ClaveOperacion: ClaveOperacionType         read GetClaveOperacion write SetClaveOperacion;
  end;



  // ************************************************************************ //
  // XML       : LROperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LROperacionesSegurosType = class(RegistroSii)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FClaveOperacion: ClaveOperacionType;
    FImporteTotal: ImporteSgn12_2Type;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetClaveOperacion: ClaveOperacionType;
    procedure SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
    function  GetImporteTotal: ImporteSgn12_2Type;
    procedure SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:     PersonaFisicaJuridicaType         read GetContraparte write SetContraparte;
    property ClaveOperacion:  ClaveOperacionType                read GetClaveOperacion write SetClaveOperacion;
    property ImporteTotal:    ImporteSgn12_2Type                read GetImporteTotal write SetImporteTotal;
    property EntidadSucedida: PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaOperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  RespuestaOperacionesSegurosType = class(TRemotable)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FClaveOperacion: ClaveOperacionType;
    FImporteTotal: ImporteSgn12_2Type;
    FEntidadSucedida: PersonaFisicaJuridicaUnicaESType;
    FEntidadSucedida_Specified: boolean;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetClaveOperacion: ClaveOperacionType;
    procedure SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
    function  GetImporteTotal: ImporteSgn12_2Type;
    procedure SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
    function  GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  EntidadSucedida_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:     PersonaFisicaJuridicaType         read GetContraparte write SetContraparte;
    property ClaveOperacion:  ClaveOperacionType                read GetClaveOperacion write SetClaveOperacion;
    property ImporteTotal:    ImporteSgn12_2Type                read GetImporteTotal write SetImporteTotal;
    property EntidadSucedida: PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetEntidadSucedida write SetEntidadSucedida stored EntidadSucedida_Specified;
  end;

  ErrorDetalleType =  type Int64;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : RegistroDuplicadoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd
  // ************************************************************************ //
  RegistroDuplicadoType = class(TRemotable)
  private
    FEstadoRegistro: EstadoRegistroSIIType2;
    FCodigoErrorRegistro: ErrorDetalleType;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    function  GetEstadoRegistro: EstadoRegistroSIIType2;
    procedure SetEstadoRegistro(const AEstadoRegistroSIIType2: EstadoRegistroSIIType2);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType: ErrorDetalleType);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
  published
    property EstadoRegistro:           EstadoRegistroSIIType2  read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType        Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type          Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
  end;

  ErrorDetalleType2 =  type Int64;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : RespuestaComunitariaBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaComunitariaBajaType = class(TRemotable)
  private
    FIDFactura: IDFacturaComunitariaType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property RefExterna:               TextMax60Type             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType        read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2         Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type            Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                    Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaVentaBienesConsignaBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaVentaBienesConsignaBajaType = class(TRemotable)
  private
    FIdRegistroDeclarado: IdRegistroDeclaradoType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetIdRegistroDeclarado: IdRegistroDeclaradoType;
    procedure SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IdRegistroDeclarado:      IdRegistroDeclaradoType  read GetIdRegistroDeclarado write SetIdRegistroDeclarado;
    property RefExterna:               TextMax60Type            Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType       read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2        Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type           Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                   Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaRecibidaBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaRecibidaBajaType = class(TRemotable)
  private
    FIDFactura: IDFacturaRecibidaNombreBCType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetIDFactura: IDFacturaRecibidaNombreBCType;
    procedure SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaRecibidaNombreBCType  read GetIDFactura write SetIDFactura;
    property RefExterna:               TextMax60Type                  Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType             read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2              Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type                 Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                         Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaExpedidaBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaExpedidaBajaType = class(TRemotable)
  private
    FIDFactura: IDFacturaExpedidaType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetIDFactura: IDFacturaExpedidaType;
    procedure SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaExpedidaType  read GetIDFactura write SetIDFactura;
    property RefExterna:               TextMax60Type          Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType     read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2      Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type         Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                 Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaBienBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaBienBajaType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion2;
    FIDFactura: IDFacturaComunitariaType;
    FIdentificacionBien: TextMax40Type;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion2;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion2: PeriodoLiquidacion2);
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetIdentificacionBien: TextMax40Type;
    procedure SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion2       read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property IDFactura:                IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property IdentificacionBien:       TextMax40Type             read GetIdentificacionBien write SetIdentificacionBien;
    property RefExterna:               TextMax60Type             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType        read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2         Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type            Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                    Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaOperacionesSegurosBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaOperacionesSegurosBajaType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion7;
    FContraparte: PersonaFisicaJuridicaType;
    FClaveOperacion: ClaveOperacionType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion7;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion7: PeriodoLiquidacion7);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetClaveOperacion: ClaveOperacionType;
    procedure SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion7        read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property Contraparte:              PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property ClaveOperacion:           ClaveOperacionType         read GetClaveOperacion write SetClaveOperacion;
    property EstadoRegistro:           EstadoRegistroType         read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2          Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type             Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaAgenciasViajesBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaAgenciasViajesBajaType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion9;
    FContraparte: PersonaFisicaJuridicaType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion9;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion9: PeriodoLiquidacion9);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion9        read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property Contraparte:              PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property EstadoRegistro:           EstadoRegistroType         read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2          Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type             Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaMetalicoBajaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaMetalicoBajaType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion4;
    FContraparte: PersonaFisicaJuridicaType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion4;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion4: PeriodoLiquidacion4);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion4        read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property Contraparte:              PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property EstadoRegistro:           EstadoRegistroType         read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2          Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type             Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
  end;

  ErrorDetalleType3 =  type Int64;      { "https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd"[GblSmpl] }


  // ************************************************************************ //
  // XML       : EstadoFactura2Type, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  EstadoFactura2Type = class(TRemotable)
  private
    FTimestampUltimaModificacion: Timestamp;
    FEstadoRegistro: EstadoRegistroSIIType;
    FCodigoErrorRegistro: ErrorDetalleType3;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    function  GetTimestampUltimaModificacion: Timestamp;
    procedure SetTimestampUltimaModificacion(const ATimestamp: Timestamp);
    function  GetEstadoRegistro: EstadoRegistroSIIType;
    procedure SetEstadoRegistro(const AEstadoRegistroSIIType: EstadoRegistroSIIType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType3;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType3: ErrorDetalleType3);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
  published
    property TimestampUltimaModificacion: Timestamp              read GetTimestampUltimaModificacion write SetTimestampUltimaModificacion;
    property EstadoRegistro:              EstadoRegistroSIIType  read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:         ErrorDetalleType3      Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro:    TextMax500Type         Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
  end;



  // ************************************************************************ //
  // XML       : EstadoFacturaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd
  // ************************************************************************ //
  EstadoFacturaType = class(TRemotable)
  private
    FEstadoCuadre: EstadoCuadreType;
    FEstadoCuadre_Specified: boolean;
    FTimestampEstadoCuadre: Timestamp;
    FTimestampEstadoCuadre_Specified: boolean;
    FTimestampUltimaModificacion: Timestamp;
    FEstadoRegistro: EstadoRegistroSIIType;
    FCodigoErrorRegistro: ErrorDetalleType3;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
    function  GetTimestampEstadoCuadre(Index: Integer): Timestamp;
    procedure SetTimestampEstadoCuadre(Index: Integer; const ATimestamp: Timestamp);
    function  TimestampEstadoCuadre_Specified(Index: Integer): boolean;
    function  GetTimestampUltimaModificacion: Timestamp;
    procedure SetTimestampUltimaModificacion(const ATimestamp: Timestamp);
    function  GetEstadoRegistro: EstadoRegistroSIIType;
    procedure SetEstadoRegistro(const AEstadoRegistroSIIType: EstadoRegistroSIIType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType3;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType3: ErrorDetalleType3);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
  published
    property EstadoCuadre:                EstadoCuadreType       Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
    property TimestampEstadoCuadre:       Timestamp              Index (IS_OPTN) read GetTimestampEstadoCuadre write SetTimestampEstadoCuadre stored TimestampEstadoCuadre_Specified;
    property TimestampUltimaModificacion: Timestamp              read GetTimestampUltimaModificacion write SetTimestampUltimaModificacion;
    property EstadoRegistro:              EstadoRegistroSIIType  read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:         ErrorDetalleType3      Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro:    TextMax500Type         Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaComunitariaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaComunitariaType = class(TRemotable)
  private
    FIDFactura: IDFacturaComunitariaType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property RefExterna:               TextMax60Type             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType        read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2         Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type            Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                    Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType     Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaBienType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaBienType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion3;
    FIDFactura: IDFacturaComunitariaType;
    FIdentificacionBien: TextMax40Type;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion3;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion3: PeriodoLiquidacion3);
    function  GetIDFactura: IDFacturaComunitariaType;
    procedure SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  GetIdentificacionBien: TextMax40Type;
    procedure SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion3       read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property IDFactura:                IDFacturaComunitariaType  read GetIDFactura write SetIDFactura;
    property IdentificacionBien:       TextMax40Type             read GetIdentificacionBien write SetIdentificacionBien;
    property RefExterna:               TextMax60Type             Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType        read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2         Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type            Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                    Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType     Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaMetalicoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaMetalicoType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion6;
    FContraparte: PersonaFisicaJuridicaType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion6;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion6: PeriodoLiquidacion6);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion6        read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property Contraparte:              PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property EstadoRegistro:           EstadoRegistroType         read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2          Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type             Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType      Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaRecibidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaRecibidaType = class(TRemotable)
  private
    FIDFactura: IDFacturaRecibidaType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetIDFactura: IDFacturaRecibidaType;
    procedure SetIDFactura(const AIDFacturaRecibidaType: IDFacturaRecibidaType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaRecibidaType  read GetIDFactura write SetIDFactura;
    property RefExterna:               TextMax60Type          Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType     read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2      Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type         Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                 Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType  Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaExpedidaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaExpedidaType = class(TRemotable)
  private
    FIDFactura: IDFacturaExpedidaType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetIDFactura: IDFacturaExpedidaType;
    procedure SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaExpedidaType  read GetIDFactura write SetIDFactura;
    property RefExterna:               TextMax60Type          Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType     read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2      Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type         Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                 Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType  Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaRecibidaPagoType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaRecibidaPagoType = class(TRemotable)
  private
    FIDFactura: IDFacturaRecibidaNombreBCType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    function  GetIDFactura: IDFacturaRecibidaNombreBCType;
    procedure SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:                IDFacturaRecibidaNombreBCType  read GetIDFactura write SetIDFactura;
    property EstadoRegistro:           EstadoRegistroType             read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2              Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type                 Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaVentaBienesConsignaType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaVentaBienesConsignaType2 = class(TRemotable)
  private
    FIdRegistroDeclarado: IdRegistroDeclaradoType;
    FRefExterna: TextMax60Type;
    FRefExterna_Specified: boolean;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetIdRegistroDeclarado: IdRegistroDeclaradoType;
    procedure SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
    function  GetRefExterna(Index: Integer): TextMax60Type;
    procedure SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
    function  RefExterna_Specified(Index: Integer): boolean;
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IdRegistroDeclarado:      IdRegistroDeclaradoType  read GetIdRegistroDeclarado write SetIdRegistroDeclarado;
    property RefExterna:               TextMax60Type            Index (IS_OPTN) read GetRefExterna write SetRefExterna stored RefExterna_Specified;
    property EstadoRegistro:           EstadoRegistroType       read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2        Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type           Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                   Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType    Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaOperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaOperacionesSegurosType2 = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion8;
    FContraparte: PersonaFisicaJuridicaType;
    FClaveOperacion: ClaveOperacionType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion8;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion8: PeriodoLiquidacion8);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetClaveOperacion: ClaveOperacionType;
    procedure SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion8        read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property Contraparte:              PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property ClaveOperacion:           ClaveOperacionType         read GetClaveOperacion write SetClaveOperacion;
    property EstadoRegistro:           EstadoRegistroType         read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2          Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type             Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType      Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : RespuestaAgenciasViajesType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd
  // ************************************************************************ //
  RespuestaAgenciasViajesType = class(TRemotable)
  private
    FPeriodoLiquidacion: PeriodoLiquidacion5;
    FContraparte: PersonaFisicaJuridicaType;
    FEstadoRegistro: EstadoRegistroType;
    FCodigoErrorRegistro: ErrorDetalleType2;
    FCodigoErrorRegistro_Specified: boolean;
    FDescripcionErrorRegistro: TextMax500Type;
    FDescripcionErrorRegistro_Specified: boolean;
    FCSV: string;
    FCSV_Specified: boolean;
    FRegistroDuplicado: RegistroDuplicadoType;
    FRegistroDuplicado_Specified: boolean;
    function  GetPeriodoLiquidacion: PeriodoLiquidacion5;
    procedure SetPeriodoLiquidacion(const APeriodoLiquidacion5: PeriodoLiquidacion5);
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetEstadoRegistro: EstadoRegistroType;
    procedure SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
    function  GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
    procedure SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
    function  CodigoErrorRegistro_Specified(Index: Integer): boolean;
    function  GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
    procedure SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
    function  DescripcionErrorRegistro_Specified(Index: Integer): boolean;
    function  GetCSV(Index: Integer): string;
    procedure SetCSV(Index: Integer; const Astring: string);
    function  CSV_Specified(Index: Integer): boolean;
    function  GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
    procedure SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
    function  RegistroDuplicado_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property PeriodoLiquidacion:       PeriodoLiquidacion5        read GetPeriodoLiquidacion write SetPeriodoLiquidacion;
    property Contraparte:              PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property EstadoRegistro:           EstadoRegistroType         read GetEstadoRegistro write SetEstadoRegistro;
    property CodigoErrorRegistro:      ErrorDetalleType2          Index (IS_OPTN) read GetCodigoErrorRegistro write SetCodigoErrorRegistro stored CodigoErrorRegistro_Specified;
    property DescripcionErrorRegistro: TextMax500Type             Index (IS_OPTN) read GetDescripcionErrorRegistro write SetDescripcionErrorRegistro stored DescripcionErrorRegistro_Specified;
    property CSV:                      string                     Index (IS_OPTN) read GetCSV write SetCSV stored CSV_Specified;
    property RegistroDuplicado:        RegistroDuplicadoType      Index (IS_OPTN) read GetRegistroDuplicado write SetRegistroDuplicado stored RegistroDuplicado_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRfacturasEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  LRfacturasEmitidasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaExpedidaType;
    FFacturaExpedida: FacturaExpedidaType;
    function  GetIDFactura: IDFacturaExpedidaType;
    procedure SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
    function  GetFacturaExpedida: FacturaExpedidaType;
    procedure SetFacturaExpedida(const AFacturaExpedidaType: FacturaExpedidaType);
  public
    destructor Destroy; override;
  published
    property IDFactura:       IDFacturaExpedidaType  read GetIDFactura write SetIDFactura;
    property FacturaExpedida: FacturaExpedidaType    read GetFacturaExpedida write SetFacturaExpedida;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroFactInformadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroFactInformadasClienteType = class(RegistroSiiImputacion)
  private
    FCliente: PersonaFisicaJuridicaUnicaESType;
    FCliente_Specified: boolean;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisor_Specified: boolean;
    FEstadoCuadre: EstadoCuadreImputacionType;
    FEstadoCuadre_Specified: boolean;
    FFechaExpedicion: RangoFechaType;
    FFechaExpedicion_Specified: boolean;
    FFechaOperacion: RangoFechaType;
    FFechaOperacion_Specified: boolean;
    FClavePaginacion: ClavePaginacionClienteType;
    FClavePaginacion_Specified: boolean;
    function  GetCliente(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetCliente(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  Cliente_Specified(Index: Integer): boolean;
    function  GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
    function  GetFechaExpedicion(Index: Integer): RangoFechaType;
    procedure SetFechaExpedicion(Index: Integer; const ARangoFechaType: RangoFechaType);
    function  FechaExpedicion_Specified(Index: Integer): boolean;
    function  GetFechaOperacion(Index: Integer): RangoFechaType;
    procedure SetFechaOperacion(Index: Integer; const ARangoFechaType: RangoFechaType);
    function  FechaOperacion_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacionClienteType;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacionClienteType: ClavePaginacionClienteType);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Cliente:               PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetCliente write SetCliente stored Cliente_Specified;
    property NumSerieFacturaEmisor: TextoIDFacturaType                Index (IS_OPTN) read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor stored NumSerieFacturaEmisor_Specified;
    property EstadoCuadre:          EstadoCuadreImputacionType        Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
    property FechaExpedicion:       RangoFechaType                    Index (IS_OPTN) read GetFechaExpedicion write SetFechaExpedicion stored FechaExpedicion_Specified;
    property FechaOperacion:        RangoFechaType                    Index (IS_OPTN) read GetFechaOperacion write SetFechaOperacion stored FechaOperacion_Specified;
    property ClavePaginacion:       ClavePaginacionClienteType        Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroFactInformadasAgrupadasClienteType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroFactInformadasAgrupadasClienteType = class(RegistroSiiImputacion)
  private
    FCliente: PersonaFisicaJuridicaUnicaESType;
    FCliente_Specified: boolean;
    FEstadoCuadre: EstadoCuadreImputacionType;
    FEstadoCuadre_Specified: boolean;
    function  GetCliente(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetCliente(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  Cliente_Specified(Index: Integer): boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Cliente:      PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetCliente write SetCliente stored Cliente_Specified;
    property EstadoCuadre: EstadoCuadreImputacionType        Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroFactInformadasProveedorType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroFactInformadasProveedorType = class(RegistroSiiImputacion)
  private
    FProveedor: PersonaFisicaJuridicaUnicaESType;
    FProveedor_Specified: boolean;
    FNumSerieFacturaEmisor: TextoIDFacturaType;
    FNumSerieFacturaEmisor_Specified: boolean;
    FEstadoCuadre: EstadoCuadreImputacionType;
    FEstadoCuadre_Specified: boolean;
    FFechaExpedicion: RangoFechaType;
    FFechaExpedicion_Specified: boolean;
    FFechaOperacion: RangoFechaType;
    FFechaOperacion_Specified: boolean;
    FClavePaginacion: ClavePaginacionProveedorType;
    FClavePaginacion_Specified: boolean;
    function  GetProveedor(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetProveedor(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  Proveedor_Specified(Index: Integer): boolean;
    function  GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
    procedure SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
    function  NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
    function  GetFechaExpedicion(Index: Integer): RangoFechaType;
    procedure SetFechaExpedicion(Index: Integer; const ARangoFechaType: RangoFechaType);
    function  FechaExpedicion_Specified(Index: Integer): boolean;
    function  GetFechaOperacion(Index: Integer): RangoFechaType;
    procedure SetFechaOperacion(Index: Integer; const ARangoFechaType: RangoFechaType);
    function  FechaOperacion_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacionProveedorType;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacionProveedorType: ClavePaginacionProveedorType);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Proveedor:             PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetProveedor write SetProveedor stored Proveedor_Specified;
    property NumSerieFacturaEmisor: TextoIDFacturaType                Index (IS_OPTN) read GetNumSerieFacturaEmisor write SetNumSerieFacturaEmisor stored NumSerieFacturaEmisor_Specified;
    property EstadoCuadre:          EstadoCuadreImputacionType        Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
    property FechaExpedicion:       RangoFechaType                    Index (IS_OPTN) read GetFechaExpedicion write SetFechaExpedicion stored FechaExpedicion_Specified;
    property FechaOperacion:        RangoFechaType                    Index (IS_OPTN) read GetFechaOperacion write SetFechaOperacion stored FechaOperacion_Specified;
    property ClavePaginacion:       ClavePaginacionProveedorType      Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRVentaBienesConsigna, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLRVentaBienesConsigna = class(SuministroInformacion)
  private
    FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna: Array_Of_LRVentaBienesConsignaType;
    function  GetRegistroLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer): Array_Of_LRVentaBienesConsignaType;
    procedure SetRegistroLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer; const AArray_Of_LRVentaBienesConsignaType: Array_Of_LRVentaBienesConsignaType);
  public
    destructor Destroy; override;
    function   GetLRVentaBienesConsignaTypeArray(Index: Integer): LRVentaBienesConsignaType;       
    procedure  SetLRVentaBienesConsignaTypeArray(Index: Integer; const Item: LRVentaBienesConsignaType);
    function   GetLRVentaBienesConsignaTypeArrayLength: Integer;
    procedure  SetLRVentaBienesConsignaTypeArrayLength(Len: Integer);

    property   LRVentaBienesConsignaTypeArray[Index: Integer]: LRVentaBienesConsignaType read GetLRVentaBienesConsignaTypeArray write SetLRVentaBienesConsignaTypeArray; default;
    property   Len: Integer read GetLRVentaBienesConsignaTypeArrayLength write SetLRVentaBienesConsignaTypeArrayLength;
  published
    property RegistroLRDetOperacionIntracomunitariaVentasEnConsigna: Array_Of_LRVentaBienesConsignaType  Index (IS_UNBD) read GetRegistroLRDetOperacionIntracomunitariaVentasEnConsigna write SetRegistroLRDetOperacionIntracomunitariaVentasEnConsigna;
  end;



  // ************************************************************************ //
  // XML       : BajaLRVentaBienesConsigna, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLRVentaBienesConsigna = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaVentaBienesConsigna: Array_Of_LRBajaVentaBienesConsignaType;
    function  GetRegistroLRBajaVentaBienesConsigna(Index: Integer): Array_Of_LRBajaVentaBienesConsignaType;
    procedure SetRegistroLRBajaVentaBienesConsigna(Index: Integer; const AArray_Of_LRBajaVentaBienesConsignaType: Array_Of_LRBajaVentaBienesConsignaType);
  public
    destructor Destroy; override;
    function   GetLRBajaVentaBienesConsignaTypeArray(Index: Integer): LRBajaVentaBienesConsignaType;       
    procedure  SetLRBajaVentaBienesConsignaTypeArray(Index: Integer; const Item: LRBajaVentaBienesConsignaType);
    function   GetLRBajaVentaBienesConsignaTypeArrayLength: Integer;
    procedure  SetLRBajaVentaBienesConsignaTypeArrayLength(Len: Integer);

    property   LRBajaVentaBienesConsignaTypeArray[Index: Integer]: LRBajaVentaBienesConsignaType read GetLRBajaVentaBienesConsignaTypeArray write SetLRBajaVentaBienesConsignaTypeArray; default;
    property   Len: Integer read GetLRBajaVentaBienesConsignaTypeArrayLength write SetLRBajaVentaBienesConsignaTypeArrayLength;
  published
    property RegistroLRBajaVentaBienesConsigna: Array_Of_LRBajaVentaBienesConsignaType  Index (IS_UNBD) read GetRegistroLRBajaVentaBienesConsigna write SetRegistroLRBajaVentaBienesConsigna;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroEmitidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroEmitidasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaConsulta2Type;
    FIDFactura_Specified: boolean;
    FContraparte: ContraparteConsultaType;
    FContraparte_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FFechaCuadre: RangoFechaPresentacionType;
    FFechaCuadre_Specified: boolean;
    FFacturaModificada: FacturaModificadaType;
    FFacturaModificada_Specified: boolean;
    FEstadoCuadre: EstadoCuadreType;
    FEstadoCuadre_Specified: boolean;
    FClavePaginacion: IDFacturaExpedidaBCType;
    FClavePaginacion_Specified: boolean;
    function  GetIDFactura(Index: Integer): IDFacturaConsulta2Type;
    procedure SetIDFactura(Index: Integer; const AIDFacturaConsulta2Type: IDFacturaConsulta2Type);
    function  IDFactura_Specified(Index: Integer): boolean;
    function  GetContraparte(Index: Integer): ContraparteConsultaType;
    procedure SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetFechaCuadre(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaCuadre(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaCuadre_Specified(Index: Integer): boolean;
    function  GetFacturaModificada(Index: Integer): FacturaModificadaType;
    procedure SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  FacturaModificada_Specified(Index: Integer): boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): IDFacturaExpedidaBCType;
    procedure SetClavePaginacion(Index: Integer; const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:         IDFacturaConsulta2Type      Index (IS_OPTN) read GetIDFactura write SetIDFactura stored IDFactura_Specified;
    property Contraparte:       ContraparteConsultaType     Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property FechaPresentacion: RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property FechaCuadre:       RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaCuadre write SetFechaCuadre stored FechaCuadre_Specified;
    property FacturaModificada: FacturaModificadaType       Index (IS_OPTN) read GetFacturaModificada write SetFacturaModificada stored FacturaModificada_Specified;
    property EstadoCuadre:      EstadoCuadreType            Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
    property ClavePaginacion:   IDFacturaExpedidaBCType     Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroDetOperIntracomunitariasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroDetOperIntracomunitariasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaConsulta1Type;
    FIDFactura_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FFacturaModificada: FacturaModificadaType;
    FFacturaModificada_Specified: boolean;
    FClavePaginacion: IDFacturaComunitariaType;
    FClavePaginacion_Specified: boolean;
    function  GetIDFactura(Index: Integer): IDFacturaConsulta1Type;
    procedure SetIDFactura(Index: Integer; const AIDFacturaConsulta1Type: IDFacturaConsulta1Type);
    function  IDFactura_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetFacturaModificada(Index: Integer): FacturaModificadaType;
    procedure SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  FacturaModificada_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): IDFacturaComunitariaType;
    procedure SetClavePaginacion(Index: Integer; const AIDFacturaComunitariaType: IDFacturaComunitariaType);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:         IDFacturaConsulta1Type      Index (IS_OPTN) read GetIDFactura write SetIDFactura stored IDFactura_Specified;
    property FechaPresentacion: RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property FacturaModificada: FacturaModificadaType       Index (IS_OPTN) read GetFacturaModificada write SetFacturaModificada stored FacturaModificada_Specified;
    property ClavePaginacion:   IDFacturaComunitariaType    Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroOperacionesSegurosType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroOperacionesSegurosType = class(RegistroSii)
  private
    FContraparte: ContraparteConsultaType;
    FContraparte_Specified: boolean;
    FClaveOperacion: ClaveOperacionType;
    FClaveOperacion_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FOperacionModificada: FacturaModificadaType;
    FOperacionModificada_Specified: boolean;
    FClavePaginacion: ClavePaginacion4;
    FClavePaginacion_Specified: boolean;
    function  GetContraparte(Index: Integer): ContraparteConsultaType;
    procedure SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
    function  Contraparte_Specified(Index: Integer): boolean;
    function  GetClaveOperacion(Index: Integer): ClaveOperacionType;
    procedure SetClaveOperacion(Index: Integer; const AClaveOperacionType: ClaveOperacionType);
    function  ClaveOperacion_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetOperacionModificada(Index: Integer): FacturaModificadaType;
    procedure SetOperacionModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  OperacionModificada_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacion4;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacion4: ClavePaginacion4);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Contraparte:         ContraparteConsultaType     Index (IS_OPTN) read GetContraparte write SetContraparte stored Contraparte_Specified;
    property ClaveOperacion:      ClaveOperacionType          Index (IS_OPTN) read GetClaveOperacion write SetClaveOperacion stored ClaveOperacion_Specified;
    property FechaPresentacion:   RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property OperacionModificada: FacturaModificadaType       Index (IS_OPTN) read GetOperacionModificada write SetOperacionModificada stored OperacionModificada_Specified;
    property ClavePaginacion:     ClavePaginacion4            Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : ClavePaginacion, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  ClavePaginacion4 = class(TRemotable)
  private
    FContraparte: PersonaFisicaJuridicaType;
    FClaveOperacion: ClaveOperacionType;
    function  GetContraparte: PersonaFisicaJuridicaType;
    procedure SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
    function  GetClaveOperacion: ClaveOperacionType;
    procedure SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
  public
    destructor Destroy; override;
  published
    property Contraparte:    PersonaFisicaJuridicaType  read GetContraparte write SetContraparte;
    property ClaveOperacion: ClaveOperacionType         read GetClaveOperacion write SetClaveOperacion;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroFactInformadasAgrupadasProveedorType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroFactInformadasAgrupadasProveedorType = class(RegistroSiiImputacion)
  private
    FProveedor: PersonaFisicaJuridicaUnicaESType;
    FProveedor_Specified: boolean;
    FEstadoCuadre: EstadoCuadreImputacionType;
    FEstadoCuadre_Specified: boolean;
    function  GetProveedor(Index: Integer): PersonaFisicaJuridicaUnicaESType;
    procedure SetProveedor(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
    function  Proveedor_Specified(Index: Integer): boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property Proveedor:    PersonaFisicaJuridicaUnicaESType  Index (IS_OPTN) read GetProveedor write SetProveedor stored Proveedor_Specified;
    property EstadoCuadre: EstadoCuadreImputacionType        Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroRecibidasType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroRecibidasType = class(RegistroSii)
  private
    FIDFactura: IDFacturaConsulta1Type;
    FIDFactura_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FFechaCuadre: RangoFechaPresentacionType;
    FFechaCuadre_Specified: boolean;
    FFacturaModificada: FacturaModificadaType;
    FFacturaModificada_Specified: boolean;
    FEstadoCuadre: EstadoCuadreType;
    FEstadoCuadre_Specified: boolean;
    FClavePaginacion: IDFacturaRecibidaNombreBCType;
    FClavePaginacion_Specified: boolean;
    function  GetIDFactura(Index: Integer): IDFacturaConsulta1Type;
    procedure SetIDFactura(Index: Integer; const AIDFacturaConsulta1Type: IDFacturaConsulta1Type);
    function  IDFactura_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetFechaCuadre(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaCuadre(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaCuadre_Specified(Index: Integer): boolean;
    function  GetFacturaModificada(Index: Integer): FacturaModificadaType;
    procedure SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  FacturaModificada_Specified(Index: Integer): boolean;
    function  GetEstadoCuadre(Index: Integer): EstadoCuadreType;
    procedure SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
    function  EstadoCuadre_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): IDFacturaRecibidaNombreBCType;
    procedure SetClavePaginacion(Index: Integer; const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:         IDFacturaConsulta1Type         Index (IS_OPTN) read GetIDFactura write SetIDFactura stored IDFactura_Specified;
    property FechaPresentacion: RangoFechaPresentacionType     Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property FechaCuadre:       RangoFechaPresentacionType     Index (IS_OPTN) read GetFechaCuadre write SetFechaCuadre stored FechaCuadre_Specified;
    property FacturaModificada: FacturaModificadaType          Index (IS_OPTN) read GetFacturaModificada write SetFacturaModificada stored FacturaModificada_Specified;
    property EstadoCuadre:      EstadoCuadreType               Index (IS_OPTN) read GetEstadoCuadre write SetEstadoCuadre stored EstadoCuadre_Specified;
    property ClavePaginacion:   IDFacturaRecibidaNombreBCType  Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : LRFiltroBienInversionType, global, <complexType>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd
  // ************************************************************************ //
  LRFiltroBienInversionType = class(RegistroSii)
  private
    FIDFactura: IDFacturaConsulta1Type;
    FIDFactura_Specified: boolean;
    FFechaPresentacion: RangoFechaPresentacionType;
    FFechaPresentacion_Specified: boolean;
    FFacturaModificada: FacturaModificadaType;
    FFacturaModificada_Specified: boolean;
    FIdentificacionBien: TextMax40Type;
    FIdentificacionBien_Specified: boolean;
    FClavePaginacion: ClavePaginacionBienType;
    FClavePaginacion_Specified: boolean;
    function  GetIDFactura(Index: Integer): IDFacturaConsulta1Type;
    procedure SetIDFactura(Index: Integer; const AIDFacturaConsulta1Type: IDFacturaConsulta1Type);
    function  IDFactura_Specified(Index: Integer): boolean;
    function  GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
    procedure SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
    function  FechaPresentacion_Specified(Index: Integer): boolean;
    function  GetFacturaModificada(Index: Integer): FacturaModificadaType;
    procedure SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
    function  FacturaModificada_Specified(Index: Integer): boolean;
    function  GetIdentificacionBien(Index: Integer): TextMax40Type;
    procedure SetIdentificacionBien(Index: Integer; const ATextMax40Type: TextMax40Type);
    function  IdentificacionBien_Specified(Index: Integer): boolean;
    function  GetClavePaginacion(Index: Integer): ClavePaginacionBienType;
    procedure SetClavePaginacion(Index: Integer; const AClavePaginacionBienType: ClavePaginacionBienType);
    function  ClavePaginacion_Specified(Index: Integer): boolean;
  public
    destructor Destroy; override;
  published
    property IDFactura:          IDFacturaConsulta1Type      Index (IS_OPTN) read GetIDFactura write SetIDFactura stored IDFactura_Specified;
    property FechaPresentacion:  RangoFechaPresentacionType  Index (IS_OPTN) read GetFechaPresentacion write SetFechaPresentacion stored FechaPresentacion_Specified;
    property FacturaModificada:  FacturaModificadaType       Index (IS_OPTN) read GetFacturaModificada write SetFacturaModificada stored FacturaModificada_Specified;
    property IdentificacionBien: TextMax40Type               Index (IS_OPTN) read GetIdentificacionBien write SetIdentificacionBien stored IdentificacionBien_Specified;
    property ClavePaginacion:    ClavePaginacionBienType     Index (IS_OPTN) read GetClavePaginacion write SetClavePaginacion stored ClavePaginacion_Specified;
  end;



  // ************************************************************************ //
  // XML       : BajaLRBienesInversion, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLRBienesInversion = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaBienesInversion: Array_Of_LRBajaBienesInversionType;
    function  GetRegistroLRBajaBienesInversion(Index: Integer): Array_Of_LRBajaBienesInversionType;
    procedure SetRegistroLRBajaBienesInversion(Index: Integer; const AArray_Of_LRBajaBienesInversionType: Array_Of_LRBajaBienesInversionType);
  public
    destructor Destroy; override;
    function   GetLRBajaBienesInversionTypeArray(Index: Integer): LRBajaBienesInversionType;       
    procedure  SetLRBajaBienesInversionTypeArray(Index: Integer; const Item: LRBajaBienesInversionType);
    function   GetLRBajaBienesInversionTypeArrayLength: Integer;
    procedure  SetLRBajaBienesInversionTypeArrayLength(Len: Integer);

    property   LRBajaBienesInversionTypeArray[Index: Integer]: LRBajaBienesInversionType read GetLRBajaBienesInversionTypeArray write SetLRBajaBienesInversionTypeArray; default;
    property   Len: Integer read GetLRBajaBienesInversionTypeArrayLength write SetLRBajaBienesInversionTypeArrayLength;
  published
    property RegistroLRBajaBienesInversion: Array_Of_LRBajaBienesInversionType  Index (IS_UNBD) read GetRegistroLRBajaBienesInversion write SetRegistroLRBajaBienesInversion;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRAgenciasViajes, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLRAgenciasViajes = class(SuministroInformacion)
  private
    FRegistroLRAgenciasViajes: Array_Of_LRAgenciasViajesType;
    function  GetRegistroLRAgenciasViajes(Index: Integer): Array_Of_LRAgenciasViajesType;
    procedure SetRegistroLRAgenciasViajes(Index: Integer; const AArray_Of_LRAgenciasViajesType: Array_Of_LRAgenciasViajesType);
  public
    destructor Destroy; override;
    function   GetLRAgenciasViajesTypeArray(Index: Integer): LRAgenciasViajesType;       
    procedure  SetLRAgenciasViajesTypeArray(Index: Integer; const Item: LRAgenciasViajesType);
    function   GetLRAgenciasViajesTypeArrayLength: Integer;
    procedure  SetLRAgenciasViajesTypeArrayLength(Len: Integer);

    property   LRAgenciasViajesTypeArray[Index: Integer]: LRAgenciasViajesType read GetLRAgenciasViajesTypeArray write SetLRAgenciasViajesTypeArray; default;
    property   Len: Integer read GetLRAgenciasViajesTypeArrayLength write SetLRAgenciasViajesTypeArrayLength;
  published
    property RegistroLRAgenciasViajes: Array_Of_LRAgenciasViajesType  Index (IS_UNBD) read GetRegistroLRAgenciasViajes write SetRegistroLRAgenciasViajes;
  end;



  // ************************************************************************ //
  // XML       : BajaLRAgenciasViajes, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLRAgenciasViajes = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaAgenciasViajes: Array_Of_LRBajaAgenciasViajesType;
    function  GetRegistroLRBajaAgenciasViajes(Index: Integer): Array_Of_LRBajaAgenciasViajesType;
    procedure SetRegistroLRBajaAgenciasViajes(Index: Integer; const AArray_Of_LRBajaAgenciasViajesType: Array_Of_LRBajaAgenciasViajesType);
  public
    destructor Destroy; override;
    function   GetLRBajaAgenciasViajesTypeArray(Index: Integer): LRBajaAgenciasViajesType;       
    procedure  SetLRBajaAgenciasViajesTypeArray(Index: Integer; const Item: LRBajaAgenciasViajesType);
    function   GetLRBajaAgenciasViajesTypeArrayLength: Integer;
    procedure  SetLRBajaAgenciasViajesTypeArrayLength(Len: Integer);

    property   LRBajaAgenciasViajesTypeArray[Index: Integer]: LRBajaAgenciasViajesType read GetLRBajaAgenciasViajesTypeArray write SetLRBajaAgenciasViajesTypeArray; default;
    property   Len: Integer read GetLRBajaAgenciasViajesTypeArrayLength write SetLRBajaAgenciasViajesTypeArrayLength;
  published
    property RegistroLRBajaAgenciasViajes: Array_Of_LRBajaAgenciasViajesType  Index (IS_UNBD) read GetRegistroLRBajaAgenciasViajes write SetRegistroLRBajaAgenciasViajes;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRFacturasRecibidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLRFacturasRecibidas = class(SuministroInformacion)
  private
    FRegistroLRFacturasRecibidas: Array_Of_LRFacturasRecibidasType;
    function  GetRegistroLRFacturasRecibidas(Index: Integer): Array_Of_LRFacturasRecibidasType;
    procedure SetRegistroLRFacturasRecibidas(Index: Integer; const AArray_Of_LRFacturasRecibidasType: Array_Of_LRFacturasRecibidasType);
  public
    destructor Destroy; override;
    function   GetLRFacturasRecibidasTypeArray(Index: Integer): LRFacturasRecibidasType;       
    procedure  SetLRFacturasRecibidasTypeArray(Index: Integer; const Item: LRFacturasRecibidasType);
    function   GetLRFacturasRecibidasTypeArrayLength: Integer;
    procedure  SetLRFacturasRecibidasTypeArrayLength(Len: Integer);

    property   LRFacturasRecibidasTypeArray[Index: Integer]: LRFacturasRecibidasType read GetLRFacturasRecibidasTypeArray write SetLRFacturasRecibidasTypeArray; default;
    property   Len: Integer read GetLRFacturasRecibidasTypeArrayLength write SetLRFacturasRecibidasTypeArrayLength;
  published
    property RegistroLRFacturasRecibidas: Array_Of_LRFacturasRecibidasType  Index (IS_UNBD) read GetRegistroLRFacturasRecibidas write SetRegistroLRFacturasRecibidas;
  end;



  // ************************************************************************ //
  // XML       : BajaLRFacturasRecibidas, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLRFacturasRecibidas = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaRecibidas: Array_Of_LRBajaRecibidasType;
    function  GetRegistroLRBajaRecibidas(Index: Integer): Array_Of_LRBajaRecibidasType;
    procedure SetRegistroLRBajaRecibidas(Index: Integer; const AArray_Of_LRBajaRecibidasType: Array_Of_LRBajaRecibidasType);
  public
    destructor Destroy; override;
    function   GetLRBajaRecibidasTypeArray(Index: Integer): LRBajaRecibidasType;       
    procedure  SetLRBajaRecibidasTypeArray(Index: Integer; const Item: LRBajaRecibidasType);
    function   GetLRBajaRecibidasTypeArrayLength: Integer;
    procedure  SetLRBajaRecibidasTypeArrayLength(Len: Integer);

    property   LRBajaRecibidasTypeArray[Index: Integer]: LRBajaRecibidasType read GetLRBajaRecibidasTypeArray write SetLRBajaRecibidasTypeArray; default;
    property   Len: Integer read GetLRBajaRecibidasTypeArrayLength write SetLRBajaRecibidasTypeArrayLength;
  published
    property RegistroLRBajaRecibidas: Array_Of_LRBajaRecibidasType  Index (IS_UNBD) read GetRegistroLRBajaRecibidas write SetRegistroLRBajaRecibidas;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRBienesInversion, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLRBienesInversion = class(SuministroInformacion)
  private
    FRegistroLRBienesInversion: Array_Of_LRBienesInversionType;
    function  GetRegistroLRBienesInversion(Index: Integer): Array_Of_LRBienesInversionType;
    procedure SetRegistroLRBienesInversion(Index: Integer; const AArray_Of_LRBienesInversionType: Array_Of_LRBienesInversionType);
  public
    destructor Destroy; override;
    function   GetLRBienesInversionTypeArray(Index: Integer): LRBienesInversionType;       
    procedure  SetLRBienesInversionTypeArray(Index: Integer; const Item: LRBienesInversionType);
    function   GetLRBienesInversionTypeArrayLength: Integer;
    procedure  SetLRBienesInversionTypeArrayLength(Len: Integer);

    property   LRBienesInversionTypeArray[Index: Integer]: LRBienesInversionType read GetLRBienesInversionTypeArray write SetLRBienesInversionTypeArray; default;
    property   Len: Integer read GetLRBienesInversionTypeArrayLength write SetLRBienesInversionTypeArrayLength;
  published
    property RegistroLRBienesInversion: Array_Of_LRBienesInversionType  Index (IS_UNBD) read GetRegistroLRBienesInversion write SetRegistroLRBienesInversion;
  end;



  // ************************************************************************ //
  // XML       : BajaLROperacionesSeguros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLROperacionesSeguros = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaOperacionesSeguros: Array_Of_LRBajaRegistroLROperacionesSegurosType;
    function  GetRegistroLRBajaOperacionesSeguros(Index: Integer): Array_Of_LRBajaRegistroLROperacionesSegurosType;
    procedure SetRegistroLRBajaOperacionesSeguros(Index: Integer; const AArray_Of_LRBajaRegistroLROperacionesSegurosType: Array_Of_LRBajaRegistroLROperacionesSegurosType);
  public
    destructor Destroy; override;
    function   GetLRBajaRegistroLROperacionesSegurosTypeArray(Index: Integer): LRBajaRegistroLROperacionesSegurosType;       
    procedure  SetLRBajaRegistroLROperacionesSegurosTypeArray(Index: Integer; const Item: LRBajaRegistroLROperacionesSegurosType);
    function   GetLRBajaRegistroLROperacionesSegurosTypeArrayLength: Integer;
    procedure  SetLRBajaRegistroLROperacionesSegurosTypeArrayLength(Len: Integer);

    property   LRBajaRegistroLROperacionesSegurosTypeArray[Index: Integer]: LRBajaRegistroLROperacionesSegurosType read GetLRBajaRegistroLROperacionesSegurosTypeArray write SetLRBajaRegistroLROperacionesSegurosTypeArray; default;
    property   Len: Integer read GetLRBajaRegistroLROperacionesSegurosTypeArrayLength write SetLRBajaRegistroLROperacionesSegurosTypeArrayLength;
  published
    property RegistroLRBajaOperacionesSeguros: Array_Of_LRBajaRegistroLROperacionesSegurosType  Index (IS_UNBD) read GetRegistroLRBajaOperacionesSeguros write SetRegistroLRBajaOperacionesSeguros;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRDetOperacionIntracomunitaria, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLRDetOperacionIntracomunitaria = class(SuministroInformacion)
  private
    FRegistroLRDetOperacionIntracomunitaria: Array_Of_LROperacionIntracomunitariaType;
    function  GetRegistroLRDetOperacionIntracomunitaria(Index: Integer): Array_Of_LROperacionIntracomunitariaType;
    procedure SetRegistroLRDetOperacionIntracomunitaria(Index: Integer; const AArray_Of_LROperacionIntracomunitariaType: Array_Of_LROperacionIntracomunitariaType);
  public
    destructor Destroy; override;
    function   GetLROperacionIntracomunitariaTypeArray(Index: Integer): LROperacionIntracomunitariaType;       
    procedure  SetLROperacionIntracomunitariaTypeArray(Index: Integer; const Item: LROperacionIntracomunitariaType);
    function   GetLROperacionIntracomunitariaTypeArrayLength: Integer;
    procedure  SetLROperacionIntracomunitariaTypeArrayLength(Len: Integer);

    property   LROperacionIntracomunitariaTypeArray[Index: Integer]: LROperacionIntracomunitariaType read GetLROperacionIntracomunitariaTypeArray write SetLROperacionIntracomunitariaTypeArray; default;
    property   Len: Integer read GetLROperacionIntracomunitariaTypeArrayLength write SetLROperacionIntracomunitariaTypeArrayLength;
  published
    property RegistroLRDetOperacionIntracomunitaria: Array_Of_LROperacionIntracomunitariaType  Index (IS_UNBD) read GetRegistroLRDetOperacionIntracomunitaria write SetRegistroLRDetOperacionIntracomunitaria;
  end;



  // ************************************************************************ //
  // XML       : BajaLRDetOperacionIntracomunitaria, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLRDetOperacionIntracomunitaria = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaDetOperacionIntracomunitaria: Array_Of_LRBajaOperacionIntracomunitariaType;
    function  GetRegistroLRBajaDetOperacionIntracomunitaria(Index: Integer): Array_Of_LRBajaOperacionIntracomunitariaType;
    procedure SetRegistroLRBajaDetOperacionIntracomunitaria(Index: Integer; const AArray_Of_LRBajaOperacionIntracomunitariaType: Array_Of_LRBajaOperacionIntracomunitariaType);
  public
    destructor Destroy; override;
    function   GetLRBajaOperacionIntracomunitariaTypeArray(Index: Integer): LRBajaOperacionIntracomunitariaType;       
    procedure  SetLRBajaOperacionIntracomunitariaTypeArray(Index: Integer; const Item: LRBajaOperacionIntracomunitariaType);
    function   GetLRBajaOperacionIntracomunitariaTypeArrayLength: Integer;
    procedure  SetLRBajaOperacionIntracomunitariaTypeArrayLength(Len: Integer);

    property   LRBajaOperacionIntracomunitariaTypeArray[Index: Integer]: LRBajaOperacionIntracomunitariaType read GetLRBajaOperacionIntracomunitariaTypeArray write SetLRBajaOperacionIntracomunitariaTypeArray; default;
    property   Len: Integer read GetLRBajaOperacionIntracomunitariaTypeArrayLength write SetLRBajaOperacionIntracomunitariaTypeArrayLength;
  published
    property RegistroLRBajaDetOperacionIntracomunitaria: Array_Of_LRBajaOperacionIntracomunitariaType  Index (IS_UNBD) read GetRegistroLRBajaDetOperacionIntracomunitaria write SetRegistroLRBajaDetOperacionIntracomunitaria;
  end;



  // ************************************************************************ //
  // XML       : SuministroLRCobrosMetalico, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLRCobrosMetalico = class(SuministroInformacion)
  private
    FRegistroLRCobrosMetalico: Array_Of_LRCobrosMetalicoType;
    function  GetRegistroLRCobrosMetalico(Index: Integer): Array_Of_LRCobrosMetalicoType;
    procedure SetRegistroLRCobrosMetalico(Index: Integer; const AArray_Of_LRCobrosMetalicoType: Array_Of_LRCobrosMetalicoType);
  public
    destructor Destroy; override;
    function   GetLRCobrosMetalicoTypeArray(Index: Integer): LRCobrosMetalicoType;       
    procedure  SetLRCobrosMetalicoTypeArray(Index: Integer; const Item: LRCobrosMetalicoType);
    function   GetLRCobrosMetalicoTypeArrayLength: Integer;
    procedure  SetLRCobrosMetalicoTypeArrayLength(Len: Integer);

    property   LRCobrosMetalicoTypeArray[Index: Integer]: LRCobrosMetalicoType read GetLRCobrosMetalicoTypeArray write SetLRCobrosMetalicoTypeArray; default;
    property   Len: Integer read GetLRCobrosMetalicoTypeArrayLength write SetLRCobrosMetalicoTypeArrayLength;
  published
    property RegistroLRCobrosMetalico: Array_Of_LRCobrosMetalicoType  Index (IS_UNBD) read GetRegistroLRCobrosMetalico write SetRegistroLRCobrosMetalico;
  end;



  // ************************************************************************ //
  // XML       : BajaLRCobrosMetalico, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  BajaLRCobrosMetalico = class(SuministroInformacionBaja)
  private
    FRegistroLRBajaCobrosMetalico: Array_Of_LRBajaCobrosMetalicoType;
    function  GetRegistroLRBajaCobrosMetalico(Index: Integer): Array_Of_LRBajaCobrosMetalicoType;
    procedure SetRegistroLRBajaCobrosMetalico(Index: Integer; const AArray_Of_LRBajaCobrosMetalicoType: Array_Of_LRBajaCobrosMetalicoType);
  public
    destructor Destroy; override;
    function   GetLRBajaCobrosMetalicoTypeArray(Index: Integer): LRBajaCobrosMetalicoType;       
    procedure  SetLRBajaCobrosMetalicoTypeArray(Index: Integer; const Item: LRBajaCobrosMetalicoType);
    function   GetLRBajaCobrosMetalicoTypeArrayLength: Integer;
    procedure  SetLRBajaCobrosMetalicoTypeArrayLength(Len: Integer);

    property   LRBajaCobrosMetalicoTypeArray[Index: Integer]: LRBajaCobrosMetalicoType read GetLRBajaCobrosMetalicoTypeArray write SetLRBajaCobrosMetalicoTypeArray; default;
    property   Len: Integer read GetLRBajaCobrosMetalicoTypeArrayLength write SetLRBajaCobrosMetalicoTypeArrayLength;
  published
    property RegistroLRBajaCobrosMetalico: Array_Of_LRBajaCobrosMetalicoType  Index (IS_UNBD) read GetRegistroLRBajaCobrosMetalico write SetRegistroLRBajaCobrosMetalico;
  end;



  // ************************************************************************ //
  // XML       : SuministroLROperacionesSeguros, global, <element>
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd
  // ************************************************************************ //
  SuministroLROperacionesSeguros = class(SuministroInformacion)
  private
    FRegistroLROperacionesSeguros: Array_Of_LROperacionesSegurosType;
    function  GetRegistroLROperacionesSeguros(Index: Integer): Array_Of_LROperacionesSegurosType;
    procedure SetRegistroLROperacionesSeguros(Index: Integer; const AArray_Of_LROperacionesSegurosType: Array_Of_LROperacionesSegurosType);
  public
    destructor Destroy; override;
    function   GetLROperacionesSegurosTypeArray(Index: Integer): LROperacionesSegurosType;       
    procedure  SetLROperacionesSegurosTypeArray(Index: Integer; const Item: LROperacionesSegurosType);
    function   GetLROperacionesSegurosTypeArrayLength: Integer;
    procedure  SetLROperacionesSegurosTypeArrayLength(Len: Integer);

    property   LROperacionesSegurosTypeArray[Index: Integer]: LROperacionesSegurosType read GetLROperacionesSegurosTypeArray write SetLROperacionesSegurosTypeArray; default;
    property   Len: Integer read GetLROperacionesSegurosTypeArrayLength write SetLROperacionesSegurosTypeArrayLength;
  published
    property RegistroLROperacionesSeguros: Array_Of_LROperacionesSegurosType  Index (IS_UNBD) read GetRegistroLROperacionesSeguros write SetRegistroLROperacionesSeguros;
  end;


  // ************************************************************************ //
  // Namespace : https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroFactEmitidas.wsdl
  // transport : http://schemas.xmlsoap.org/soap/http
  // style     : document
  // use       : literal
  // binding   : siiBinding
  // service   : siiService
  // port      : SuministroFactEmitidas
  // URL       : https://www1.agenciatributaria.gob.es/wlpl/SSII-FACT/ws/fe/SiiFactFEV1SOAP
  // ************************************************************************ //
  siiSOAP = interface(IInvokable)
  ['{641D6537-6EDE-48FC-A0E9-26433759739C}']
    function  SuministroLRFacturasEmitidas(const SuministroLRFacturasEmitidas: SuministroLRFacturasEmitidas): RespuestaLRFacturasEmitidas; stdcall;

    // Cannot unwrap: 
    //     - Input element wrapper name does not match operation's name
    function  AnulacionLRFacturasEmitidas(const AnulacionLRFacturasEmitidas: BajaLRFacturasEmitidas): RespuestaLRBajaFacturasEmitidas; stdcall;
    function  ConsultaLRFacturasEmitidas(const ConsultaLRFacturasEmitidas: ConsultaLRFacturasEmitidas): RespuestaConsultaLRFacturasEmitidas; stdcall;
    function  ConsultaLRFactInformadasCliente(const ConsultaLRFactInformadasCliente: ConsultaLRFactInformadasCliente): RespuestaConsultaLRFactInformadasCliente; stdcall;
    function  ConsultaLRFactInformadasAgrupadasCliente(const ConsultaLRFactInformadasAgrupadasCliente: ConsultaLRFactInformadasAgrupadasCliente): RespuestaConsultaLRFactInformadasAgrupadasCliente; stdcall;
  end;

function GetsiiSOAP(UseWSDL: Boolean=System.False; Addr: string=''; HTTPRIO: THTTPRIO = nil): siiSOAP;


implementation
  uses System.SysUtils;

function GetsiiSOAP(UseWSDL: Boolean; Addr: string; HTTPRIO: THTTPRIO): siiSOAP;
const
  defWSDL = 'F:\Desktop\Source\Documentacion\SII\25.11.2020\SuministroFactEmitidas.wsdl';
  defURL  = 'https://www1.agenciatributaria.gob.es/wlpl/SSII-FACT/ws/fe/SiiFactFEV1SOAP';
  defSvc  = 'siiService';
  defPrt  = 'SuministroFactEmitidas';
var
  RIO: THTTPRIO;
begin
  Result := nil;
  if (Addr = '') then
  begin
    if UseWSDL then
      Addr := defWSDL
    else
      Addr := defURL;
  end;
  if HTTPRIO = nil then
    RIO := THTTPRIO.Create(nil)
  else
    RIO := HTTPRIO;
  try
    Result := (RIO as siiSOAP);
    if UseWSDL then
    begin
      RIO.WSDLLocation := Addr;
      RIO.Service := defSvc;
      RIO.Port := defPrt;
    end else
      RIO.URL := Addr;
  finally
    if (Result = nil) and (HTTPRIO = nil) then
      RIO.Free;
  end;
end;


destructor LRFiltroInmueblesAdicionalesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRFiltroInmueblesAdicionalesType.GetIDFactura: IDFacturaExpedidaBCType;
begin
  Result := FIDFactura;
end;

procedure LRFiltroInmueblesAdicionalesType.SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
begin
  FIDFactura := AIDFacturaExpedidaBCType;
end;

destructor RegistroRespuestaConsultaPagosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosPago);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  inherited Destroy;
end;

function RegistroRespuestaConsultaPagosType.GetDatosPago: DatosPagoCobroType;
begin
  Result := FDatosPago;
end;

procedure RegistroRespuestaConsultaPagosType.SetDatosPago(const ADatosPagoCobroType: DatosPagoCobroType);
begin
  FDatosPago := ADatosPagoCobroType;
end;

function RegistroRespuestaConsultaPagosType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaPagosType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

destructor RegistroRespuestaConsultaInmueblesAdicionalesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosInmueblesAdicionales);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  inherited Destroy;
end;

function RegistroRespuestaConsultaInmueblesAdicionalesType.GetDatosInmueblesAdicionales: DatosInmuebleType;
begin
  Result := FDatosInmueblesAdicionales;
end;

procedure RegistroRespuestaConsultaInmueblesAdicionalesType.SetDatosInmueblesAdicionales(const ADatosInmuebleType: DatosInmuebleType);
begin
  FDatosInmueblesAdicionales := ADatosInmuebleType;
end;

function RegistroRespuestaConsultaInmueblesAdicionalesType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaInmueblesAdicionalesType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

destructor RegistroRespuestaConsultaCobrosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosCobro);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  inherited Destroy;
end;

function RegistroRespuestaConsultaCobrosType.GetDatosCobro: DatosPagoCobroType;
begin
  Result := FDatosCobro;
end;

procedure RegistroRespuestaConsultaCobrosType.SetDatosCobro(const ADatosPagoCobroType: DatosPagoCobroType);
begin
  FDatosCobro := ADatosPagoCobroType;
end;

function RegistroRespuestaConsultaCobrosType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaCobrosType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

destructor RegistroRespuestaConsultaVentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIdRegistroDeclarado);
  System.SysUtils.FreeAndNil(FDatosVentaBienesConsigna);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoVentaBienesConsigna);
  inherited Destroy;
end;

function RegistroRespuestaConsultaVentaBienesConsignaType.GetIdRegistroDeclarado: IdRegistroDeclaradoType;
begin
  Result := FIdRegistroDeclarado;
end;

procedure RegistroRespuestaConsultaVentaBienesConsignaType.SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
begin
  FIdRegistroDeclarado := AIdRegistroDeclaradoType;
end;

function RegistroRespuestaConsultaVentaBienesConsignaType.GetDatosVentaBienesConsigna: RespuestaVentaBienesConsignaType;
begin
  Result := FDatosVentaBienesConsigna;
end;

procedure RegistroRespuestaConsultaVentaBienesConsignaType.SetDatosVentaBienesConsigna(const ARespuestaVentaBienesConsignaType: RespuestaVentaBienesConsignaType);
begin
  FDatosVentaBienesConsigna := ARespuestaVentaBienesConsignaType;
end;

function RegistroRespuestaConsultaVentaBienesConsignaType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaVentaBienesConsignaType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaVentaBienesConsignaType.GetEstadoVentaBienesConsigna: EstadoFactura2Type;
begin
  Result := FEstadoVentaBienesConsigna;
end;

procedure RegistroRespuestaConsultaVentaBienesConsignaType.SetEstadoVentaBienesConsigna(const AEstadoFactura2Type: EstadoFactura2Type);
begin
  FEstadoVentaBienesConsigna := AEstadoFactura2Type;
end;

destructor RegistroRespuestaConsultaOperacionesSegurosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosOperacionesSeguros);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoOperacionesSeguros);
  inherited Destroy;
end;

function RegistroRespuestaConsultaOperacionesSegurosType.GetDatosOperacionesSeguros: RespuestaOperacionesSegurosType;
begin
  Result := FDatosOperacionesSeguros;
end;

procedure RegistroRespuestaConsultaOperacionesSegurosType.SetDatosOperacionesSeguros(const ARespuestaOperacionesSegurosType: RespuestaOperacionesSegurosType);
begin
  FDatosOperacionesSeguros := ARespuestaOperacionesSegurosType;
end;

function RegistroRespuestaConsultaOperacionesSegurosType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaOperacionesSegurosType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaOperacionesSegurosType.GetEstadoOperacionesSeguros: EstadoFactura2Type;
begin
  Result := FEstadoOperacionesSeguros;
end;

procedure RegistroRespuestaConsultaOperacionesSegurosType.SetEstadoOperacionesSeguros(const AEstadoFactura2Type: EstadoFactura2Type);
begin
  FEstadoOperacionesSeguros := AEstadoFactura2Type;
end;

destructor RegistroRespuestaConsultaAgenciasViajesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosAgenciasViajes);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoAgenciasViajes);
  inherited Destroy;
end;

function RegistroRespuestaConsultaAgenciasViajesType.GetDatosAgenciasViajes: RespuestaCobrosMetalicoType;
begin
  Result := FDatosAgenciasViajes;
end;

procedure RegistroRespuestaConsultaAgenciasViajesType.SetDatosAgenciasViajes(const ARespuestaCobrosMetalicoType: RespuestaCobrosMetalicoType);
begin
  FDatosAgenciasViajes := ARespuestaCobrosMetalicoType;
end;

function RegistroRespuestaConsultaAgenciasViajesType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaAgenciasViajesType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaAgenciasViajesType.GetEstadoAgenciasViajes: EstadoFactura2Type;
begin
  Result := FEstadoAgenciasViajes;
end;

procedure RegistroRespuestaConsultaAgenciasViajesType.SetEstadoAgenciasViajes(const AEstadoFactura2Type: EstadoFactura2Type);
begin
  FEstadoAgenciasViajes := AEstadoFactura2Type;
end;

destructor TipoDesglose.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseFactura);
  System.SysUtils.FreeAndNil(FDesgloseTipoOperacion);
  inherited Destroy;
end;

function TipoDesglose.GetDesgloseFactura(Index: Integer): TipoSinDesgloseType;
begin
  Result := FDesgloseFactura;
end;

procedure TipoDesglose.SetDesgloseFactura(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
begin
  FDesgloseFactura := ATipoSinDesgloseType;
  FDesgloseFactura_Specified := True;
end;

function TipoDesglose.DesgloseFactura_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseFactura_Specified;
end;

function TipoDesglose.GetDesgloseTipoOperacion(Index: Integer): TipoConDesgloseType;
begin
  Result := FDesgloseTipoOperacion;
end;

procedure TipoDesglose.SetDesgloseTipoOperacion(Index: Integer; const ATipoConDesgloseType: TipoConDesgloseType);
begin
  FDesgloseTipoOperacion := ATipoConDesgloseType;
  FDesgloseTipoOperacion_Specified := True;
end;

function TipoDesglose.DesgloseTipoOperacion_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseTipoOperacion_Specified;
end;

destructor TipoDesglose2.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseFactura);
  System.SysUtils.FreeAndNil(FDesgloseTipoOperacion);
  inherited Destroy;
end;

function TipoDesglose2.GetDesgloseFactura(Index: Integer): TipoSinDesgloseType;
begin
  Result := FDesgloseFactura;
end;

procedure TipoDesglose2.SetDesgloseFactura(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
begin
  FDesgloseFactura := ATipoSinDesgloseType;
  FDesgloseFactura_Specified := True;
end;

function TipoDesglose2.DesgloseFactura_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseFactura_Specified;
end;

function TipoDesglose2.GetDesgloseTipoOperacion(Index: Integer): TipoConDesgloseType;
begin
  Result := FDesgloseTipoOperacion;
end;

procedure TipoDesglose2.SetDesgloseTipoOperacion(Index: Integer; const ATipoConDesgloseType: TipoConDesgloseType);
begin
  FDesgloseTipoOperacion := ATipoConDesgloseType;
  FDesgloseTipoOperacion_Specified := True;
end;

function TipoDesglose2.DesgloseTipoOperacion_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseTipoOperacion_Specified;
end;

destructor RespuestaDetOperIntracomunitariaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FDetOperIntracomunitarias);
  inherited Destroy;
end;

function RespuestaDetOperIntracomunitariaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaDetOperIntracomunitariaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaDetOperIntracomunitariaType.GetDetOperIntracomunitarias: OperacionIntracomunitariaType;
begin
  Result := FDetOperIntracomunitarias;
end;

procedure RespuestaDetOperIntracomunitariaType.SetDetOperIntracomunitarias(const AOperacionIntracomunitariaType: OperacionIntracomunitariaType);
begin
  FDetOperIntracomunitarias := AOperacionIntracomunitariaType;
end;

destructor FacturasAgrupadas.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FIDFacturaAgrupada)-1 do
    System.SysUtils.FreeAndNil(FIDFacturaAgrupada[I]);
  System.SetLength(FIDFacturaAgrupada, 0);
  inherited Destroy;
end;

function FacturasAgrupadas.GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;
begin
  Result := FIDFacturaAgrupada[Index];
end;

procedure FacturasAgrupadas.SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
begin
   FIDFacturaAgrupada[Index] := Item;
end;

function FacturasAgrupadas.GetIDFacturaARTypeArrayLength: Integer;
begin
  if Assigned(FIDFacturaAgrupada) then
    Result := System.Length(FIDFacturaAgrupada)
  else
    Result := 0;
end;

procedure FacturasAgrupadas.SetIDFacturaARTypeArrayLength(Len: Integer);
begin
  System.SetLength(FIDFacturaAgrupada, Len);
end;

function FacturasAgrupadas.GetIDFacturaAgrupada(Index: Integer): Array_Of_IDFacturaARType;
begin
  Result := FIDFacturaAgrupada;
end;

procedure FacturasAgrupadas.SetIDFacturaAgrupada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
begin
  FIDFacturaAgrupada := AArray_Of_IDFacturaARType;
end;

destructor FacturasRectificadas.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FIDFacturaRectificada)-1 do
    System.SysUtils.FreeAndNil(FIDFacturaRectificada[I]);
  System.SetLength(FIDFacturaRectificada, 0);
  inherited Destroy;
end;

function FacturasRectificadas.GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;
begin
  Result := FIDFacturaRectificada[Index];
end;

procedure FacturasRectificadas.SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
begin
   FIDFacturaRectificada[Index] := Item;
end;

function FacturasRectificadas.GetIDFacturaARTypeArrayLength: Integer;
begin
  if Assigned(FIDFacturaRectificada) then
    Result := System.Length(FIDFacturaRectificada)
  else
    Result := 0;
end;

procedure FacturasRectificadas.SetIDFacturaARTypeArrayLength(Len: Integer);
begin
  System.SetLength(FIDFacturaRectificada, Len);
end;

function FacturasRectificadas.GetIDFacturaRectificada(Index: Integer): Array_Of_IDFacturaARType;
begin
  Result := FIDFacturaRectificada;
end;

procedure FacturasRectificadas.SetIDFacturaRectificada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
begin
  FIDFacturaRectificada := AArray_Of_IDFacturaARType;
end;

destructor DatosInmueble.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleInmueble)-1 do
    System.SysUtils.FreeAndNil(FDetalleInmueble[I]);
  System.SetLength(FDetalleInmueble, 0);
  inherited Destroy;
end;

function DatosInmueble.GetDatosInmuebleTypeArray(Index: Integer): DatosInmuebleType;
begin
  Result := FDetalleInmueble[Index];
end;

procedure DatosInmueble.SetDatosInmuebleTypeArray(Index: Integer; const Item: DatosInmuebleType);
begin
   FDetalleInmueble[Index] := Item;
end;

function DatosInmueble.GetDatosInmuebleTypeArrayLength: Integer;
begin
  if Assigned(FDetalleInmueble) then
    Result := System.Length(FDetalleInmueble)
  else
    Result := 0;
end;

procedure DatosInmueble.SetDatosInmuebleTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleInmueble, Len);
end;

function DatosInmueble.GetDetalleInmueble(Index: Integer): Array_Of_DatosInmuebleType;
begin
  Result := FDetalleInmueble;
end;

procedure DatosInmueble.SetDetalleInmueble(Index: Integer; const AArray_Of_DatosInmuebleType: Array_Of_DatosInmuebleType);
begin
  FDetalleInmueble := AArray_Of_DatosInmuebleType;
end;

destructor DatosInmueble2.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleInmueble)-1 do
    System.SysUtils.FreeAndNil(FDetalleInmueble[I]);
  System.SetLength(FDetalleInmueble, 0);
  inherited Destroy;
end;

function DatosInmueble2.GetDatosInmuebleTypeArray(Index: Integer): DatosInmuebleType;
begin
  Result := FDetalleInmueble[Index];
end;

procedure DatosInmueble2.SetDatosInmuebleTypeArray(Index: Integer; const Item: DatosInmuebleType);
begin
   FDetalleInmueble[Index] := Item;
end;

function DatosInmueble2.GetDatosInmuebleTypeArrayLength: Integer;
begin
  if Assigned(FDetalleInmueble) then
    Result := System.Length(FDetalleInmueble)
  else
    Result := 0;
end;

procedure DatosInmueble2.SetDatosInmuebleTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleInmueble, Len);
end;

function DatosInmueble2.GetDetalleInmueble(Index: Integer): Array_Of_DatosInmuebleType;
begin
  Result := FDetalleInmueble;
end;

procedure DatosInmueble2.SetDetalleInmueble(Index: Integer; const AArray_Of_DatosInmuebleType: Array_Of_DatosInmuebleType);
begin
  FDetalleInmueble := AArray_Of_DatosInmuebleType;
end;

destructor RespuestaVentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FSustitutoDestinatarioInicial);
  System.SysUtils.FreeAndNil(FDeposito);
  System.SysUtils.FreeAndNil(FOperacionIntracomunitaria);
  inherited Destroy;
end;

function RespuestaVentaBienesConsignaType.GetClaveDeclarante: TipoClaveDeclaranteType;
begin
  Result := FClaveDeclarante;
end;

procedure RespuestaVentaBienesConsignaType.SetClaveDeclarante(const ATipoClaveDeclaranteType: TipoClaveDeclaranteType);
begin
  FClaveDeclarante := ATipoClaveDeclaranteType;
end;

function RespuestaVentaBienesConsignaType.GetTipoOperacion: TipoOperacionType;
begin
  Result := FTipoOperacion;
end;

procedure RespuestaVentaBienesConsignaType.SetTipoOperacion(const ATipoOperacionType: TipoOperacionType);
begin
  FTipoOperacion := ATipoOperacionType;
end;

function RespuestaVentaBienesConsignaType.GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaVentaBienesConsignaType.SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
  FContraparte_Specified := True;
end;

function RespuestaVentaBienesConsignaType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function RespuestaVentaBienesConsignaType.GetSustitutoDestinatarioInicial(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FSustitutoDestinatarioInicial;
end;

procedure RespuestaVentaBienesConsignaType.SetSustitutoDestinatarioInicial(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FSustitutoDestinatarioInicial := APersonaFisicaJuridicaType;
  FSustitutoDestinatarioInicial_Specified := True;
end;

function RespuestaVentaBienesConsignaType.SustitutoDestinatarioInicial_Specified(Index: Integer): boolean;
begin
  Result := FSustitutoDestinatarioInicial_Specified;
end;

function RespuestaVentaBienesConsignaType.GetDeposito(Index: Integer): DepositoType;
begin
  Result := FDeposito;
end;

procedure RespuestaVentaBienesConsignaType.SetDeposito(Index: Integer; const ADepositoType: DepositoType);
begin
  FDeposito := ADepositoType;
  FDeposito_Specified := True;
end;

function RespuestaVentaBienesConsignaType.Deposito_Specified(Index: Integer): boolean;
begin
  Result := FDeposito_Specified;
end;

function RespuestaVentaBienesConsignaType.GetOperacionIntracomunitaria: VentaBienesConsignaType;
begin
  Result := FOperacionIntracomunitaria;
end;

procedure RespuestaVentaBienesConsignaType.SetOperacionIntracomunitaria(const AVentaBienesConsignaType: VentaBienesConsignaType);
begin
  FOperacionIntracomunitaria := AVentaBienesConsignaType;
end;

destructor LRVentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIdRegistroDeclarado);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FSustitutoDestinatarioInicial);
  System.SysUtils.FreeAndNil(FDeposito);
  System.SysUtils.FreeAndNil(FOperacionIntracomunitaria);
  inherited Destroy;
end;

function LRVentaBienesConsignaType.GetClaveDeclarante: TipoClaveDeclaranteType;
begin
  Result := FClaveDeclarante;
end;

procedure LRVentaBienesConsignaType.SetClaveDeclarante(const ATipoClaveDeclaranteType: TipoClaveDeclaranteType);
begin
  FClaveDeclarante := ATipoClaveDeclaranteType;
end;

function LRVentaBienesConsignaType.GetIdRegistroDeclarado: IdRegistroDeclaradoType;
begin
  Result := FIdRegistroDeclarado;
end;

procedure LRVentaBienesConsignaType.SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
begin
  FIdRegistroDeclarado := AIdRegistroDeclaradoType;
end;

function LRVentaBienesConsignaType.GetTipoOperacion: TipoOperacionType;
begin
  Result := FTipoOperacion;
end;

procedure LRVentaBienesConsignaType.SetTipoOperacion(const ATipoOperacionType: TipoOperacionType);
begin
  FTipoOperacion := ATipoOperacionType;
end;

function LRVentaBienesConsignaType.GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LRVentaBienesConsignaType.SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
  FContraparte_Specified := True;
end;

function LRVentaBienesConsignaType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function LRVentaBienesConsignaType.GetSustitutoDestinatarioInicial(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FSustitutoDestinatarioInicial;
end;

procedure LRVentaBienesConsignaType.SetSustitutoDestinatarioInicial(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FSustitutoDestinatarioInicial := APersonaFisicaJuridicaType;
  FSustitutoDestinatarioInicial_Specified := True;
end;

function LRVentaBienesConsignaType.SustitutoDestinatarioInicial_Specified(Index: Integer): boolean;
begin
  Result := FSustitutoDestinatarioInicial_Specified;
end;

function LRVentaBienesConsignaType.GetDeposito(Index: Integer): DepositoType;
begin
  Result := FDeposito;
end;

procedure LRVentaBienesConsignaType.SetDeposito(Index: Integer; const ADepositoType: DepositoType);
begin
  FDeposito := ADepositoType;
  FDeposito_Specified := True;
end;

function LRVentaBienesConsignaType.Deposito_Specified(Index: Integer): boolean;
begin
  Result := FDeposito_Specified;
end;

function LRVentaBienesConsignaType.GetOperacionIntracomunitaria: VentaBienesConsignaType;
begin
  Result := FOperacionIntracomunitaria;
end;

procedure LRVentaBienesConsignaType.SetOperacionIntracomunitaria(const AVentaBienesConsignaType: VentaBienesConsignaType);
begin
  FOperacionIntracomunitaria := AVentaBienesConsignaType;
end;

destructor InversionSujetoPasivo.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleIVA)-1 do
    System.SysUtils.FreeAndNil(FDetalleIVA[I]);
  System.SetLength(FDetalleIVA, 0);
  inherited Destroy;
end;

function InversionSujetoPasivo.GetDetalleIVARecibida2TypeArray(Index: Integer): DetalleIVARecibida2Type;
begin
  Result := FDetalleIVA[Index];
end;

procedure InversionSujetoPasivo.SetDetalleIVARecibida2TypeArray(Index: Integer; const Item: DetalleIVARecibida2Type);
begin
   FDetalleIVA[Index] := Item;
end;

function InversionSujetoPasivo.GetDetalleIVARecibida2TypeArrayLength: Integer;
begin
  if Assigned(FDetalleIVA) then
    Result := System.Length(FDetalleIVA)
  else
    Result := 0;
end;

procedure InversionSujetoPasivo.SetDetalleIVARecibida2TypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleIVA, Len);
end;

function InversionSujetoPasivo.GetDetalleIVA(Index: Integer): Array_Of_DetalleIVARecibida2Type;
begin
  Result := FDetalleIVA;
end;

procedure InversionSujetoPasivo.SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVARecibida2Type: Array_Of_DetalleIVARecibida2Type);
begin
  FDetalleIVA := AArray_Of_DetalleIVARecibida2Type;
end;

destructor DesgloseIVA.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleIVA)-1 do
    System.SysUtils.FreeAndNil(FDetalleIVA[I]);
  System.SetLength(FDetalleIVA, 0);
  inherited Destroy;
end;

function DesgloseIVA.GetDetalleIVARecibidaTypeArray(Index: Integer): DetalleIVARecibidaType;
begin
  Result := FDetalleIVA[Index];
end;

procedure DesgloseIVA.SetDetalleIVARecibidaTypeArray(Index: Integer; const Item: DetalleIVARecibidaType);
begin
   FDetalleIVA[Index] := Item;
end;

function DesgloseIVA.GetDetalleIVARecibidaTypeArrayLength: Integer;
begin
  if Assigned(FDetalleIVA) then
    Result := System.Length(FDetalleIVA)
  else
    Result := 0;
end;

procedure DesgloseIVA.SetDetalleIVARecibidaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleIVA, Len);
end;

function DesgloseIVA.GetDetalleIVA(Index: Integer): Array_Of_DetalleIVARecibidaType;
begin
  Result := FDetalleIVA;
end;

procedure DesgloseIVA.SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVARecibidaType: Array_Of_DetalleIVARecibidaType);
begin
  FDetalleIVA := AArray_Of_DetalleIVARecibidaType;
end;

destructor TipoSinDesgloseType.Destroy;
begin
  System.SysUtils.FreeAndNil(FSujeta);
  System.SysUtils.FreeAndNil(FNoSujeta);
  inherited Destroy;
end;

function TipoSinDesgloseType.GetSujeta(Index: Integer): SujetaType;
begin
  Result := FSujeta;
end;

procedure TipoSinDesgloseType.SetSujeta(Index: Integer; const ASujetaType: SujetaType);
begin
  FSujeta := ASujetaType;
  FSujeta_Specified := True;
end;

function TipoSinDesgloseType.Sujeta_Specified(Index: Integer): boolean;
begin
  Result := FSujeta_Specified;
end;

function TipoSinDesgloseType.GetNoSujeta(Index: Integer): NoSujetaType;
begin
  Result := FNoSujeta;
end;

procedure TipoSinDesgloseType.SetNoSujeta(Index: Integer; const ANoSujetaType: NoSujetaType);
begin
  FNoSujeta := ANoSujetaType;
  FNoSujeta_Specified := True;
end;

function TipoSinDesgloseType.NoSujeta_Specified(Index: Integer): boolean;
begin
  Result := FNoSujeta_Specified;
end;

destructor TipoConDesgloseType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPrestacionServicios);
  System.SysUtils.FreeAndNil(FEntrega);
  inherited Destroy;
end;

function TipoConDesgloseType.GetPrestacionServicios(Index: Integer): TipoSinDesglosePrestacionType;
begin
  Result := FPrestacionServicios;
end;

procedure TipoConDesgloseType.SetPrestacionServicios(Index: Integer; const ATipoSinDesglosePrestacionType: TipoSinDesglosePrestacionType);
begin
  FPrestacionServicios := ATipoSinDesglosePrestacionType;
  FPrestacionServicios_Specified := True;
end;

function TipoConDesgloseType.PrestacionServicios_Specified(Index: Integer): boolean;
begin
  Result := FPrestacionServicios_Specified;
end;

function TipoConDesgloseType.GetEntrega(Index: Integer): TipoSinDesgloseType;
begin
  Result := FEntrega;
end;

procedure TipoConDesgloseType.SetEntrega(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
begin
  FEntrega := ATipoSinDesgloseType;
  FEntrega_Specified := True;
end;

function TipoConDesgloseType.Entrega_Specified(Index: Integer): boolean;
begin
  Result := FEntrega_Specified;
end;

destructor DesgloseFacturaRecibidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FInversionSujetoPasivo);
  System.SysUtils.FreeAndNil(FDesgloseIVA);
  inherited Destroy;
end;

function DesgloseFacturaRecibidasType.GetInversionSujetoPasivo(Index: Integer): InversionSujetoPasivo;
begin
  Result := FInversionSujetoPasivo;
end;

procedure DesgloseFacturaRecibidasType.SetInversionSujetoPasivo(Index: Integer; const AInversionSujetoPasivo: InversionSujetoPasivo);
begin
  FInversionSujetoPasivo := AInversionSujetoPasivo;
  FInversionSujetoPasivo_Specified := True;
end;

function DesgloseFacturaRecibidasType.InversionSujetoPasivo_Specified(Index: Integer): boolean;
begin
  Result := FInversionSujetoPasivo_Specified;
end;

function DesgloseFacturaRecibidasType.GetDesgloseIVA(Index: Integer): DesgloseIVA;
begin
  Result := FDesgloseIVA;
end;

procedure DesgloseFacturaRecibidasType.SetDesgloseIVA(Index: Integer; const ADesgloseIVA: DesgloseIVA);
begin
  FDesgloseIVA := ADesgloseIVA;
  FDesgloseIVA_Specified := True;
end;

function DesgloseFacturaRecibidasType.DesgloseIVA_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseIVA_Specified;
end;

destructor DatosInmueble3.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleInmueble)-1 do
    System.SysUtils.FreeAndNil(FDetalleInmueble[I]);
  System.SetLength(FDetalleInmueble, 0);
  inherited Destroy;
end;

function DatosInmueble3.GetDatosInmuebleTypeArray(Index: Integer): DatosInmuebleType;
begin
  Result := FDetalleInmueble[Index];
end;

procedure DatosInmueble3.SetDatosInmuebleTypeArray(Index: Integer; const Item: DatosInmuebleType);
begin
   FDetalleInmueble[Index] := Item;
end;

function DatosInmueble3.GetDatosInmuebleTypeArrayLength: Integer;
begin
  if Assigned(FDetalleInmueble) then
    Result := System.Length(FDetalleInmueble)
  else
    Result := 0;
end;

procedure DatosInmueble3.SetDatosInmuebleTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleInmueble, Len);
end;

function DatosInmueble3.GetDetalleInmueble(Index: Integer): Array_Of_DatosInmuebleType;
begin
  Result := FDetalleInmueble;
end;

procedure DatosInmueble3.SetDetalleInmueble(Index: Integer; const AArray_Of_DatosInmuebleType: Array_Of_DatosInmuebleType);
begin
  FDetalleInmueble := AArray_Of_DatosInmuebleType;
end;

destructor TipoDesglose3.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseFactura);
  System.SysUtils.FreeAndNil(FDesgloseTipoOperacion);
  inherited Destroy;
end;

function TipoDesglose3.GetDesgloseFactura(Index: Integer): TipoSinDesgloseType;
begin
  Result := FDesgloseFactura;
end;

procedure TipoDesglose3.SetDesgloseFactura(Index: Integer; const ATipoSinDesgloseType: TipoSinDesgloseType);
begin
  FDesgloseFactura := ATipoSinDesgloseType;
  FDesgloseFactura_Specified := True;
end;

function TipoDesglose3.DesgloseFactura_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseFactura_Specified;
end;

function TipoDesglose3.GetDesgloseTipoOperacion(Index: Integer): TipoConDesgloseType;
begin
  Result := FDesgloseTipoOperacion;
end;

procedure TipoDesglose3.SetDesgloseTipoOperacion(Index: Integer; const ATipoConDesgloseType: TipoConDesgloseType);
begin
  FDesgloseTipoOperacion := ATipoConDesgloseType;
  FDesgloseTipoOperacion_Specified := True;
end;

function TipoDesglose3.DesgloseTipoOperacion_Specified(Index: Integer): boolean;
begin
  Result := FDesgloseTipoOperacion_Specified;
end;

destructor DesgloseIVA2.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleIVA)-1 do
    System.SysUtils.FreeAndNil(FDetalleIVA[I]);
  System.SetLength(FDetalleIVA, 0);
  inherited Destroy;
end;

function DesgloseIVA2.GetDetalleIVAEmitidaTypeArray(Index: Integer): DetalleIVAEmitidaType;
begin
  Result := FDetalleIVA[Index];
end;

procedure DesgloseIVA2.SetDetalleIVAEmitidaTypeArray(Index: Integer; const Item: DetalleIVAEmitidaType);
begin
   FDetalleIVA[Index] := Item;
end;

function DesgloseIVA2.GetDetalleIVAEmitidaTypeArrayLength: Integer;
begin
  if Assigned(FDetalleIVA) then
    Result := System.Length(FDetalleIVA)
  else
    Result := 0;
end;

procedure DesgloseIVA2.SetDetalleIVAEmitidaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleIVA, Len);
end;

function DesgloseIVA2.GetDetalleIVA(Index: Integer): Array_Of_DetalleIVAEmitidaType;
begin
  Result := FDetalleIVA;
end;

procedure DesgloseIVA2.SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVAEmitidaType: Array_Of_DetalleIVAEmitidaType);
begin
  FDetalleIVA := AArray_Of_DetalleIVAEmitidaType;
end;

destructor Exenta.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleExenta)-1 do
    System.SysUtils.FreeAndNil(FDetalleExenta[I]);
  System.SetLength(FDetalleExenta, 0);
  inherited Destroy;
end;

function Exenta.GetDetalleExentaTypeArray(Index: Integer): DetalleExentaType;
begin
  Result := FDetalleExenta[Index];
end;

procedure Exenta.SetDetalleExentaTypeArray(Index: Integer; const Item: DetalleExentaType);
begin
   FDetalleExenta[Index] := Item;
end;

function Exenta.GetDetalleExentaTypeArrayLength: Integer;
begin
  if Assigned(FDetalleExenta) then
    Result := System.Length(FDetalleExenta)
  else
    Result := 0;
end;

procedure Exenta.SetDetalleExentaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleExenta, Len);
end;

function Exenta.GetDetalleExenta(Index: Integer): Array_Of_DetalleExentaType;
begin
  Result := FDetalleExenta;
end;

procedure Exenta.SetDetalleExenta(Index: Integer; const AArray_Of_DetalleExentaType: Array_Of_DetalleExentaType);
begin
  FDetalleExenta := AArray_Of_DetalleExentaType;
end;

destructor Exenta2.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleExenta)-1 do
    System.SysUtils.FreeAndNil(FDetalleExenta[I]);
  System.SetLength(FDetalleExenta, 0);
  inherited Destroy;
end;

function Exenta2.GetDetalleExentaTypeArray(Index: Integer): DetalleExentaType;
begin
  Result := FDetalleExenta[Index];
end;

procedure Exenta2.SetDetalleExentaTypeArray(Index: Integer; const Item: DetalleExentaType);
begin
   FDetalleExenta[Index] := Item;
end;

function Exenta2.GetDetalleExentaTypeArrayLength: Integer;
begin
  if Assigned(FDetalleExenta) then
    Result := System.Length(FDetalleExenta)
  else
    Result := 0;
end;

procedure Exenta2.SetDetalleExentaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleExenta, Len);
end;

function Exenta2.GetDetalleExenta(Index: Integer): Array_Of_DetalleExentaType;
begin
  Result := FDetalleExenta;
end;

procedure Exenta2.SetDetalleExenta(Index: Integer; const AArray_Of_DetalleExentaType: Array_Of_DetalleExentaType);
begin
  FDetalleExenta := AArray_Of_DetalleExentaType;
end;

destructor NoExenta.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseIVA);
  inherited Destroy;
end;

function NoExenta.GetTipoNoExenta: TipoOperacionSujetaNoExentaType;
begin
  Result := FTipoNoExenta;
end;

procedure NoExenta.SetTipoNoExenta(const ATipoOperacionSujetaNoExentaType: TipoOperacionSujetaNoExentaType);
begin
  FTipoNoExenta := ATipoOperacionSujetaNoExentaType;
end;

function NoExenta.GetDesgloseIVA: DesgloseIVA2;
begin
  Result := FDesgloseIVA;
end;

procedure NoExenta.SetDesgloseIVA(const ADesgloseIVA2: DesgloseIVA2);
begin
  FDesgloseIVA := ADesgloseIVA2;
end;

destructor NoExenta2.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseIVA);
  inherited Destroy;
end;

function NoExenta2.GetTipoNoExenta: TipoOperacionSujetaNoExentaType;
begin
  Result := FTipoNoExenta;
end;

procedure NoExenta2.SetTipoNoExenta(const ATipoOperacionSujetaNoExentaType: TipoOperacionSujetaNoExentaType);
begin
  FTipoNoExenta := ATipoOperacionSujetaNoExentaType;
end;

function NoExenta2.GetDesgloseIVA: DesgloseIVA3;
begin
  Result := FDesgloseIVA;
end;

procedure NoExenta2.SetDesgloseIVA(const ADesgloseIVA3: DesgloseIVA3);
begin
  FDesgloseIVA := ADesgloseIVA3;
end;

destructor DesgloseIVA3.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FDetalleIVA)-1 do
    System.SysUtils.FreeAndNil(FDetalleIVA[I]);
  System.SetLength(FDetalleIVA, 0);
  inherited Destroy;
end;

function DesgloseIVA3.GetDetalleIVAEmitidaPrestacionTypeArray(Index: Integer): DetalleIVAEmitidaPrestacionType;
begin
  Result := FDetalleIVA[Index];
end;

procedure DesgloseIVA3.SetDetalleIVAEmitidaPrestacionTypeArray(Index: Integer; const Item: DetalleIVAEmitidaPrestacionType);
begin
   FDetalleIVA[Index] := Item;
end;

function DesgloseIVA3.GetDetalleIVAEmitidaPrestacionTypeArrayLength: Integer;
begin
  if Assigned(FDetalleIVA) then
    Result := System.Length(FDetalleIVA)
  else
    Result := 0;
end;

procedure DesgloseIVA3.SetDetalleIVAEmitidaPrestacionTypeArrayLength(Len: Integer);
begin
  System.SetLength(FDetalleIVA, Len);
end;

function DesgloseIVA3.GetDetalleIVA(Index: Integer): Array_Of_DetalleIVAEmitidaPrestacionType;
begin
  Result := FDetalleIVA;
end;

procedure DesgloseIVA3.SetDetalleIVA(Index: Integer; const AArray_Of_DetalleIVAEmitidaPrestacionType: Array_Of_DetalleIVAEmitidaPrestacionType);
begin
  FDetalleIVA := AArray_Of_DetalleIVAEmitidaPrestacionType;
end;

destructor SujetaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FExenta);
  System.SysUtils.FreeAndNil(FNoExenta);
  inherited Destroy;
end;

function SujetaType.GetExenta(Index: Integer): Exenta2;
begin
  Result := FExenta;
end;

procedure SujetaType.SetExenta(Index: Integer; const AExenta2: Exenta2);
begin
  FExenta := AExenta2;
  FExenta_Specified := True;
end;

function SujetaType.Exenta_Specified(Index: Integer): boolean;
begin
  Result := FExenta_Specified;
end;

function SujetaType.GetNoExenta(Index: Integer): NoExenta;
begin
  Result := FNoExenta;
end;

procedure SujetaType.SetNoExenta(Index: Integer; const ANoExenta: NoExenta);
begin
  FNoExenta := ANoExenta;
  FNoExenta_Specified := True;
end;

function SujetaType.NoExenta_Specified(Index: Integer): boolean;
begin
  Result := FNoExenta_Specified;
end;

destructor SujetaPrestacionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FExenta);
  System.SysUtils.FreeAndNil(FNoExenta);
  inherited Destroy;
end;

function SujetaPrestacionType.GetExenta(Index: Integer): Exenta;
begin
  Result := FExenta;
end;

procedure SujetaPrestacionType.SetExenta(Index: Integer; const AExenta: Exenta);
begin
  FExenta := AExenta;
  FExenta_Specified := True;
end;

function SujetaPrestacionType.Exenta_Specified(Index: Integer): boolean;
begin
  Result := FExenta_Specified;
end;

function SujetaPrestacionType.GetNoExenta(Index: Integer): NoExenta2;
begin
  Result := FNoExenta;
end;

procedure SujetaPrestacionType.SetNoExenta(Index: Integer; const ANoExenta2: NoExenta2);
begin
  FNoExenta := ANoExenta2;
  FNoExenta_Specified := True;
end;

function SujetaPrestacionType.NoExenta_Specified(Index: Integer): boolean;
begin
  Result := FNoExenta_Specified;
end;

destructor TipoSinDesglosePrestacionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FSujeta);
  System.SysUtils.FreeAndNil(FNoSujeta);
  inherited Destroy;
end;

function TipoSinDesglosePrestacionType.GetSujeta(Index: Integer): SujetaPrestacionType;
begin
  Result := FSujeta;
end;

procedure TipoSinDesglosePrestacionType.SetSujeta(Index: Integer; const ASujetaPrestacionType: SujetaPrestacionType);
begin
  FSujeta := ASujetaPrestacionType;
  FSujeta_Specified := True;
end;

function TipoSinDesglosePrestacionType.Sujeta_Specified(Index: Integer): boolean;
begin
  Result := FSujeta_Specified;
end;

function TipoSinDesglosePrestacionType.GetNoSujeta(Index: Integer): NoSujetaType;
begin
  Result := FNoSujeta;
end;

procedure TipoSinDesglosePrestacionType.SetNoSujeta(Index: Integer; const ANoSujetaType: NoSujetaType);
begin
  FNoSujeta := ANoSujetaType;
  FNoSujeta_Specified := True;
end;

function TipoSinDesglosePrestacionType.NoSujeta_Specified(Index: Integer): boolean;
begin
  Result := FNoSujeta_Specified;
end;

function DatosInmuebleType.GetSituacionInmueble: SituacionInmuebleType;
begin
  Result := FSituacionInmueble;
end;

procedure DatosInmuebleType.SetSituacionInmueble(const ASituacionInmuebleType: SituacionInmuebleType);
begin
  FSituacionInmueble := ASituacionInmuebleType;
end;

function DatosInmuebleType.GetReferenciaCatastral(Index: Integer): ReferenciaCatastralType;
begin
  Result := FReferenciaCatastral;
end;

procedure DatosInmuebleType.SetReferenciaCatastral(Index: Integer; const AReferenciaCatastralType: ReferenciaCatastralType);
begin
  FReferenciaCatastral := AReferenciaCatastralType;
  FReferenciaCatastral_Specified := True;
end;

function DatosInmuebleType.ReferenciaCatastral_Specified(Index: Integer): boolean;
begin
  Result := FReferenciaCatastral_Specified;
end;

destructor RespuestaComunBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FCabecera);
  inherited Destroy;
end;

function RespuestaComunBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaComunBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaComunBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaComunBajaType.GetDatosPresentacion(Index: Integer): DatosPresentacionType;
begin
  Result := FDatosPresentacion;
end;

procedure RespuestaComunBajaType.SetDatosPresentacion(Index: Integer; const ADatosPresentacionType: DatosPresentacionType);
begin
  FDatosPresentacion := ADatosPresentacionType;
  FDatosPresentacion_Specified := True;
end;

function RespuestaComunBajaType.DatosPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FDatosPresentacion_Specified;
end;

function RespuestaComunBajaType.GetCabecera: CabeceraSiiBaja;
begin
  Result := FCabecera;
end;

procedure RespuestaComunBajaType.SetCabecera(const ACabeceraSiiBaja: CabeceraSiiBaja);
begin
  FCabecera := ACabeceraSiiBaja;
end;

function RespuestaComunBajaType.GetEstadoEnvio: EstadoEnvioType;
begin
  Result := FEstadoEnvio;
end;

procedure RespuestaComunBajaType.SetEstadoEnvio(const AEstadoEnvioType: EstadoEnvioType);
begin
  FEstadoEnvio := AEstadoEnvioType;
end;

destructor RespuestaLRBajaVentaBienesConsignaType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaVentaBienesConsignaType.GetRespuestaVentaBienesConsignaBajaTypeArray(Index: Integer): RespuestaVentaBienesConsignaBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaVentaBienesConsignaType.SetRespuestaVentaBienesConsignaBajaTypeArray(Index: Integer; const Item: RespuestaVentaBienesConsignaBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaVentaBienesConsignaType.GetRespuestaVentaBienesConsignaBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaVentaBienesConsignaType.SetRespuestaVentaBienesConsignaBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaVentaBienesConsignaType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaVentaBienesConsignaBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaVentaBienesConsignaType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaVentaBienesConsignaBajaType: Array_Of_RespuestaVentaBienesConsignaBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaVentaBienesConsignaBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaVentaBienesConsignaType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaIMetalicoType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaIMetalicoType.GetRespuestaMetalicoBajaTypeArray(Index: Integer): RespuestaMetalicoBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaIMetalicoType.SetRespuestaMetalicoBajaTypeArray(Index: Integer; const Item: RespuestaMetalicoBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaIMetalicoType.GetRespuestaMetalicoBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaIMetalicoType.SetRespuestaMetalicoBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaIMetalicoType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaMetalicoBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaIMetalicoType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaMetalicoBajaType: Array_Of_RespuestaMetalicoBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaMetalicoBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaIMetalicoType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaFRecibidasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaFRecibidasType.GetRespuestaRecibidaBajaTypeArray(Index: Integer): RespuestaRecibidaBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaFRecibidasType.SetRespuestaRecibidaBajaTypeArray(Index: Integer; const Item: RespuestaRecibidaBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaFRecibidasType.GetRespuestaRecibidaBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaFRecibidasType.SetRespuestaRecibidaBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaFRecibidasType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaRecibidaBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaFRecibidasType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaRecibidaBajaType: Array_Of_RespuestaRecibidaBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaRecibidaBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaFRecibidasType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaOComunitariasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaOComunitariasType.GetRespuestaComunitariaBajaTypeArray(Index: Integer): RespuestaComunitariaBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaOComunitariasType.SetRespuestaComunitariaBajaTypeArray(Index: Integer; const Item: RespuestaComunitariaBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaOComunitariasType.GetRespuestaComunitariaBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaOComunitariasType.SetRespuestaComunitariaBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaOComunitariasType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaComunitariaBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaOComunitariasType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaComunitariaBajaType: Array_Of_RespuestaComunitariaBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaComunitariaBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaOComunitariasType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaBienesInversionType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaBienesInversionType.GetRespuestaBienBajaTypeArray(Index: Integer): RespuestaBienBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaBienesInversionType.SetRespuestaBienBajaTypeArray(Index: Integer; const Item: RespuestaBienBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaBienesInversionType.GetRespuestaBienBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaBienesInversionType.SetRespuestaBienBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaBienesInversionType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaBienBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaBienesInversionType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaBienBajaType: Array_Of_RespuestaBienBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaBienBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaBienesInversionType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaOperacionesSegurosType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaOperacionesSegurosType.GetRespuestaOperacionesSegurosBajaTypeArray(Index: Integer): RespuestaOperacionesSegurosBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaOperacionesSegurosType.SetRespuestaOperacionesSegurosBajaTypeArray(Index: Integer; const Item: RespuestaOperacionesSegurosBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaOperacionesSegurosType.GetRespuestaOperacionesSegurosBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaOperacionesSegurosType.SetRespuestaOperacionesSegurosBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaOperacionesSegurosType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaOperacionesSegurosBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaOperacionesSegurosType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaOperacionesSegurosBajaType: Array_Of_RespuestaOperacionesSegurosBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaOperacionesSegurosBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaOperacionesSegurosType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaAgenciasViajesType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaAgenciasViajesType.GetRespuestaAgenciasViajesBajaTypeArray(Index: Integer): RespuestaAgenciasViajesBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaAgenciasViajesType.SetRespuestaAgenciasViajesBajaTypeArray(Index: Integer; const Item: RespuestaAgenciasViajesBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaAgenciasViajesType.GetRespuestaAgenciasViajesBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaAgenciasViajesType.SetRespuestaAgenciasViajesBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaAgenciasViajesType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaAgenciasViajesBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaAgenciasViajesType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaAgenciasViajesBajaType: Array_Of_RespuestaAgenciasViajesBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaAgenciasViajesBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaAgenciasViajesType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

constructor RespuestaLRBajaFEmitidasType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor RespuestaLRBajaFEmitidasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaFEmitidasType.GetRespuestaExpedidaBajaTypeArray(Index: Integer): RespuestaExpedidaBajaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaFEmitidasType.SetRespuestaExpedidaBajaTypeArray(Index: Integer; const Item: RespuestaExpedidaBajaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaFEmitidasType.GetRespuestaExpedidaBajaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaFEmitidasType.SetRespuestaExpedidaBajaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaFEmitidasType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaExpedidaBajaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaFEmitidasType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaExpedidaBajaType: Array_Of_RespuestaExpedidaBajaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaExpedidaBajaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaFEmitidasType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBajaFRecibidasPagosType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBajaFRecibidasPagosType.GetRespuestaRecibidaPagoTypeArray(Index: Integer): RespuestaRecibidaPagoType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBajaFRecibidasPagosType.SetRespuestaRecibidaPagoTypeArray(Index: Integer; const Item: RespuestaRecibidaPagoType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBajaFRecibidasPagosType.GetRespuestaRecibidaPagoTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBajaFRecibidasPagosType.SetRespuestaRecibidaPagoTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBajaFRecibidasPagosType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaRecibidaPagoType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBajaFRecibidasPagosType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaRecibidaPagoType: Array_Of_RespuestaRecibidaPagoType);
begin
  FRespuestaLinea := AArray_Of_RespuestaRecibidaPagoType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBajaFRecibidasPagosType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaComunAltaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FCabecera);
  inherited Destroy;
end;

function RespuestaComunAltaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaComunAltaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaComunAltaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaComunAltaType.GetDatosPresentacion(Index: Integer): DatosPresentacionType;
begin
  Result := FDatosPresentacion;
end;

procedure RespuestaComunAltaType.SetDatosPresentacion(Index: Integer; const ADatosPresentacionType: DatosPresentacionType);
begin
  FDatosPresentacion := ADatosPresentacionType;
  FDatosPresentacion_Specified := True;
end;

function RespuestaComunAltaType.DatosPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FDatosPresentacion_Specified;
end;

function RespuestaComunAltaType.GetCabecera: CabeceraSii;
begin
  Result := FCabecera;
end;

procedure RespuestaComunAltaType.SetCabecera(const ACabeceraSii: CabeceraSii);
begin
  FCabecera := ACabeceraSii;
end;

function RespuestaComunAltaType.GetEstadoEnvio: EstadoEnvioType;
begin
  Result := FEstadoEnvio;
end;

procedure RespuestaComunAltaType.SetEstadoEnvio(const AEstadoEnvioType: EstadoEnvioType);
begin
  FEstadoEnvio := AEstadoEnvioType;
end;

destructor RespuestaLROComunitariasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLROComunitariasType.GetRespuestaComunitariaTypeArray(Index: Integer): RespuestaComunitariaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLROComunitariasType.SetRespuestaComunitariaTypeArray(Index: Integer; const Item: RespuestaComunitariaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLROComunitariasType.GetRespuestaComunitariaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLROComunitariasType.SetRespuestaComunitariaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLROComunitariasType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaComunitariaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLROComunitariasType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaComunitariaType: Array_Of_RespuestaComunitariaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaComunitariaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLROComunitariasType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRAgenciasViajesType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRAgenciasViajesType.GetRespuestaAgenciasViajesTypeArray(Index: Integer): RespuestaAgenciasViajesType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRAgenciasViajesType.SetRespuestaAgenciasViajesTypeArray(Index: Integer; const Item: RespuestaAgenciasViajesType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRAgenciasViajesType.GetRespuestaAgenciasViajesTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRAgenciasViajesType.SetRespuestaAgenciasViajesTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRAgenciasViajesType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaAgenciasViajesType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRAgenciasViajesType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaAgenciasViajesType: Array_Of_RespuestaAgenciasViajesType);
begin
  FRespuestaLinea := AArray_Of_RespuestaAgenciasViajesType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRAgenciasViajesType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRIMetalicoType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRIMetalicoType.GetRespuestaMetalicoTypeArray(Index: Integer): RespuestaMetalicoType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRIMetalicoType.SetRespuestaMetalicoTypeArray(Index: Integer; const Item: RespuestaMetalicoType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRIMetalicoType.GetRespuestaMetalicoTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRIMetalicoType.SetRespuestaMetalicoTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRIMetalicoType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaMetalicoType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRIMetalicoType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaMetalicoType: Array_Of_RespuestaMetalicoType);
begin
  FRespuestaLinea := AArray_Of_RespuestaMetalicoType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRIMetalicoType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRBienesInversionType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRBienesInversionType.GetRespuestaBienTypeArray(Index: Integer): RespuestaBienType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRBienesInversionType.SetRespuestaBienTypeArray(Index: Integer; const Item: RespuestaBienType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRBienesInversionType.GetRespuestaBienTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRBienesInversionType.SetRespuestaBienTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRBienesInversionType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaBienType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRBienesInversionType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaBienType: Array_Of_RespuestaBienType);
begin
  FRespuestaLinea := AArray_Of_RespuestaBienType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRBienesInversionType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRFRecibidasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRFRecibidasType.GetRespuestaRecibidaTypeArray(Index: Integer): RespuestaRecibidaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRFRecibidasType.SetRespuestaRecibidaTypeArray(Index: Integer; const Item: RespuestaRecibidaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRFRecibidasType.GetRespuestaRecibidaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRFRecibidasType.SetRespuestaRecibidaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRFRecibidasType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaRecibidaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRFRecibidasType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaRecibidaType: Array_Of_RespuestaRecibidaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaRecibidaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRFRecibidasType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLRVentaBienesConsignaType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRVentaBienesConsignaType.GetRespuestaVentaBienesConsignaType2Array(Index: Integer): RespuestaVentaBienesConsignaType2;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRVentaBienesConsignaType.SetRespuestaVentaBienesConsignaType2Array(Index: Integer; const Item: RespuestaVentaBienesConsignaType2);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRVentaBienesConsignaType.GetRespuestaVentaBienesConsignaType2ArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRVentaBienesConsignaType.SetRespuestaVentaBienesConsignaType2ArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRVentaBienesConsignaType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaVentaBienesConsignaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRVentaBienesConsignaType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaVentaBienesConsignaType: Array_Of_RespuestaVentaBienesConsignaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaVentaBienesConsignaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRVentaBienesConsignaType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

constructor RespuestaLRFEmitidasType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor RespuestaLRFEmitidasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLRFEmitidasType.GetRespuestaExpedidaTypeArray(Index: Integer): RespuestaExpedidaType;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLRFEmitidasType.SetRespuestaExpedidaTypeArray(Index: Integer; const Item: RespuestaExpedidaType);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLRFEmitidasType.GetRespuestaExpedidaTypeArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLRFEmitidasType.SetRespuestaExpedidaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLRFEmitidasType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaExpedidaType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLRFEmitidasType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaExpedidaType: Array_Of_RespuestaExpedidaType);
begin
  FRespuestaLinea := AArray_Of_RespuestaExpedidaType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLRFEmitidasType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RespuestaLROperacionesSegurosType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRespuestaLinea)-1 do
    System.SysUtils.FreeAndNil(FRespuestaLinea[I]);
  System.SetLength(FRespuestaLinea, 0);
  inherited Destroy;
end;

function RespuestaLROperacionesSegurosType.GetRespuestaOperacionesSegurosType2Array(Index: Integer): RespuestaOperacionesSegurosType2;
begin
  Result := FRespuestaLinea[Index];
end;

procedure RespuestaLROperacionesSegurosType.SetRespuestaOperacionesSegurosType2Array(Index: Integer; const Item: RespuestaOperacionesSegurosType2);
begin
   FRespuestaLinea[Index] := Item;
end;

function RespuestaLROperacionesSegurosType.GetRespuestaOperacionesSegurosType2ArrayLength: Integer;
begin
  if Assigned(FRespuestaLinea) then
    Result := System.Length(FRespuestaLinea)
  else
    Result := 0;
end;

procedure RespuestaLROperacionesSegurosType.SetRespuestaOperacionesSegurosType2ArrayLength(Len: Integer);
begin
  System.SetLength(FRespuestaLinea, Len);
end;

function RespuestaLROperacionesSegurosType.GetRespuestaLinea(Index: Integer): Array_Of_RespuestaOperacionesSegurosType;
begin
  Result := FRespuestaLinea;
end;

procedure RespuestaLROperacionesSegurosType.SetRespuestaLinea(Index: Integer; const AArray_Of_RespuestaOperacionesSegurosType: Array_Of_RespuestaOperacionesSegurosType);
begin
  FRespuestaLinea := AArray_Of_RespuestaOperacionesSegurosType;
  FRespuestaLinea_Specified := True;
end;

function RespuestaLROperacionesSegurosType.RespuestaLinea_Specified(Index: Integer): boolean;
begin
  Result := FRespuestaLinea_Specified;
end;

destructor RegistroSii.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  inherited Destroy;
end;

function RegistroSii.GetPeriodoLiquidacion: PeriodoLiquidacion;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RegistroSii.SetPeriodoLiquidacion(const APeriodoLiquidacion: PeriodoLiquidacion);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion;
end;

destructor IDEmisorFactura.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function IDEmisorFactura.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function IDEmisorFactura.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function IDEmisorFactura.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure IDEmisorFactura.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function IDEmisorFactura.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

function DatosPresentacion2Type.GetNIFPresentador: NIFType;
begin
  Result := FNIFPresentador;
end;

procedure DatosPresentacion2Type.SetNIFPresentador(const ANIFType: NIFType);
begin
  FNIFPresentador := ANIFType;
end;

function DatosPresentacion2Type.GetTimestampPresentacion: Timestamp;
begin
  Result := FTimestampPresentacion;
end;

procedure DatosPresentacion2Type.SetTimestampPresentacion(const ATimestamp: Timestamp);
begin
  FTimestampPresentacion := ATimestamp;
end;

function DatosPresentacion2Type.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure DatosPresentacion2Type.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function DatosPresentacion2Type.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RegistroSiiImputacion.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoImputacion);
  inherited Destroy;
end;

function RegistroSiiImputacion.GetPeriodoImputacion: PeriodoImputacion;
begin
  Result := FPeriodoImputacion;
end;

procedure RegistroSiiImputacion.SetPeriodoImputacion(const APeriodoImputacion: PeriodoImputacion);
begin
  FPeriodoImputacion := APeriodoImputacion;
end;

function PersonaFisicaJuridicaUnicaESType.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure PersonaFisicaJuridicaUnicaESType.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function PersonaFisicaJuridicaUnicaESType.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure PersonaFisicaJuridicaUnicaESType.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

destructor ContraparteConsultaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function ContraparteConsultaType.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure ContraparteConsultaType.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function ContraparteConsultaType.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure ContraparteConsultaType.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function ContraparteConsultaType.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function ContraparteConsultaType.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure ContraparteConsultaType.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function ContraparteConsultaType.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

destructor PersonaFisicaJuridicaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function PersonaFisicaJuridicaType.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure PersonaFisicaJuridicaType.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function PersonaFisicaJuridicaType.GetNIFRepresentante(Index: Integer): NIFType;
begin
  Result := FNIFRepresentante;
end;

procedure PersonaFisicaJuridicaType.SetNIFRepresentante(Index: Integer; const ANIFType: NIFType);
begin
  FNIFRepresentante := ANIFType;
  FNIFRepresentante_Specified := True;
end;

function PersonaFisicaJuridicaType.NIFRepresentante_Specified(Index: Integer): boolean;
begin
  Result := FNIFRepresentante_Specified;
end;

function PersonaFisicaJuridicaType.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure PersonaFisicaJuridicaType.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function PersonaFisicaJuridicaType.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function PersonaFisicaJuridicaType.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure PersonaFisicaJuridicaType.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function PersonaFisicaJuridicaType.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

destructor DepositoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDepositario);
  inherited Destroy;
end;

function DepositoType.GetDepositario(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FDepositario;
end;

procedure DepositoType.SetDepositario(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FDepositario := APersonaFisicaJuridicaType;
  FDepositario_Specified := True;
end;

function DepositoType.Depositario_Specified(Index: Integer): boolean;
begin
  Result := FDepositario_Specified;
end;

function DepositoType.GetDireccionAlmacen: TextMax120Type;
begin
  Result := FDireccionAlmacen;
end;

procedure DepositoType.SetDireccionAlmacen(const ATextMax120Type: TextMax120Type);
begin
  FDireccionAlmacen := ATextMax120Type;
end;

destructor IDEmisorFactura2.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function IDEmisorFactura2.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura2.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura2.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura2.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function IDEmisorFactura2.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function IDEmisorFactura2.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure IDEmisorFactura2.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function IDEmisorFactura2.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

destructor IDEmisorFactura3.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function IDEmisorFactura3.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura3.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura3.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura3.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function IDEmisorFactura3.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function IDEmisorFactura3.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure IDEmisorFactura3.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function IDEmisorFactura3.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

function IDEmisorFactura4.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura4.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura4.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura4.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

destructor IDEmisorFactura5.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function IDEmisorFactura5.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura5.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura5.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura5.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function IDEmisorFactura5.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function IDEmisorFactura5.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure IDEmisorFactura5.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function IDEmisorFactura5.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

destructor IDEmisorFactura6.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDOtro);
  inherited Destroy;
end;

function IDEmisorFactura6.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura6.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura6.GetNIF(Index: Integer): NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura6.SetNIF(Index: Integer; const ANIFType: NIFType);
begin
  FNIF := ANIFType;
  FNIF_Specified := True;
end;

function IDEmisorFactura6.NIF_Specified(Index: Integer): boolean;
begin
  Result := FNIF_Specified;
end;

function IDEmisorFactura6.GetIDOtro(Index: Integer): IDOtroType;
begin
  Result := FIDOtro;
end;

procedure IDEmisorFactura6.SetIDOtro(Index: Integer; const AIDOtroType: IDOtroType);
begin
  FIDOtro := AIDOtroType;
  FIDOtro_Specified := True;
end;

function IDEmisorFactura6.IDOtro_Specified(Index: Integer): boolean;
begin
  Result := FIDOtro_Specified;
end;

function PeriodoLiquidacion.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoImputacion.GetEjercicioImputacion: YearType;
begin
  Result := FEjercicioImputacion;
end;

procedure PeriodoImputacion.SetEjercicioImputacion(const AYearType: YearType);
begin
  FEjercicioImputacion := AYearType;
end;

function PeriodoImputacion.GetPeriodoImputacion: TipoPeriodoType;
begin
  Result := FPeriodoImputacion;
end;

procedure PeriodoImputacion.SetPeriodoImputacion(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodoImputacion := ATipoPeriodoType;
end;

function PeriodoLiquidacion2.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion2.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion2.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion2.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion3.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion3.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion3.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion3.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion4.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion4.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion4.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion4.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion5.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion5.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion5.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion5.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion6.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion6.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion6.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion6.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion7.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion7.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion7.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion7.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion8.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion8.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion8.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion8.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion9.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion9.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion9.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion9.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion10.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion10.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion10.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion10.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function PeriodoLiquidacion11.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure PeriodoLiquidacion11.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function PeriodoLiquidacion11.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure PeriodoLiquidacion11.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

destructor ConsultaInformacion.Destroy;
begin
  System.SysUtils.FreeAndNil(FCabecera);
  inherited Destroy;
end;

function ConsultaInformacion.GetCabecera: CabeceraConsultaSii;
begin
  Result := FCabecera;
end;

procedure ConsultaInformacion.SetCabecera(const ACabeceraConsultaSii: CabeceraConsultaSii);
begin
  FCabecera := ACabeceraConsultaSii;
end;

destructor RespuestaConsultaFacturaCobrosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaConsultaFacturaCobrosType.GetIDFactura: IDFacturaExpedidaBCType;
begin
  Result := FIDFactura;
end;

procedure RespuestaConsultaFacturaCobrosType.SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
begin
  FIDFactura := AIDFacturaExpedidaBCType;
end;

function RespuestaConsultaFacturaCobrosType.GetIndicadorPaginacion: IndicadorPaginacionType;
begin
  Result := FIndicadorPaginacion;
end;

procedure RespuestaConsultaFacturaCobrosType.SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
begin
  FIndicadorPaginacion := AIndicadorPaginacionType;
end;

function RespuestaConsultaFacturaCobrosType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaFacturaCobrosType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

function RespuestaConsultaLRVentaBVType.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure RespuestaConsultaLRVentaBVType.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function RespuestaConsultaLRVentaBVType.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure RespuestaConsultaLRVentaBVType.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function RespuestaConsultaLRVentaBVType.GetIndicadorPaginacion: IndicadorPaginacionType;
begin
  Result := FIndicadorPaginacion;
end;

procedure RespuestaConsultaLRVentaBVType.SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
begin
  FIndicadorPaginacion := AIndicadorPaginacionType;
end;

function RespuestaConsultaLRVentaBVType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaLRVentaBVType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

destructor RespuestaConsultaLRVentaBienesConsignaType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna[I]);
  System.SetLength(FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRVentaBienesConsignaType.GetRegistroRespuestaConsultaVentaBienesConsignaTypeArray(Index: Integer): RegistroRespuestaConsultaVentaBienesConsignaType;
begin
  Result := FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna[Index];
end;

procedure RespuestaConsultaLRVentaBienesConsignaType.SetRegistroRespuestaConsultaVentaBienesConsignaTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaVentaBienesConsignaType);
begin
   FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna[Index] := Item;
end;

function RespuestaConsultaLRVentaBienesConsignaType.GetRegistroRespuestaConsultaVentaBienesConsignaTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna) then
    Result := System.Length(FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRVentaBienesConsignaType.SetRegistroRespuestaConsultaVentaBienesConsignaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna, Len);
end;

function RespuestaConsultaLRVentaBienesConsignaType.GetRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer): Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType;
begin
  Result := FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna;
end;

procedure RespuestaConsultaLRVentaBienesConsignaType.SetRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer; const AArray_Of_RegistroRespuestaConsultaVentaBienesConsignaType: Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType);
begin
  FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna := AArray_Of_RegistroRespuestaConsultaVentaBienesConsignaType;
  FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna_Specified := True;
end;

function RespuestaConsultaLRVentaBienesConsignaType.RegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRDetOperacionIntracomunitariaVentasEnConsigna_Specified;
end;

destructor RespuestaConsultaInmueblesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaConsultaInmueblesType.GetIDFactura: IDFacturaExpedidaBCType;
begin
  Result := FIDFactura;
end;

procedure RespuestaConsultaInmueblesType.SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
begin
  FIDFactura := AIDFacturaExpedidaBCType;
end;

function RespuestaConsultaInmueblesType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaInmueblesType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

destructor RespuestaConsultaInmueblesAdicionalesType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaInmueblesAdicionales)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaInmueblesAdicionales[I]);
  System.SetLength(FRegistroRespuestaConsultaInmueblesAdicionales, 0);
  inherited Destroy;
end;

function RespuestaConsultaInmueblesAdicionalesType.GetRegistroRespuestaConsultaInmueblesAdicionalesTypeArray(Index: Integer): RegistroRespuestaConsultaInmueblesAdicionalesType;
begin
  Result := FRegistroRespuestaConsultaInmueblesAdicionales[Index];
end;

procedure RespuestaConsultaInmueblesAdicionalesType.SetRegistroRespuestaConsultaInmueblesAdicionalesTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaInmueblesAdicionalesType);
begin
   FRegistroRespuestaConsultaInmueblesAdicionales[Index] := Item;
end;

function RespuestaConsultaInmueblesAdicionalesType.GetRegistroRespuestaConsultaInmueblesAdicionalesTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaInmueblesAdicionales) then
    Result := System.Length(FRegistroRespuestaConsultaInmueblesAdicionales)
  else
    Result := 0;
end;

procedure RespuestaConsultaInmueblesAdicionalesType.SetRegistroRespuestaConsultaInmueblesAdicionalesTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaInmueblesAdicionales, Len);
end;

function RespuestaConsultaInmueblesAdicionalesType.GetRegistroRespuestaConsultaInmueblesAdicionales(Index: Integer): Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType;
begin
  Result := FRegistroRespuestaConsultaInmueblesAdicionales;
end;

procedure RespuestaConsultaInmueblesAdicionalesType.SetRegistroRespuestaConsultaInmueblesAdicionales(Index: Integer; const AArray_Of_RegistroRespuestaConsultaInmueblesAdicionalesType: Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType);
begin
  FRegistroRespuestaConsultaInmueblesAdicionales := AArray_Of_RegistroRespuestaConsultaInmueblesAdicionalesType;
  FRegistroRespuestaConsultaInmueblesAdicionales_Specified := True;
end;

function RespuestaConsultaInmueblesAdicionalesType.RegistroRespuestaConsultaInmueblesAdicionales_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaInmueblesAdicionales_Specified;
end;

destructor RespuestaConsultaFacturaPagosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaConsultaFacturaPagosType.GetIDFactura: IDFacturaRecibidaNombreBCType;
begin
  Result := FIDFactura;
end;

procedure RespuestaConsultaFacturaPagosType.SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
begin
  FIDFactura := AIDFacturaRecibidaNombreBCType;
end;

function RespuestaConsultaFacturaPagosType.GetIndicadorPaginacion: IndicadorPaginacionType;
begin
  Result := FIndicadorPaginacion;
end;

procedure RespuestaConsultaFacturaPagosType.SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
begin
  FIndicadorPaginacion := AIndicadorPaginacionType;
end;

function RespuestaConsultaFacturaPagosType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaFacturaPagosType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

destructor SuministroInformacion.Destroy;
begin
  System.SysUtils.FreeAndNil(FCabecera);
  inherited Destroy;
end;

function SuministroInformacion.GetCabecera: CabeceraSii;
begin
  Result := FCabecera;
end;

procedure SuministroInformacion.SetCabecera(const ACabeceraSii: CabeceraSii);
begin
  FCabecera := ACabeceraSii;
end;

destructor SuministroInformacionBaja.Destroy;
begin
  System.SysUtils.FreeAndNil(FCabecera);
  inherited Destroy;
end;

function SuministroInformacionBaja.GetCabecera: CabeceraSiiBaja;
begin
  Result := FCabecera;
end;

procedure SuministroInformacionBaja.SetCabecera(const ACabeceraSiiBaja: CabeceraSiiBaja);
begin
  FCabecera := ACabeceraSiiBaja;
end;

function PersonaFisicaJuridicaESType.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure PersonaFisicaJuridicaESType.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function PersonaFisicaJuridicaESType.GetNIFRepresentante(Index: Integer): NIFType;
begin
  Result := FNIFRepresentante;
end;

procedure PersonaFisicaJuridicaESType.SetNIFRepresentante(Index: Integer; const ANIFType: NIFType);
begin
  FNIFRepresentante := ANIFType;
  FNIFRepresentante_Specified := True;
end;

function PersonaFisicaJuridicaESType.NIFRepresentante_Specified(Index: Integer): boolean;
begin
  Result := FNIFRepresentante_Specified;
end;

function PersonaFisicaJuridicaESType.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure PersonaFisicaJuridicaESType.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

function DatosPresentacionType.GetNIFPresentador: NIFType;
begin
  Result := FNIFPresentador;
end;

procedure DatosPresentacionType.SetNIFPresentador(const ANIFType: NIFType);
begin
  FNIFPresentador := ANIFType;
end;

function DatosPresentacionType.GetTimestampPresentacion: Timestamp;
begin
  Result := FTimestampPresentacion;
end;

procedure DatosPresentacionType.SetTimestampPresentacion(const ATimestamp: Timestamp);
begin
  FTimestampPresentacion := ATimestamp;
end;

destructor ConsultaInformacionCliente.Destroy;
begin
  System.SysUtils.FreeAndNil(FCabecera);
  inherited Destroy;
end;

function ConsultaInformacionCliente.GetCabecera: CabeceraConsultaSiiCliente;
begin
  Result := FCabecera;
end;

procedure ConsultaInformacionCliente.SetCabecera(const ACabeceraConsultaSiiCliente: CabeceraConsultaSiiCliente);
begin
  FCabecera := ACabeceraConsultaSiiCliente;
end;

destructor CabeceraConsultaSiiCliente.Destroy;
begin
  System.SysUtils.FreeAndNil(FTitularLRFE);
  inherited Destroy;
end;

function CabeceraConsultaSiiCliente.GetIDVersionSii: VersionSiiType;
begin
  Result := FIDVersionSii;
end;

procedure CabeceraConsultaSiiCliente.SetIDVersionSii(const AVersionSiiType: VersionSiiType);
begin
  FIDVersionSii := AVersionSiiType;
end;

function CabeceraConsultaSiiCliente.GetTitularLRFE: PersonaFisicaJuridicaUnicaESType;
begin
  Result := FTitularLRFE;
end;

procedure CabeceraConsultaSiiCliente.SetTitularLRFE(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FTitularLRFE := APersonaFisicaJuridicaUnicaESType;
end;

destructor CabeceraSii.Destroy;
begin
  System.SysUtils.FreeAndNil(FTitular);
  inherited Destroy;
end;

function CabeceraSii.GetIDVersionSii: VersionSiiType;
begin
  Result := FIDVersionSii;
end;

procedure CabeceraSii.SetIDVersionSii(const AVersionSiiType: VersionSiiType);
begin
  FIDVersionSii := AVersionSiiType;
end;

function CabeceraSii.GetTitular: PersonaFisicaJuridicaESType;
begin
  Result := FTitular;
end;

procedure CabeceraSii.SetTitular(const APersonaFisicaJuridicaESType: PersonaFisicaJuridicaESType);
begin
  FTitular := APersonaFisicaJuridicaESType;
end;

function CabeceraSii.GetTipoComunicacion: ClaveTipoComunicacionType;
begin
  Result := FTipoComunicacion;
end;

procedure CabeceraSii.SetTipoComunicacion(const AClaveTipoComunicacionType: ClaveTipoComunicacionType);
begin
  FTipoComunicacion := AClaveTipoComunicacionType;
end;

destructor CabeceraConsultaSii.Destroy;
begin
  System.SysUtils.FreeAndNil(FTitular);
  inherited Destroy;
end;

function CabeceraConsultaSii.GetIDVersionSii: VersionSiiType;
begin
  Result := FIDVersionSii;
end;

procedure CabeceraConsultaSii.SetIDVersionSii(const AVersionSiiType: VersionSiiType);
begin
  FIDVersionSii := AVersionSiiType;
end;

function CabeceraConsultaSii.GetTitular: PersonaFisicaJuridicaUnicaESType;
begin
  Result := FTitular;
end;

procedure CabeceraConsultaSii.SetTitular(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FTitular := APersonaFisicaJuridicaUnicaESType;
end;

destructor CabeceraSiiBaja.Destroy;
begin
  System.SysUtils.FreeAndNil(FTitular);
  inherited Destroy;
end;

function CabeceraSiiBaja.GetIDVersionSii: VersionSiiType;
begin
  Result := FIDVersionSii;
end;

procedure CabeceraSiiBaja.SetIDVersionSii(const AVersionSiiType: VersionSiiType);
begin
  FIDVersionSii := AVersionSiiType;
end;

function CabeceraSiiBaja.GetTitular: PersonaFisicaJuridicaESType;
begin
  Result := FTitular;
end;

procedure CabeceraSiiBaja.SetTitular(const APersonaFisicaJuridicaESType: PersonaFisicaJuridicaESType);
begin
  FTitular := APersonaFisicaJuridicaESType;
end;

function IDEmisorFactura7.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura7.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

function IDEmisorFactura8.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura8.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

destructor FacturasAgrupadas2.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FIDFacturaAgrupada)-1 do
    System.SysUtils.FreeAndNil(FIDFacturaAgrupada[I]);
  System.SetLength(FIDFacturaAgrupada, 0);
  inherited Destroy;
end;

function FacturasAgrupadas2.GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;
begin
  Result := FIDFacturaAgrupada[Index];
end;

procedure FacturasAgrupadas2.SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
begin
   FIDFacturaAgrupada[Index] := Item;
end;

function FacturasAgrupadas2.GetIDFacturaARTypeArrayLength: Integer;
begin
  if Assigned(FIDFacturaAgrupada) then
    Result := System.Length(FIDFacturaAgrupada)
  else
    Result := 0;
end;

procedure FacturasAgrupadas2.SetIDFacturaARTypeArrayLength(Len: Integer);
begin
  System.SetLength(FIDFacturaAgrupada, Len);
end;

function FacturasAgrupadas2.GetIDFacturaAgrupada(Index: Integer): Array_Of_IDFacturaARType;
begin
  Result := FIDFacturaAgrupada;
end;

procedure FacturasAgrupadas2.SetIDFacturaAgrupada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
begin
  FIDFacturaAgrupada := AArray_Of_IDFacturaARType;
end;

destructor FacturasRectificadas2.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FIDFacturaRectificada)-1 do
    System.SysUtils.FreeAndNil(FIDFacturaRectificada[I]);
  System.SetLength(FIDFacturaRectificada, 0);
  inherited Destroy;
end;

function FacturasRectificadas2.GetIDFacturaARTypeArray(Index: Integer): IDFacturaARType;
begin
  Result := FIDFacturaRectificada[Index];
end;

procedure FacturasRectificadas2.SetIDFacturaARTypeArray(Index: Integer; const Item: IDFacturaARType);
begin
   FIDFacturaRectificada[Index] := Item;
end;

function FacturasRectificadas2.GetIDFacturaARTypeArrayLength: Integer;
begin
  if Assigned(FIDFacturaRectificada) then
    Result := System.Length(FIDFacturaRectificada)
  else
    Result := 0;
end;

procedure FacturasRectificadas2.SetIDFacturaARTypeArrayLength(Len: Integer);
begin
  System.SetLength(FIDFacturaRectificada, Len);
end;

function FacturasRectificadas2.GetIDFacturaRectificada(Index: Integer): Array_Of_IDFacturaARType;
begin
  Result := FIDFacturaRectificada;
end;

procedure FacturasRectificadas2.SetIDFacturaRectificada(Index: Integer; const AArray_Of_IDFacturaARType: Array_Of_IDFacturaARType);
begin
  FIDFacturaRectificada := AArray_Of_IDFacturaARType;
end;

function RangoFechaPresentacionType.GetDesde(Index: Integer): fecha;
begin
  Result := FDesde;
end;

procedure RangoFechaPresentacionType.SetDesde(Index: Integer; const Afecha: fecha);
begin
  FDesde := Afecha;
  FDesde_Specified := True;
end;

function RangoFechaPresentacionType.Desde_Specified(Index: Integer): boolean;
begin
  Result := FDesde_Specified;
end;

function RangoFechaPresentacionType.GetHasta(Index: Integer): fecha;
begin
  Result := FHasta;
end;

procedure RangoFechaPresentacionType.SetHasta(Index: Integer; const Afecha: fecha);
begin
  FHasta := Afecha;
  FHasta_Specified := True;
end;

function RangoFechaPresentacionType.Hasta_Specified(Index: Integer): boolean;
begin
  Result := FHasta_Specified;
end;

function RangoFechaType.GetDesde(Index: Integer): fecha;
begin
  Result := FDesde;
end;

procedure RangoFechaType.SetDesde(Index: Integer; const Afecha: fecha);
begin
  FDesde := Afecha;
  FDesde_Specified := True;
end;

function RangoFechaType.Desde_Specified(Index: Integer): boolean;
begin
  Result := FDesde_Specified;
end;

function RangoFechaType.GetHasta(Index: Integer): fecha;
begin
  Result := FHasta;
end;

procedure RangoFechaType.SetHasta(Index: Integer; const Afecha: fecha);
begin
  FHasta := Afecha;
  FHasta_Specified := True;
end;

function RangoFechaType.Hasta_Specified(Index: Integer): boolean;
begin
  Result := FHasta_Specified;
end;

function DesgloseRectificacionType.GetBaseRectificada: ImporteSgn12_2Type;
begin
  Result := FBaseRectificada;
end;

procedure DesgloseRectificacionType.SetBaseRectificada(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseRectificada := AImporteSgn12_2Type;
end;

function DesgloseRectificacionType.GetCuotaRectificada: ImporteSgn12_2Type;
begin
  Result := FCuotaRectificada;
end;

procedure DesgloseRectificacionType.SetCuotaRectificada(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRectificada := AImporteSgn12_2Type;
end;

function DesgloseRectificacionType.GetCuotaRecargoRectificado(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaRecargoRectificado;
end;

procedure DesgloseRectificacionType.SetCuotaRecargoRectificado(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRecargoRectificado := AImporteSgn12_2Type;
  FCuotaRecargoRectificado_Specified := True;
end;

function DesgloseRectificacionType.CuotaRecargoRectificado_Specified(Index: Integer): boolean;
begin
  Result := FCuotaRecargoRectificado_Specified;
end;

function NoSujetaType.GetImportePorArticulos7_14_Otros(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImportePorArticulos7_14_Otros;
end;

procedure NoSujetaType.SetImportePorArticulos7_14_Otros(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImportePorArticulos7_14_Otros := AImporteSgn12_2Type;
  FImportePorArticulos7_14_Otros_Specified := True;
end;

function NoSujetaType.ImportePorArticulos7_14_Otros_Specified(Index: Integer): boolean;
begin
  Result := FImportePorArticulos7_14_Otros_Specified;
end;

function NoSujetaType.GetImporteTAIReglasLocalizacion(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTAIReglasLocalizacion;
end;

procedure NoSujetaType.SetImporteTAIReglasLocalizacion(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTAIReglasLocalizacion := AImporteSgn12_2Type;
  FImporteTAIReglasLocalizacion_Specified := True;
end;

function NoSujetaType.ImporteTAIReglasLocalizacion_Specified(Index: Integer): boolean;
begin
  Result := FImporteTAIReglasLocalizacion_Specified;
end;

function DetalleIVAEmitidaPrestacionType.GetTipoImpositivo(Index: Integer): Tipo2_2Type;
begin
  Result := FTipoImpositivo;
end;

procedure DetalleIVAEmitidaPrestacionType.SetTipoImpositivo(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoImpositivo := ATipo2_2Type;
  FTipoImpositivo_Specified := True;
end;

function DetalleIVAEmitidaPrestacionType.TipoImpositivo_Specified(Index: Integer): boolean;
begin
  Result := FTipoImpositivo_Specified;
end;

function DetalleIVAEmitidaPrestacionType.GetBaseImponible: ImporteSgn12_2Type;
begin
  Result := FBaseImponible;
end;

procedure DetalleIVAEmitidaPrestacionType.SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponible := AImporteSgn12_2Type;
end;

function DetalleIVAEmitidaPrestacionType.GetCuotaRepercutida(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaRepercutida;
end;

procedure DetalleIVAEmitidaPrestacionType.SetCuotaRepercutida(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRepercutida := AImporteSgn12_2Type;
  FCuotaRepercutida_Specified := True;
end;

function DetalleIVAEmitidaPrestacionType.CuotaRepercutida_Specified(Index: Integer): boolean;
begin
  Result := FCuotaRepercutida_Specified;
end;

function DetalleIVARecibidaType.GetTipoImpositivo(Index: Integer): Tipo2_2Type;
begin
  Result := FTipoImpositivo;
end;

procedure DetalleIVARecibidaType.SetTipoImpositivo(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoImpositivo := ATipo2_2Type;
  FTipoImpositivo_Specified := True;
end;

function DetalleIVARecibidaType.TipoImpositivo_Specified(Index: Integer): boolean;
begin
  Result := FTipoImpositivo_Specified;
end;

function DetalleIVARecibidaType.GetBaseImponible: ImporteSgn12_2Type;
begin
  Result := FBaseImponible;
end;

procedure DetalleIVARecibidaType.SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponible := AImporteSgn12_2Type;
end;

function DetalleIVARecibidaType.GetCuotaSoportada(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaSoportada;
end;

procedure DetalleIVARecibidaType.SetCuotaSoportada(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaSoportada := AImporteSgn12_2Type;
  FCuotaSoportada_Specified := True;
end;

function DetalleIVARecibidaType.CuotaSoportada_Specified(Index: Integer): boolean;
begin
  Result := FCuotaSoportada_Specified;
end;

function DetalleIVARecibidaType.GetTipoRecargoEquivalencia(Index: Integer): Tipo2_2Type;
begin
  Result := FTipoRecargoEquivalencia;
end;

procedure DetalleIVARecibidaType.SetTipoRecargoEquivalencia(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoRecargoEquivalencia := ATipo2_2Type;
  FTipoRecargoEquivalencia_Specified := True;
end;

function DetalleIVARecibidaType.TipoRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FTipoRecargoEquivalencia_Specified;
end;

function DetalleIVARecibidaType.GetCuotaRecargoEquivalencia(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaRecargoEquivalencia;
end;

procedure DetalleIVARecibidaType.SetCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRecargoEquivalencia := AImporteSgn12_2Type;
  FCuotaRecargoEquivalencia_Specified := True;
end;

function DetalleIVARecibidaType.CuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FCuotaRecargoEquivalencia_Specified;
end;

function DetalleIVARecibidaType.GetPorcentCompensacionREAGYP(Index: Integer): Tipo2_2Type;
begin
  Result := FPorcentCompensacionREAGYP;
end;

procedure DetalleIVARecibidaType.SetPorcentCompensacionREAGYP(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FPorcentCompensacionREAGYP := ATipo2_2Type;
  FPorcentCompensacionREAGYP_Specified := True;
end;

function DetalleIVARecibidaType.PorcentCompensacionREAGYP_Specified(Index: Integer): boolean;
begin
  Result := FPorcentCompensacionREAGYP_Specified;
end;

function DetalleIVARecibidaType.GetImporteCompensacionREAGYP(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteCompensacionREAGYP;
end;

procedure DetalleIVARecibidaType.SetImporteCompensacionREAGYP(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteCompensacionREAGYP := AImporteSgn12_2Type;
  FImporteCompensacionREAGYP_Specified := True;
end;

function DetalleIVARecibidaType.ImporteCompensacionREAGYP_Specified(Index: Integer): boolean;
begin
  Result := FImporteCompensacionREAGYP_Specified;
end;

function DetalleIVARecibidaType.GetBienInversion(Index: Integer): BienInversionType;
begin
  Result := FBienInversion;
end;

procedure DetalleIVARecibidaType.SetBienInversion(Index: Integer; const ABienInversionType: BienInversionType);
begin
  FBienInversion := ABienInversionType;
  FBienInversion_Specified := True;
end;

function DetalleIVARecibidaType.BienInversion_Specified(Index: Integer): boolean;
begin
  Result := FBienInversion_Specified;
end;

function DetalleExentaType.GetCausaExencion(Index: Integer): CausaExencionType;
begin
  Result := FCausaExencion;
end;

procedure DetalleExentaType.SetCausaExencion(Index: Integer; const ACausaExencionType: CausaExencionType);
begin
  FCausaExencion := ACausaExencionType;
  FCausaExencion_Specified := True;
end;

function DetalleExentaType.CausaExencion_Specified(Index: Integer): boolean;
begin
  Result := FCausaExencion_Specified;
end;

function DetalleExentaType.GetBaseImponible: ImporteSgn12_2Type;
begin
  Result := FBaseImponible;
end;

procedure DetalleExentaType.SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponible := AImporteSgn12_2Type;
end;

function DetalleIVAEmitidaType.GetTipoImpositivo(Index: Integer): Tipo2_2Type;
begin
  Result := FTipoImpositivo;
end;

procedure DetalleIVAEmitidaType.SetTipoImpositivo(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoImpositivo := ATipo2_2Type;
  FTipoImpositivo_Specified := True;
end;

function DetalleIVAEmitidaType.TipoImpositivo_Specified(Index: Integer): boolean;
begin
  Result := FTipoImpositivo_Specified;
end;

function DetalleIVAEmitidaType.GetBaseImponible: ImporteSgn12_2Type;
begin
  Result := FBaseImponible;
end;

procedure DetalleIVAEmitidaType.SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponible := AImporteSgn12_2Type;
end;

function DetalleIVAEmitidaType.GetCuotaRepercutida(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaRepercutida;
end;

procedure DetalleIVAEmitidaType.SetCuotaRepercutida(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRepercutida := AImporteSgn12_2Type;
  FCuotaRepercutida_Specified := True;
end;

function DetalleIVAEmitidaType.CuotaRepercutida_Specified(Index: Integer): boolean;
begin
  Result := FCuotaRepercutida_Specified;
end;

function DetalleIVAEmitidaType.GetTipoRecargoEquivalencia(Index: Integer): Tipo2_2Type;
begin
  Result := FTipoRecargoEquivalencia;
end;

procedure DetalleIVAEmitidaType.SetTipoRecargoEquivalencia(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoRecargoEquivalencia := ATipo2_2Type;
  FTipoRecargoEquivalencia_Specified := True;
end;

function DetalleIVAEmitidaType.TipoRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FTipoRecargoEquivalencia_Specified;
end;

function DetalleIVAEmitidaType.GetCuotaRecargoEquivalencia(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaRecargoEquivalencia;
end;

procedure DetalleIVAEmitidaType.SetCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRecargoEquivalencia := AImporteSgn12_2Type;
  FCuotaRecargoEquivalencia_Specified := True;
end;

function DetalleIVAEmitidaType.CuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FCuotaRecargoEquivalencia_Specified;
end;

function DetalleIVARecibida2Type.GetTipoImpositivo: Tipo2_2Type;
begin
  Result := FTipoImpositivo;
end;

procedure DetalleIVARecibida2Type.SetTipoImpositivo(const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoImpositivo := ATipo2_2Type;
end;

function DetalleIVARecibida2Type.GetBaseImponible: ImporteSgn12_2Type;
begin
  Result := FBaseImponible;
end;

procedure DetalleIVARecibida2Type.SetBaseImponible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponible := AImporteSgn12_2Type;
end;

function DetalleIVARecibida2Type.GetCuotaSoportada: ImporteSgn12_2Type;
begin
  Result := FCuotaSoportada;
end;

procedure DetalleIVARecibida2Type.SetCuotaSoportada(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaSoportada := AImporteSgn12_2Type;
end;

function DetalleIVARecibida2Type.GetTipoRecargoEquivalencia(Index: Integer): Tipo2_2Type;
begin
  Result := FTipoRecargoEquivalencia;
end;

procedure DetalleIVARecibida2Type.SetTipoRecargoEquivalencia(Index: Integer; const ATipo2_2Type: Tipo2_2Type);
begin
  FTipoRecargoEquivalencia := ATipo2_2Type;
  FTipoRecargoEquivalencia_Specified := True;
end;

function DetalleIVARecibida2Type.TipoRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FTipoRecargoEquivalencia_Specified;
end;

function DetalleIVARecibida2Type.GetCuotaRecargoEquivalencia(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FCuotaRecargoEquivalencia;
end;

procedure DetalleIVARecibida2Type.SetCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaRecargoEquivalencia := AImporteSgn12_2Type;
  FCuotaRecargoEquivalencia_Specified := True;
end;

function DetalleIVARecibida2Type.CuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FCuotaRecargoEquivalencia_Specified;
end;

function DetalleIVARecibida2Type.GetBienInversion(Index: Integer): BienInversionType;
begin
  Result := FBienInversion;
end;

procedure DetalleIVARecibida2Type.SetBienInversion(Index: Integer; const ABienInversionType: BienInversionType);
begin
  FBienInversion := ABienInversionType;
  FBienInversion_Specified := True;
end;

function DetalleIVARecibida2Type.BienInversion_Specified(Index: Integer): boolean;
begin
  Result := FBienInversion_Specified;
end;

function InfoExpedicionRecepcionType.GetValorBienes(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FValorBienes;
end;

procedure InfoExpedicionRecepcionType.SetValorBienes(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FValorBienes := AImporteSgn12_2Type;
  FValorBienes_Specified := True;
end;

function InfoExpedicionRecepcionType.ValorBienes_Specified(Index: Integer): boolean;
begin
  Result := FValorBienes_Specified;
end;

function InfoExpedicionRecepcionType.GetEmPartida(Index: Integer): CountryMiembroType;
begin
  Result := FEmPartida;
end;

procedure InfoExpedicionRecepcionType.SetEmPartida(Index: Integer; const ACountryMiembroType: CountryMiembroType);
begin
  FEmPartida := ACountryMiembroType;
  FEmPartida_Specified := True;
end;

function InfoExpedicionRecepcionType.EmPartida_Specified(Index: Integer): boolean;
begin
  Result := FEmPartida_Specified;
end;

function InfoExpedicionRecepcionType.GetEmLlegada(Index: Integer): CountryMiembroType;
begin
  Result := FEmLlegada;
end;

procedure InfoExpedicionRecepcionType.SetEmLlegada(Index: Integer; const ACountryMiembroType: CountryMiembroType);
begin
  FEmLlegada := ACountryMiembroType;
  FEmLlegada_Specified := True;
end;

function InfoExpedicionRecepcionType.EmLlegada_Specified(Index: Integer): boolean;
begin
  Result := FEmLlegada_Specified;
end;

function InfoExpedicionRecepcionType.GetFechaExpedicion(Index: Integer): fecha;
begin
  Result := FFechaExpedicion;
end;

procedure InfoExpedicionRecepcionType.SetFechaExpedicion(Index: Integer; const Afecha: fecha);
begin
  FFechaExpedicion := Afecha;
  FFechaExpedicion_Specified := True;
end;

function InfoExpedicionRecepcionType.FechaExpedicion_Specified(Index: Integer): boolean;
begin
  Result := FFechaExpedicion_Specified;
end;

function InfoExpedicionRecepcionType.GetFechaLlegada(Index: Integer): fecha;
begin
  Result := FFechaLlegada;
end;

procedure InfoExpedicionRecepcionType.SetFechaLlegada(Index: Integer; const Afecha: fecha);
begin
  FFechaLlegada := Afecha;
  FFechaLlegada_Specified := True;
end;

function InfoExpedicionRecepcionType.FechaLlegada_Specified(Index: Integer): boolean;
begin
  Result := FFechaLlegada_Specified;
end;

function InfoExpedicionRecepcionType.GetCantidad: TextMax120Type;
begin
  Result := FCantidad;
end;

procedure InfoExpedicionRecepcionType.SetCantidad(const ATextMax120Type: TextMax120Type);
begin
  FCantidad := ATextMax120Type;
end;

function InfoExpedicionRecepcionType.GetDescripBienes: TextMax120Type;
begin
  Result := FDescripBienes;
end;

procedure InfoExpedicionRecepcionType.SetDescripBienes(const ATextMax120Type: TextMax120Type);
begin
  FDescripBienes := ATextMax120Type;
end;

function InfoExpedicionRecepcionType.GetFechaSustitucion(Index: Integer): fecha;
begin
  Result := FFechaSustitucion;
end;

procedure InfoExpedicionRecepcionType.SetFechaSustitucion(Index: Integer; const Afecha: fecha);
begin
  FFechaSustitucion := Afecha;
  FFechaSustitucion_Specified := True;
end;

function InfoExpedicionRecepcionType.FechaSustitucion_Specified(Index: Integer): boolean;
begin
  Result := FFechaSustitucion_Specified;
end;

destructor DestinoFinalExpedRecepType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDestinatarioFinal);
  inherited Destroy;
end;

function DestinoFinalExpedRecepType.GetDescripBienes: TextMax120Type;
begin
  Result := FDescripBienes;
end;

procedure DestinoFinalExpedRecepType.SetDescripBienes(const ATextMax120Type: TextMax120Type);
begin
  FDescripBienes := ATextMax120Type;
end;

function DestinoFinalExpedRecepType.GetCantidad: TextMax120Type;
begin
  Result := FCantidad;
end;

procedure DestinoFinalExpedRecepType.SetCantidad(const ATextMax120Type: TextMax120Type);
begin
  FCantidad := ATextMax120Type;
end;

function DestinoFinalExpedRecepType.GetFechaOpDeclarada: fecha;
begin
  Result := FFechaOpDeclarada;
end;

procedure DestinoFinalExpedRecepType.SetFechaOpDeclarada(const Afecha: fecha);
begin
  FFechaOpDeclarada := Afecha;
end;

function DestinoFinalExpedRecepType.GetDestinatarioFinal(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FDestinatarioFinal;
end;

procedure DestinoFinalExpedRecepType.SetDestinatarioFinal(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FDestinatarioFinal := APersonaFisicaJuridicaType;
  FDestinatarioFinal_Specified := True;
end;

function DestinoFinalExpedRecepType.DestinatarioFinal_Specified(Index: Integer): boolean;
begin
  Result := FDestinatarioFinal_Specified;
end;

function DestinoFinalExpedRecepType.GetBaseImponibleValor: ImporteSgn12_2Type;
begin
  Result := FBaseImponibleValor;
end;

procedure DestinoFinalExpedRecepType.SetBaseImponibleValor(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponibleValor := AImporteSgn12_2Type;
end;

function DestinoFinalExpedRecepType.GetPrecioUnitario(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FPrecioUnitario;
end;

procedure DestinoFinalExpedRecepType.SetPrecioUnitario(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FPrecioUnitario := AImporteSgn12_2Type;
  FPrecioUnitario_Specified := True;
end;

function DestinoFinalExpedRecepType.PrecioUnitario_Specified(Index: Integer): boolean;
begin
  Result := FPrecioUnitario_Specified;
end;

function DatosPagoCobroType.GetFecha: fecha;
begin
  Result := FFecha;
end;

procedure DatosPagoCobroType.SetFecha(const Afecha: fecha);
begin
  FFecha := Afecha;
end;

function DatosPagoCobroType.GetImporte: ImporteSgn12_2Type;
begin
  Result := FImporte;
end;

procedure DatosPagoCobroType.SetImporte(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporte := AImporteSgn12_2Type;
end;

function DatosPagoCobroType.GetMedio: MedioPagoType;
begin
  Result := FMedio;
end;

procedure DatosPagoCobroType.SetMedio(const AMedioPagoType: MedioPagoType);
begin
  FMedio := AMedioPagoType;
end;

function DatosPagoCobroType.GetCuenta_O_Medio(Index: Integer): TextMax34Type;
begin
  Result := FCuenta_O_Medio;
end;

procedure DatosPagoCobroType.SetCuenta_O_Medio(Index: Integer; const ATextMax34Type: TextMax34Type);
begin
  FCuenta_O_Medio := ATextMax34Type;
  FCuenta_O_Medio_Specified := True;
end;

function DatosPagoCobroType.Cuenta_O_Medio_Specified(Index: Integer): boolean;
begin
  Result := FCuenta_O_Medio_Specified;
end;

destructor RespuestaCobrosMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function RespuestaCobrosMetalicoType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaCobrosMetalicoType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaCobrosMetalicoType.GetImporteTotal: ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure RespuestaCobrosMetalicoType.SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
end;

function RespuestaCobrosMetalicoType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure RespuestaCobrosMetalicoType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function RespuestaCobrosMetalicoType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

function IdRegistroDeclaradoType.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure IdRegistroDeclaradoType.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function IdRegistroDeclaradoType.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure IdRegistroDeclaradoType.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function IdRegistroDeclaradoType.GetIdRegistro: TextMax60Type;
begin
  Result := FIdRegistro;
end;

procedure IdRegistroDeclaradoType.SetIdRegistro(const ATextMax60Type: TextMax60Type);
begin
  FIdRegistro := ATextMax60Type;
end;

function IdRegistroExpInicialType.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure IdRegistroExpInicialType.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function IdRegistroExpInicialType.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure IdRegistroExpInicialType.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function IdRegistroExpInicialType.GetIdExpInicial: TextMax60Type;
begin
  Result := FIdExpInicial;
end;

procedure IdRegistroExpInicialType.SetIdExpInicial(const ATextMax60Type: TextMax60Type);
begin
  FIdExpInicial := ATextMax60Type;
end;

function ClavePaginacion.GetIdRegistro: TextMax60Type;
begin
  Result := FIdRegistro;
end;

procedure ClavePaginacion.SetIdRegistro(const ATextMax60Type: TextMax60Type);
begin
  FIdRegistro := ATextMax60Type;
end;

destructor LRBajaVentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIdRegistroDeclarado);
  inherited Destroy;
end;

function LRBajaVentaBienesConsignaType.GetIdRegistroDeclarado: IdRegistroDeclaradoType;
begin
  Result := FIdRegistroDeclarado;
end;

procedure LRBajaVentaBienesConsignaType.SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
begin
  FIdRegistroDeclarado := AIdRegistroDeclaradoType;
end;

function LRBajaVentaBienesConsignaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure LRBajaVentaBienesConsignaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function LRBajaVentaBienesConsignaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

destructor BienDeInversionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function BienDeInversionType.GetIdentificacionBien: TextMax40Type;
begin
  Result := FIdentificacionBien;
end;

procedure BienDeInversionType.SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionBien := ATextMax40Type;
end;

function BienDeInversionType.GetFechaInicioUtilizacion: fecha;
begin
  Result := FFechaInicioUtilizacion;
end;

procedure BienDeInversionType.SetFechaInicioUtilizacion(const Afecha: fecha);
begin
  FFechaInicioUtilizacion := Afecha;
end;

function BienDeInversionType.GetProrrataAnualDefinitiva: Tipo2_2Type;
begin
  Result := FProrrataAnualDefinitiva;
end;

procedure BienDeInversionType.SetProrrataAnualDefinitiva(const ATipo2_2Type: Tipo2_2Type);
begin
  FProrrataAnualDefinitiva := ATipo2_2Type;
end;

function BienDeInversionType.GetRegularizacionAnualDeduccion(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FRegularizacionAnualDeduccion;
end;

procedure BienDeInversionType.SetRegularizacionAnualDeduccion(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FRegularizacionAnualDeduccion := AImporteSgn12_2Type;
  FRegularizacionAnualDeduccion_Specified := True;
end;

function BienDeInversionType.RegularizacionAnualDeduccion_Specified(Index: Integer): boolean;
begin
  Result := FRegularizacionAnualDeduccion_Specified;
end;

function BienDeInversionType.GetIdentificacionEntrega(Index: Integer): TextMax40Type;
begin
  Result := FIdentificacionEntrega;
end;

procedure BienDeInversionType.SetIdentificacionEntrega(Index: Integer; const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionEntrega := ATextMax40Type;
  FIdentificacionEntrega_Specified := True;
end;

function BienDeInversionType.IdentificacionEntrega_Specified(Index: Integer): boolean;
begin
  Result := FIdentificacionEntrega_Specified;
end;

function BienDeInversionType.GetRegularizacionDeduccionEfectuada(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FRegularizacionDeduccionEfectuada;
end;

procedure BienDeInversionType.SetRegularizacionDeduccionEfectuada(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FRegularizacionDeduccionEfectuada := AImporteSgn12_2Type;
  FRegularizacionDeduccionEfectuada_Specified := True;
end;

function BienDeInversionType.RegularizacionDeduccionEfectuada_Specified(Index: Integer): boolean;
begin
  Result := FRegularizacionDeduccionEfectuada_Specified;
end;

function BienDeInversionType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure BienDeInversionType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function BienDeInversionType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function BienDeInversionType.GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
begin
  Result := FNumRegistroAcuerdoFacturacion;
end;

procedure BienDeInversionType.SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
begin
  FNumRegistroAcuerdoFacturacion := ATextMax15Type;
  FNumRegistroAcuerdoFacturacion_Specified := True;
end;

function BienDeInversionType.NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
begin
  Result := FNumRegistroAcuerdoFacturacion_Specified;
end;

function BienDeInversionType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure BienDeInversionType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function BienDeInversionType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

destructor FacturaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFacturasAgrupadas);
  System.SysUtils.FreeAndNil(FFacturasRectificadas);
  System.SysUtils.FreeAndNil(FImporteRectificacion);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function FacturaType.GetTipoFactura: ClaveTipoFacturaType;
begin
  Result := FTipoFactura;
end;

procedure FacturaType.SetTipoFactura(const AClaveTipoFacturaType: ClaveTipoFacturaType);
begin
  FTipoFactura := AClaveTipoFacturaType;
end;

function FacturaType.GetTipoRectificativa(Index: Integer): ClaveTipoRectificativaType;
begin
  Result := FTipoRectificativa;
end;

procedure FacturaType.SetTipoRectificativa(Index: Integer; const AClaveTipoRectificativaType: ClaveTipoRectificativaType);
begin
  FTipoRectificativa := AClaveTipoRectificativaType;
  FTipoRectificativa_Specified := True;
end;

function FacturaType.TipoRectificativa_Specified(Index: Integer): boolean;
begin
  Result := FTipoRectificativa_Specified;
end;

function FacturaType.GetFacturasAgrupadas(Index: Integer): FacturasAgrupadas2;
begin
  Result := FFacturasAgrupadas;
end;

procedure FacturaType.SetFacturasAgrupadas(Index: Integer; const AFacturasAgrupadas2: FacturasAgrupadas2);
begin
  FFacturasAgrupadas := AFacturasAgrupadas2;
  FFacturasAgrupadas_Specified := True;
end;

function FacturaType.FacturasAgrupadas_Specified(Index: Integer): boolean;
begin
  Result := FFacturasAgrupadas_Specified;
end;

function FacturaType.GetFacturasRectificadas(Index: Integer): FacturasRectificadas2;
begin
  Result := FFacturasRectificadas;
end;

procedure FacturaType.SetFacturasRectificadas(Index: Integer; const AFacturasRectificadas2: FacturasRectificadas2);
begin
  FFacturasRectificadas := AFacturasRectificadas2;
  FFacturasRectificadas_Specified := True;
end;

function FacturaType.FacturasRectificadas_Specified(Index: Integer): boolean;
begin
  Result := FFacturasRectificadas_Specified;
end;

function FacturaType.GetImporteRectificacion(Index: Integer): DesgloseRectificacionType;
begin
  Result := FImporteRectificacion;
end;

procedure FacturaType.SetImporteRectificacion(Index: Integer; const ADesgloseRectificacionType: DesgloseRectificacionType);
begin
  FImporteRectificacion := ADesgloseRectificacionType;
  FImporteRectificacion_Specified := True;
end;

function FacturaType.ImporteRectificacion_Specified(Index: Integer): boolean;
begin
  Result := FImporteRectificacion_Specified;
end;

function FacturaType.GetFechaOperacion(Index: Integer): fecha;
begin
  Result := FFechaOperacion;
end;

procedure FacturaType.SetFechaOperacion(Index: Integer; const Afecha: fecha);
begin
  FFechaOperacion := Afecha;
  FFechaOperacion_Specified := True;
end;

function FacturaType.FechaOperacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaOperacion_Specified;
end;

function FacturaType.GetClaveRegimenEspecialOTrascendencia: IdOperacionesTrascendenciaTributariaType;
begin
  Result := FClaveRegimenEspecialOTrascendencia;
end;

procedure FacturaType.SetClaveRegimenEspecialOTrascendencia(const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
begin
  FClaveRegimenEspecialOTrascendencia := AIdOperacionesTrascendenciaTributariaType;
end;

function FacturaType.GetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer): IdOperacionesTrascendenciaTributariaType;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional1;
end;

procedure FacturaType.SetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
begin
  FClaveRegimenEspecialOTrascendenciaAdicional1 := AIdOperacionesTrascendenciaTributariaType;
  FClaveRegimenEspecialOTrascendenciaAdicional1_Specified := True;
end;

function FacturaType.ClaveRegimenEspecialOTrascendenciaAdicional1_Specified(Index: Integer): boolean;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional1_Specified;
end;

function FacturaType.GetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer): IdOperacionesTrascendenciaTributariaType;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional2;
end;

procedure FacturaType.SetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
begin
  FClaveRegimenEspecialOTrascendenciaAdicional2 := AIdOperacionesTrascendenciaTributariaType;
  FClaveRegimenEspecialOTrascendenciaAdicional2_Specified := True;
end;

function FacturaType.ClaveRegimenEspecialOTrascendenciaAdicional2_Specified(Index: Integer): boolean;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional2_Specified;
end;

function FacturaType.GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
begin
  Result := FNumRegistroAcuerdoFacturacion;
end;

procedure FacturaType.SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
begin
  FNumRegistroAcuerdoFacturacion := ATextMax15Type;
  FNumRegistroAcuerdoFacturacion_Specified := True;
end;

function FacturaType.NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
begin
  Result := FNumRegistroAcuerdoFacturacion_Specified;
end;

function FacturaType.GetImporteTotal(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure FacturaType.SetImporteTotal(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
  FImporteTotal_Specified := True;
end;

function FacturaType.ImporteTotal_Specified(Index: Integer): boolean;
begin
  Result := FImporteTotal_Specified;
end;

function FacturaType.GetBaseImponibleACoste(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FBaseImponibleACoste;
end;

procedure FacturaType.SetBaseImponibleACoste(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponibleACoste := AImporteSgn12_2Type;
  FBaseImponibleACoste_Specified := True;
end;

function FacturaType.BaseImponibleACoste_Specified(Index: Integer): boolean;
begin
  Result := FBaseImponibleACoste_Specified;
end;

function FacturaType.GetDescripcionOperacion: TextMax500Type;
begin
  Result := FDescripcionOperacion;
end;

procedure FacturaType.SetDescripcionOperacion(const ATextMax500Type: TextMax500Type);
begin
  FDescripcionOperacion := ATextMax500Type;
end;

function FacturaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure FacturaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function FacturaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function FacturaType.GetFacturaSimplificadaArticulos7_2_7_3(Index: Integer): SimplificadaCualificadaType;
begin
  Result := FFacturaSimplificadaArticulos7_2_7_3;
end;

procedure FacturaType.SetFacturaSimplificadaArticulos7_2_7_3(Index: Integer; const ASimplificadaCualificadaType: SimplificadaCualificadaType);
begin
  FFacturaSimplificadaArticulos7_2_7_3 := ASimplificadaCualificadaType;
  FFacturaSimplificadaArticulos7_2_7_3_Specified := True;
end;

function FacturaType.FacturaSimplificadaArticulos7_2_7_3_Specified(Index: Integer): boolean;
begin
  Result := FFacturaSimplificadaArticulos7_2_7_3_Specified;
end;

function FacturaType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure FacturaType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function FacturaType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

function FacturaType.GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia;
end;

procedure FacturaType.SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
begin
  FRegPrevioGGEEoREDEMEoCompetencia := ARegPrevioGGEEoREDEMEoCompetenciaType;
  FRegPrevioGGEEoREDEMEoCompetencia_Specified := True;
end;

function FacturaType.RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia_Specified;
end;

function FacturaType.GetMacrodato(Index: Integer): MacrodatoType;
begin
  Result := FMacrodato;
end;

procedure FacturaType.SetMacrodato(Index: Integer; const AMacrodatoType: MacrodatoType);
begin
  FMacrodato := AMacrodatoType;
  FMacrodato_Specified := True;
end;

function FacturaType.Macrodato_Specified(Index: Integer): boolean;
begin
  Result := FMacrodato_Specified;
end;

destructor FacturaRecibidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseFactura);
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function FacturaRecibidaType.GetDesgloseFactura: DesgloseFacturaRecibidasType;
begin
  Result := FDesgloseFactura;
end;

procedure FacturaRecibidaType.SetDesgloseFactura(const ADesgloseFacturaRecibidasType: DesgloseFacturaRecibidasType);
begin
  FDesgloseFactura := ADesgloseFacturaRecibidasType;
end;

function FacturaRecibidaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure FacturaRecibidaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function FacturaRecibidaType.GetFechaRegContable: fecha;
begin
  Result := FFechaRegContable;
end;

procedure FacturaRecibidaType.SetFechaRegContable(const Afecha: fecha);
begin
  FFechaRegContable := Afecha;
end;

function FacturaRecibidaType.GetCuotaDeducible: ImporteSgn12_2Type;
begin
  Result := FCuotaDeducible;
end;

procedure FacturaRecibidaType.SetCuotaDeducible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaDeducible := AImporteSgn12_2Type;
end;

function FacturaRecibidaType.GetADeducirEnPeriodoPosterior(Index: Integer): DeducirEnPeriodoPosteriorType;
begin
  Result := FADeducirEnPeriodoPosterior;
end;

procedure FacturaRecibidaType.SetADeducirEnPeriodoPosterior(Index: Integer; const ADeducirEnPeriodoPosteriorType: DeducirEnPeriodoPosteriorType);
begin
  FADeducirEnPeriodoPosterior := ADeducirEnPeriodoPosteriorType;
  FADeducirEnPeriodoPosterior_Specified := True;
end;

function FacturaRecibidaType.ADeducirEnPeriodoPosterior_Specified(Index: Integer): boolean;
begin
  Result := FADeducirEnPeriodoPosterior_Specified;
end;

function FacturaRecibidaType.GetEjercicioDeduccion(Index: Integer): YearType;
begin
  Result := FEjercicioDeduccion;
end;

procedure FacturaRecibidaType.SetEjercicioDeduccion(Index: Integer; const AYearType: YearType);
begin
  FEjercicioDeduccion := AYearType;
  FEjercicioDeduccion_Specified := True;
end;

function FacturaRecibidaType.EjercicioDeduccion_Specified(Index: Integer): boolean;
begin
  Result := FEjercicioDeduccion_Specified;
end;

function FacturaRecibidaType.GetPeriodoDeduccion(Index: Integer): TipoPeriodoType;
begin
  Result := FPeriodoDeduccion;
end;

procedure FacturaRecibidaType.SetPeriodoDeduccion(Index: Integer; const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodoDeduccion := ATipoPeriodoType;
  FPeriodoDeduccion_Specified := True;
end;

function FacturaRecibidaType.PeriodoDeduccion_Specified(Index: Integer): boolean;
begin
  Result := FPeriodoDeduccion_Specified;
end;

destructor FacturaExpedidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosInmueble);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FTipoDesglose);
  inherited Destroy;
end;

function FacturaExpedidaType.GetDatosInmueble(Index: Integer): DatosInmueble3;
begin
  Result := FDatosInmueble;
end;

procedure FacturaExpedidaType.SetDatosInmueble(Index: Integer; const ADatosInmueble3: DatosInmueble3);
begin
  FDatosInmueble := ADatosInmueble3;
  FDatosInmueble_Specified := True;
end;

function FacturaExpedidaType.DatosInmueble_Specified(Index: Integer): boolean;
begin
  Result := FDatosInmueble_Specified;
end;

function FacturaExpedidaType.GetImporteTransmisionInmueblesSujetoAIVA(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTransmisionInmueblesSujetoAIVA;
end;

procedure FacturaExpedidaType.SetImporteTransmisionInmueblesSujetoAIVA(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTransmisionInmueblesSujetoAIVA := AImporteSgn12_2Type;
  FImporteTransmisionInmueblesSujetoAIVA_Specified := True;
end;

function FacturaExpedidaType.ImporteTransmisionInmueblesSujetoAIVA_Specified(Index: Integer): boolean;
begin
  Result := FImporteTransmisionInmueblesSujetoAIVA_Specified;
end;

function FacturaExpedidaType.GetEmitidaPorTercerosODestinatario(Index: Integer): EmitidaPorTercerosType;
begin
  Result := FEmitidaPorTercerosODestinatario;
end;

procedure FacturaExpedidaType.SetEmitidaPorTercerosODestinatario(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
begin
  FEmitidaPorTercerosODestinatario := AEmitidaPorTercerosType;
  FEmitidaPorTercerosODestinatario_Specified := True;
end;

function FacturaExpedidaType.EmitidaPorTercerosODestinatario_Specified(Index: Integer): boolean;
begin
  Result := FEmitidaPorTercerosODestinatario_Specified;
end;

function FacturaExpedidaType.GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer): EmitidaPorTercerosType;
begin
  Result := FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas;
end;

procedure FacturaExpedidaType.SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
begin
  FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas := AEmitidaPorTercerosType;
  FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified := True;
end;

function FacturaExpedidaType.FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified(Index: Integer): boolean;
begin
  Result := FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified;
end;

function FacturaExpedidaType.GetVariosDestinatarios(Index: Integer): VariosDestinatariosType;
begin
  Result := FVariosDestinatarios;
end;

procedure FacturaExpedidaType.SetVariosDestinatarios(Index: Integer; const AVariosDestinatariosType: VariosDestinatariosType);
begin
  FVariosDestinatarios := AVariosDestinatariosType;
  FVariosDestinatarios_Specified := True;
end;

function FacturaExpedidaType.VariosDestinatarios_Specified(Index: Integer): boolean;
begin
  Result := FVariosDestinatarios_Specified;
end;

function FacturaExpedidaType.GetCupon(Index: Integer): CuponType;
begin
  Result := FCupon;
end;

procedure FacturaExpedidaType.SetCupon(Index: Integer; const ACuponType: CuponType);
begin
  FCupon := ACuponType;
  FCupon_Specified := True;
end;

function FacturaExpedidaType.Cupon_Specified(Index: Integer): boolean;
begin
  Result := FCupon_Specified;
end;

function FacturaExpedidaType.GetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer): CompletaSinDestinatarioType;
begin
  Result := FFacturaSinIdentifDestinatarioAritculo6_1_d;
end;

procedure FacturaExpedidaType.SetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer; const ACompletaSinDestinatarioType: CompletaSinDestinatarioType);
begin
  FFacturaSinIdentifDestinatarioAritculo6_1_d := ACompletaSinDestinatarioType;
  FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified := True;
end;

function FacturaExpedidaType.FacturaSinIdentifDestinatarioAritculo6_1_d_Specified(Index: Integer): boolean;
begin
  Result := FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified;
end;

function FacturaExpedidaType.GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure FacturaExpedidaType.SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
  FContraparte_Specified := True;
end;

function FacturaExpedidaType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function FacturaExpedidaType.GetTipoDesglose: TipoDesglose3;
begin
  Result := FTipoDesglose;
end;

procedure FacturaExpedidaType.SetTipoDesglose(const ATipoDesglose3: TipoDesglose3);
begin
  FTipoDesglose := ATipoDesglose3;
end;

destructor VentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FInfoExpedicionRecepcion);
  System.SysUtils.FreeAndNil(FIdRegistroExpInicial);
  System.SysUtils.FreeAndNil(FDestinoFinalExpedRecep);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function VentaBienesConsignaType.GetInfoExpedicionRecepcion(Index: Integer): InfoExpedicionRecepcionType;
begin
  Result := FInfoExpedicionRecepcion;
end;

procedure VentaBienesConsignaType.SetInfoExpedicionRecepcion(Index: Integer; const AInfoExpedicionRecepcionType: InfoExpedicionRecepcionType);
begin
  FInfoExpedicionRecepcion := AInfoExpedicionRecepcionType;
  FInfoExpedicionRecepcion_Specified := True;
end;

function VentaBienesConsignaType.InfoExpedicionRecepcion_Specified(Index: Integer): boolean;
begin
  Result := FInfoExpedicionRecepcion_Specified;
end;

function VentaBienesConsignaType.GetIdRegistroExpInicial(Index: Integer): IdRegistroExpInicialType;
begin
  Result := FIdRegistroExpInicial;
end;

procedure VentaBienesConsignaType.SetIdRegistroExpInicial(Index: Integer; const AIdRegistroExpInicialType: IdRegistroExpInicialType);
begin
  FIdRegistroExpInicial := AIdRegistroExpInicialType;
  FIdRegistroExpInicial_Specified := True;
end;

function VentaBienesConsignaType.IdRegistroExpInicial_Specified(Index: Integer): boolean;
begin
  Result := FIdRegistroExpInicial_Specified;
end;

function VentaBienesConsignaType.GetDestinoFinalExpedRecep(Index: Integer): DestinoFinalExpedRecepType;
begin
  Result := FDestinoFinalExpedRecep;
end;

procedure VentaBienesConsignaType.SetDestinoFinalExpedRecep(Index: Integer; const ADestinoFinalExpedRecepType: DestinoFinalExpedRecepType);
begin
  FDestinoFinalExpedRecep := ADestinoFinalExpedRecepType;
  FDestinoFinalExpedRecep_Specified := True;
end;

function VentaBienesConsignaType.DestinoFinalExpedRecep_Specified(Index: Integer): boolean;
begin
  Result := FDestinoFinalExpedRecep_Specified;
end;

function VentaBienesConsignaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure VentaBienesConsignaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function VentaBienesConsignaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function VentaBienesConsignaType.GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
begin
  Result := FNumRegistroAcuerdoFacturacion;
end;

procedure VentaBienesConsignaType.SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
begin
  FNumRegistroAcuerdoFacturacion := ATextMax15Type;
  FNumRegistroAcuerdoFacturacion_Specified := True;
end;

function VentaBienesConsignaType.NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
begin
  Result := FNumRegistroAcuerdoFacturacion_Specified;
end;

function VentaBienesConsignaType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure VentaBienesConsignaType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function VentaBienesConsignaType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

function VentaBienesConsignaType.GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia;
end;

procedure VentaBienesConsignaType.SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
begin
  FRegPrevioGGEEoREDEMEoCompetencia := ARegPrevioGGEEoREDEMEoCompetenciaType;
  FRegPrevioGGEEoREDEMEoCompetencia_Specified := True;
end;

function VentaBienesConsignaType.RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia_Specified;
end;

destructor OperacionIntracomunitariaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function OperacionIntracomunitariaType.GetTipoOperacion: TipoOperacion;
begin
  Result := FTipoOperacion;
end;

procedure OperacionIntracomunitariaType.SetTipoOperacion(const ATipoOperacion: TipoOperacion);
begin
  FTipoOperacion := ATipoOperacion;
end;

function OperacionIntracomunitariaType.GetClaveDeclarado: ClaveDeclarado;
begin
  Result := FClaveDeclarado;
end;

procedure OperacionIntracomunitariaType.SetClaveDeclarado(const AClaveDeclarado: ClaveDeclarado);
begin
  FClaveDeclarado := AClaveDeclarado;
end;

function OperacionIntracomunitariaType.GetEstadoMiembro: CountryMiembroType;
begin
  Result := FEstadoMiembro;
end;

procedure OperacionIntracomunitariaType.SetEstadoMiembro(const ACountryMiembroType: CountryMiembroType);
begin
  FEstadoMiembro := ACountryMiembroType;
end;

function OperacionIntracomunitariaType.GetPlazoOperacion(Index: Integer): PlazoOperacion;
begin
  Result := FPlazoOperacion;
end;

procedure OperacionIntracomunitariaType.SetPlazoOperacion(Index: Integer; const APlazoOperacion: PlazoOperacion);
begin
  FPlazoOperacion := APlazoOperacion;
  FPlazoOperacion_Specified := True;
end;

function OperacionIntracomunitariaType.PlazoOperacion_Specified(Index: Integer): boolean;
begin
  Result := FPlazoOperacion_Specified;
end;

function OperacionIntracomunitariaType.GetDescripcionBienes: TextMax40Type;
begin
  Result := FDescripcionBienes;
end;

procedure OperacionIntracomunitariaType.SetDescripcionBienes(const ATextMax40Type: TextMax40Type);
begin
  FDescripcionBienes := ATextMax40Type;
end;

function OperacionIntracomunitariaType.GetDireccionOperador: TextMax120Type;
begin
  Result := FDireccionOperador;
end;

procedure OperacionIntracomunitariaType.SetDireccionOperador(const ATextMax120Type: TextMax120Type);
begin
  FDireccionOperador := ATextMax120Type;
end;

function OperacionIntracomunitariaType.GetFacturasODocumentacion(Index: Integer): TextMax150Type;
begin
  Result := FFacturasODocumentacion;
end;

procedure OperacionIntracomunitariaType.SetFacturasODocumentacion(Index: Integer; const ATextMax150Type: TextMax150Type);
begin
  FFacturasODocumentacion := ATextMax150Type;
  FFacturasODocumentacion_Specified := True;
end;

function OperacionIntracomunitariaType.FacturasODocumentacion_Specified(Index: Integer): boolean;
begin
  Result := FFacturasODocumentacion_Specified;
end;

function OperacionIntracomunitariaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure OperacionIntracomunitariaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function OperacionIntracomunitariaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function OperacionIntracomunitariaType.GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
begin
  Result := FNumRegistroAcuerdoFacturacion;
end;

procedure OperacionIntracomunitariaType.SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
begin
  FNumRegistroAcuerdoFacturacion := ATextMax15Type;
  FNumRegistroAcuerdoFacturacion_Specified := True;
end;

function OperacionIntracomunitariaType.NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
begin
  Result := FNumRegistroAcuerdoFacturacion_Specified;
end;

function OperacionIntracomunitariaType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure OperacionIntracomunitariaType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function OperacionIntracomunitariaType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

function OperacionIntracomunitariaType.GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia;
end;

procedure OperacionIntracomunitariaType.SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
begin
  FRegPrevioGGEEoREDEMEoCompetencia := ARegPrevioGGEEoREDEMEoCompetenciaType;
  FRegPrevioGGEEoREDEMEoCompetencia_Specified := True;
end;

function OperacionIntracomunitariaType.RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia_Specified;
end;

destructor FacturaRespuestaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFacturasAgrupadas);
  System.SysUtils.FreeAndNil(FFacturasRectificadas);
  System.SysUtils.FreeAndNil(FImporteRectificacion);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function FacturaRespuestaType.GetTipoFactura: ClaveTipoFacturaType;
begin
  Result := FTipoFactura;
end;

procedure FacturaRespuestaType.SetTipoFactura(const AClaveTipoFacturaType: ClaveTipoFacturaType);
begin
  FTipoFactura := AClaveTipoFacturaType;
end;

function FacturaRespuestaType.GetTipoRectificativa(Index: Integer): ClaveTipoRectificativaType;
begin
  Result := FTipoRectificativa;
end;

procedure FacturaRespuestaType.SetTipoRectificativa(Index: Integer; const AClaveTipoRectificativaType: ClaveTipoRectificativaType);
begin
  FTipoRectificativa := AClaveTipoRectificativaType;
  FTipoRectificativa_Specified := True;
end;

function FacturaRespuestaType.TipoRectificativa_Specified(Index: Integer): boolean;
begin
  Result := FTipoRectificativa_Specified;
end;

function FacturaRespuestaType.GetFacturasAgrupadas(Index: Integer): FacturasAgrupadas;
begin
  Result := FFacturasAgrupadas;
end;

procedure FacturaRespuestaType.SetFacturasAgrupadas(Index: Integer; const AFacturasAgrupadas: FacturasAgrupadas);
begin
  FFacturasAgrupadas := AFacturasAgrupadas;
  FFacturasAgrupadas_Specified := True;
end;

function FacturaRespuestaType.FacturasAgrupadas_Specified(Index: Integer): boolean;
begin
  Result := FFacturasAgrupadas_Specified;
end;

function FacturaRespuestaType.GetFacturasRectificadas(Index: Integer): FacturasRectificadas;
begin
  Result := FFacturasRectificadas;
end;

procedure FacturaRespuestaType.SetFacturasRectificadas(Index: Integer; const AFacturasRectificadas: FacturasRectificadas);
begin
  FFacturasRectificadas := AFacturasRectificadas;
  FFacturasRectificadas_Specified := True;
end;

function FacturaRespuestaType.FacturasRectificadas_Specified(Index: Integer): boolean;
begin
  Result := FFacturasRectificadas_Specified;
end;

function FacturaRespuestaType.GetImporteRectificacion(Index: Integer): DesgloseRectificacionType;
begin
  Result := FImporteRectificacion;
end;

procedure FacturaRespuestaType.SetImporteRectificacion(Index: Integer; const ADesgloseRectificacionType: DesgloseRectificacionType);
begin
  FImporteRectificacion := ADesgloseRectificacionType;
  FImporteRectificacion_Specified := True;
end;

function FacturaRespuestaType.ImporteRectificacion_Specified(Index: Integer): boolean;
begin
  Result := FImporteRectificacion_Specified;
end;

function FacturaRespuestaType.GetFechaOperacion(Index: Integer): fecha;
begin
  Result := FFechaOperacion;
end;

procedure FacturaRespuestaType.SetFechaOperacion(Index: Integer; const Afecha: fecha);
begin
  FFechaOperacion := Afecha;
  FFechaOperacion_Specified := True;
end;

function FacturaRespuestaType.FechaOperacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaOperacion_Specified;
end;

function FacturaRespuestaType.GetClaveRegimenEspecialOTrascendencia: IdOperacionesTrascendenciaTributariaType;
begin
  Result := FClaveRegimenEspecialOTrascendencia;
end;

procedure FacturaRespuestaType.SetClaveRegimenEspecialOTrascendencia(const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
begin
  FClaveRegimenEspecialOTrascendencia := AIdOperacionesTrascendenciaTributariaType;
end;

function FacturaRespuestaType.GetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer): IdOperacionesTrascendenciaTributariaType;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional1;
end;

procedure FacturaRespuestaType.SetClaveRegimenEspecialOTrascendenciaAdicional1(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
begin
  FClaveRegimenEspecialOTrascendenciaAdicional1 := AIdOperacionesTrascendenciaTributariaType;
  FClaveRegimenEspecialOTrascendenciaAdicional1_Specified := True;
end;

function FacturaRespuestaType.ClaveRegimenEspecialOTrascendenciaAdicional1_Specified(Index: Integer): boolean;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional1_Specified;
end;

function FacturaRespuestaType.GetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer): IdOperacionesTrascendenciaTributariaType;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional2;
end;

procedure FacturaRespuestaType.SetClaveRegimenEspecialOTrascendenciaAdicional2(Index: Integer; const AIdOperacionesTrascendenciaTributariaType: IdOperacionesTrascendenciaTributariaType);
begin
  FClaveRegimenEspecialOTrascendenciaAdicional2 := AIdOperacionesTrascendenciaTributariaType;
  FClaveRegimenEspecialOTrascendenciaAdicional2_Specified := True;
end;

function FacturaRespuestaType.ClaveRegimenEspecialOTrascendenciaAdicional2_Specified(Index: Integer): boolean;
begin
  Result := FClaveRegimenEspecialOTrascendenciaAdicional2_Specified;
end;

function FacturaRespuestaType.GetNumRegistroAcuerdoFacturacion(Index: Integer): TextMax15Type;
begin
  Result := FNumRegistroAcuerdoFacturacion;
end;

procedure FacturaRespuestaType.SetNumRegistroAcuerdoFacturacion(Index: Integer; const ATextMax15Type: TextMax15Type);
begin
  FNumRegistroAcuerdoFacturacion := ATextMax15Type;
  FNumRegistroAcuerdoFacturacion_Specified := True;
end;

function FacturaRespuestaType.NumRegistroAcuerdoFacturacion_Specified(Index: Integer): boolean;
begin
  Result := FNumRegistroAcuerdoFacturacion_Specified;
end;

function FacturaRespuestaType.GetImporteTotal(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure FacturaRespuestaType.SetImporteTotal(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
  FImporteTotal_Specified := True;
end;

function FacturaRespuestaType.ImporteTotal_Specified(Index: Integer): boolean;
begin
  Result := FImporteTotal_Specified;
end;

function FacturaRespuestaType.GetBaseImponibleACoste(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FBaseImponibleACoste;
end;

procedure FacturaRespuestaType.SetBaseImponibleACoste(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FBaseImponibleACoste := AImporteSgn12_2Type;
  FBaseImponibleACoste_Specified := True;
end;

function FacturaRespuestaType.BaseImponibleACoste_Specified(Index: Integer): boolean;
begin
  Result := FBaseImponibleACoste_Specified;
end;

function FacturaRespuestaType.GetDescripcionOperacion: TextMax500Type;
begin
  Result := FDescripcionOperacion;
end;

procedure FacturaRespuestaType.SetDescripcionOperacion(const ATextMax500Type: TextMax500Type);
begin
  FDescripcionOperacion := ATextMax500Type;
end;

function FacturaRespuestaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure FacturaRespuestaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function FacturaRespuestaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function FacturaRespuestaType.GetFacturaSimplificadaArticulos7_2_7_3(Index: Integer): SimplificadaCualificadaType;
begin
  Result := FFacturaSimplificadaArticulos7_2_7_3;
end;

procedure FacturaRespuestaType.SetFacturaSimplificadaArticulos7_2_7_3(Index: Integer; const ASimplificadaCualificadaType: SimplificadaCualificadaType);
begin
  FFacturaSimplificadaArticulos7_2_7_3 := ASimplificadaCualificadaType;
  FFacturaSimplificadaArticulos7_2_7_3_Specified := True;
end;

function FacturaRespuestaType.FacturaSimplificadaArticulos7_2_7_3_Specified(Index: Integer): boolean;
begin
  Result := FFacturaSimplificadaArticulos7_2_7_3_Specified;
end;

function FacturaRespuestaType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure FacturaRespuestaType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function FacturaRespuestaType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

function FacturaRespuestaType.GetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer): RegPrevioGGEEoREDEMEoCompetenciaType;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia;
end;

procedure FacturaRespuestaType.SetRegPrevioGGEEoREDEMEoCompetencia(Index: Integer; const ARegPrevioGGEEoREDEMEoCompetenciaType: RegPrevioGGEEoREDEMEoCompetenciaType);
begin
  FRegPrevioGGEEoREDEMEoCompetencia := ARegPrevioGGEEoREDEMEoCompetenciaType;
  FRegPrevioGGEEoREDEMEoCompetencia_Specified := True;
end;

function FacturaRespuestaType.RegPrevioGGEEoREDEMEoCompetencia_Specified(Index: Integer): boolean;
begin
  Result := FRegPrevioGGEEoREDEMEoCompetencia_Specified;
end;

function FacturaRespuestaType.GetMacrodato(Index: Integer): MacrodatoType;
begin
  Result := FMacrodato;
end;

procedure FacturaRespuestaType.SetMacrodato(Index: Integer; const AMacrodatoType: MacrodatoType);
begin
  FMacrodato := AMacrodatoType;
  FMacrodato_Specified := True;
end;

function FacturaRespuestaType.Macrodato_Specified(Index: Integer): boolean;
begin
  Result := FMacrodato_Specified;
end;

destructor FacturaRespuestaInformadaClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseFactura);
  inherited Destroy;
end;

function FacturaRespuestaInformadaClienteType.GetDesgloseFactura: DesgloseFacturaRecibidasType;
begin
  Result := FDesgloseFactura;
end;

procedure FacturaRespuestaInformadaClienteType.SetDesgloseFactura(const ADesgloseFacturaRecibidasType: DesgloseFacturaRecibidasType);
begin
  FDesgloseFactura := ADesgloseFacturaRecibidasType;
end;

function FacturaRespuestaInformadaClienteType.GetFechaRegContable: fecha;
begin
  Result := FFechaRegContable;
end;

procedure FacturaRespuestaInformadaClienteType.SetFechaRegContable(const Afecha: fecha);
begin
  FFechaRegContable := Afecha;
end;

function FacturaRespuestaInformadaClienteType.GetPagos: FacturaARType;
begin
  Result := FPagos;
end;

procedure FacturaRespuestaInformadaClienteType.SetPagos(const AFacturaARType: FacturaARType);
begin
  FPagos := AFacturaARType;
end;

destructor FacturaRespuestaInformadaProveedorType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosInmueble);
  System.SysUtils.FreeAndNil(FTipoDesglose);
  inherited Destroy;
end;

function FacturaRespuestaInformadaProveedorType.GetDatosInmueble(Index: Integer): DatosInmueble;
begin
  Result := FDatosInmueble;
end;

procedure FacturaRespuestaInformadaProveedorType.SetDatosInmueble(Index: Integer; const ADatosInmueble: DatosInmueble);
begin
  FDatosInmueble := ADatosInmueble;
  FDatosInmueble_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.DatosInmueble_Specified(Index: Integer): boolean;
begin
  Result := FDatosInmueble_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetImporteTransmisionInmueblesSujetoAIVA(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTransmisionInmueblesSujetoAIVA;
end;

procedure FacturaRespuestaInformadaProveedorType.SetImporteTransmisionInmueblesSujetoAIVA(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTransmisionInmueblesSujetoAIVA := AImporteSgn12_2Type;
  FImporteTransmisionInmueblesSujetoAIVA_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.ImporteTransmisionInmueblesSujetoAIVA_Specified(Index: Integer): boolean;
begin
  Result := FImporteTransmisionInmueblesSujetoAIVA_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetEmitidaPorTercerosODestinatario(Index: Integer): EmitidaPorTercerosType;
begin
  Result := FEmitidaPorTercerosODestinatario;
end;

procedure FacturaRespuestaInformadaProveedorType.SetEmitidaPorTercerosODestinatario(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
begin
  FEmitidaPorTercerosODestinatario := AEmitidaPorTercerosType;
  FEmitidaPorTercerosODestinatario_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.EmitidaPorTercerosODestinatario_Specified(Index: Integer): boolean;
begin
  Result := FEmitidaPorTercerosODestinatario_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer): EmitidaPorTercerosType;
begin
  Result := FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas;
end;

procedure FacturaRespuestaInformadaProveedorType.SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
begin
  FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas := AEmitidaPorTercerosType;
  FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified(Index: Integer): boolean;
begin
  Result := FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetVariosDestinatarios(Index: Integer): VariosDestinatariosType;
begin
  Result := FVariosDestinatarios;
end;

procedure FacturaRespuestaInformadaProveedorType.SetVariosDestinatarios(Index: Integer; const AVariosDestinatariosType: VariosDestinatariosType);
begin
  FVariosDestinatarios := AVariosDestinatariosType;
  FVariosDestinatarios_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.VariosDestinatarios_Specified(Index: Integer): boolean;
begin
  Result := FVariosDestinatarios_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetCupon(Index: Integer): CuponType;
begin
  Result := FCupon;
end;

procedure FacturaRespuestaInformadaProveedorType.SetCupon(Index: Integer; const ACuponType: CuponType);
begin
  FCupon := ACuponType;
  FCupon_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.Cupon_Specified(Index: Integer): boolean;
begin
  Result := FCupon_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer): CompletaSinDestinatarioType;
begin
  Result := FFacturaSinIdentifDestinatarioAritculo6_1_d;
end;

procedure FacturaRespuestaInformadaProveedorType.SetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer; const ACompletaSinDestinatarioType: CompletaSinDestinatarioType);
begin
  FFacturaSinIdentifDestinatarioAritculo6_1_d := ACompletaSinDestinatarioType;
  FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified := True;
end;

function FacturaRespuestaInformadaProveedorType.FacturaSinIdentifDestinatarioAritculo6_1_d_Specified(Index: Integer): boolean;
begin
  Result := FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified;
end;

function FacturaRespuestaInformadaProveedorType.GetTipoDesglose: TipoDesglose2;
begin
  Result := FTipoDesglose;
end;

procedure FacturaRespuestaInformadaProveedorType.SetTipoDesglose(const ATipoDesglose2: TipoDesglose2);
begin
  FTipoDesglose := ATipoDesglose2;
end;

function FacturaRespuestaInformadaProveedorType.GetCobros: FacturaARType;
begin
  Result := FCobros;
end;

procedure FacturaRespuestaInformadaProveedorType.SetCobros(const AFacturaARType: FacturaARType);
begin
  FCobros := AFacturaARType;
end;

destructor FacturaRespuestaRecibidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDesgloseFactura);
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function FacturaRespuestaRecibidaType.GetDesgloseFactura: DesgloseFacturaRecibidasType;
begin
  Result := FDesgloseFactura;
end;

procedure FacturaRespuestaRecibidaType.SetDesgloseFactura(const ADesgloseFacturaRecibidasType: DesgloseFacturaRecibidasType);
begin
  FDesgloseFactura := ADesgloseFacturaRecibidasType;
end;

function FacturaRespuestaRecibidaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure FacturaRespuestaRecibidaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function FacturaRespuestaRecibidaType.GetFechaRegContable: fecha;
begin
  Result := FFechaRegContable;
end;

procedure FacturaRespuestaRecibidaType.SetFechaRegContable(const Afecha: fecha);
begin
  FFechaRegContable := Afecha;
end;

function FacturaRespuestaRecibidaType.GetCuotaDeducible: ImporteSgn12_2Type;
begin
  Result := FCuotaDeducible;
end;

procedure FacturaRespuestaRecibidaType.SetCuotaDeducible(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FCuotaDeducible := AImporteSgn12_2Type;
end;

function FacturaRespuestaRecibidaType.GetPagos: FacturaARType;
begin
  Result := FPagos;
end;

procedure FacturaRespuestaRecibidaType.SetPagos(const AFacturaARType: FacturaARType);
begin
  FPagos := AFacturaARType;
end;

function FacturaRespuestaRecibidaType.GetADeducirEnPeriodoPosterior(Index: Integer): DeducirEnPeriodoPosteriorType;
begin
  Result := FADeducirEnPeriodoPosterior;
end;

procedure FacturaRespuestaRecibidaType.SetADeducirEnPeriodoPosterior(Index: Integer; const ADeducirEnPeriodoPosteriorType: DeducirEnPeriodoPosteriorType);
begin
  FADeducirEnPeriodoPosterior := ADeducirEnPeriodoPosteriorType;
  FADeducirEnPeriodoPosterior_Specified := True;
end;

function FacturaRespuestaRecibidaType.ADeducirEnPeriodoPosterior_Specified(Index: Integer): boolean;
begin
  Result := FADeducirEnPeriodoPosterior_Specified;
end;

function FacturaRespuestaRecibidaType.GetEjercicioDeduccion(Index: Integer): YearType;
begin
  Result := FEjercicioDeduccion;
end;

procedure FacturaRespuestaRecibidaType.SetEjercicioDeduccion(Index: Integer; const AYearType: YearType);
begin
  FEjercicioDeduccion := AYearType;
  FEjercicioDeduccion_Specified := True;
end;

function FacturaRespuestaRecibidaType.EjercicioDeduccion_Specified(Index: Integer): boolean;
begin
  Result := FEjercicioDeduccion_Specified;
end;

function FacturaRespuestaRecibidaType.GetPeriodoDeduccion(Index: Integer): TipoPeriodoType;
begin
  Result := FPeriodoDeduccion;
end;

procedure FacturaRespuestaRecibidaType.SetPeriodoDeduccion(Index: Integer; const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodoDeduccion := ATipoPeriodoType;
  FPeriodoDeduccion_Specified := True;
end;

function FacturaRespuestaRecibidaType.PeriodoDeduccion_Specified(Index: Integer): boolean;
begin
  Result := FPeriodoDeduccion_Specified;
end;

destructor FacturaRespuestaExpedidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosInmueble);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FTipoDesglose);
  inherited Destroy;
end;

function FacturaRespuestaExpedidaType.GetDatosInmueble(Index: Integer): DatosInmueble2;
begin
  Result := FDatosInmueble;
end;

procedure FacturaRespuestaExpedidaType.SetDatosInmueble(Index: Integer; const ADatosInmueble2: DatosInmueble2);
begin
  FDatosInmueble := ADatosInmueble2;
  FDatosInmueble_Specified := True;
end;

function FacturaRespuestaExpedidaType.DatosInmueble_Specified(Index: Integer): boolean;
begin
  Result := FDatosInmueble_Specified;
end;

function FacturaRespuestaExpedidaType.GetImporteTransmisionInmueblesSujetoAIVA(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTransmisionInmueblesSujetoAIVA;
end;

procedure FacturaRespuestaExpedidaType.SetImporteTransmisionInmueblesSujetoAIVA(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTransmisionInmueblesSujetoAIVA := AImporteSgn12_2Type;
  FImporteTransmisionInmueblesSujetoAIVA_Specified := True;
end;

function FacturaRespuestaExpedidaType.ImporteTransmisionInmueblesSujetoAIVA_Specified(Index: Integer): boolean;
begin
  Result := FImporteTransmisionInmueblesSujetoAIVA_Specified;
end;

function FacturaRespuestaExpedidaType.GetEmitidaPorTercerosODestinatario(Index: Integer): EmitidaPorTercerosType;
begin
  Result := FEmitidaPorTercerosODestinatario;
end;

procedure FacturaRespuestaExpedidaType.SetEmitidaPorTercerosODestinatario(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
begin
  FEmitidaPorTercerosODestinatario := AEmitidaPorTercerosType;
  FEmitidaPorTercerosODestinatario_Specified := True;
end;

function FacturaRespuestaExpedidaType.EmitidaPorTercerosODestinatario_Specified(Index: Integer): boolean;
begin
  Result := FEmitidaPorTercerosODestinatario_Specified;
end;

function FacturaRespuestaExpedidaType.GetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer): EmitidaPorTercerosType;
begin
  Result := FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas;
end;

procedure FacturaRespuestaExpedidaType.SetFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas(Index: Integer; const AEmitidaPorTercerosType: EmitidaPorTercerosType);
begin
  FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas := AEmitidaPorTercerosType;
  FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified := True;
end;

function FacturaRespuestaExpedidaType.FacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified(Index: Integer): boolean;
begin
  Result := FFacturacionDispAdicionalTerceraYsextayDelMercadoOrganizadoDelGas_Specified;
end;

function FacturaRespuestaExpedidaType.GetVariosDestinatarios(Index: Integer): VariosDestinatariosType;
begin
  Result := FVariosDestinatarios;
end;

procedure FacturaRespuestaExpedidaType.SetVariosDestinatarios(Index: Integer; const AVariosDestinatariosType: VariosDestinatariosType);
begin
  FVariosDestinatarios := AVariosDestinatariosType;
  FVariosDestinatarios_Specified := True;
end;

function FacturaRespuestaExpedidaType.VariosDestinatarios_Specified(Index: Integer): boolean;
begin
  Result := FVariosDestinatarios_Specified;
end;

function FacturaRespuestaExpedidaType.GetCupon(Index: Integer): CuponType;
begin
  Result := FCupon;
end;

procedure FacturaRespuestaExpedidaType.SetCupon(Index: Integer; const ACuponType: CuponType);
begin
  FCupon := ACuponType;
  FCupon_Specified := True;
end;

function FacturaRespuestaExpedidaType.Cupon_Specified(Index: Integer): boolean;
begin
  Result := FCupon_Specified;
end;

function FacturaRespuestaExpedidaType.GetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer): CompletaSinDestinatarioType;
begin
  Result := FFacturaSinIdentifDestinatarioAritculo6_1_d;
end;

procedure FacturaRespuestaExpedidaType.SetFacturaSinIdentifDestinatarioAritculo6_1_d(Index: Integer; const ACompletaSinDestinatarioType: CompletaSinDestinatarioType);
begin
  FFacturaSinIdentifDestinatarioAritculo6_1_d := ACompletaSinDestinatarioType;
  FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified := True;
end;

function FacturaRespuestaExpedidaType.FacturaSinIdentifDestinatarioAritculo6_1_d_Specified(Index: Integer): boolean;
begin
  Result := FFacturaSinIdentifDestinatarioAritculo6_1_d_Specified;
end;

function FacturaRespuestaExpedidaType.GetContraparte(Index: Integer): PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure FacturaRespuestaExpedidaType.SetContraparte(Index: Integer; const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
  FContraparte_Specified := True;
end;

function FacturaRespuestaExpedidaType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function FacturaRespuestaExpedidaType.GetTipoDesglose: TipoDesglose;
begin
  Result := FTipoDesglose;
end;

procedure FacturaRespuestaExpedidaType.SetTipoDesglose(const ATipoDesglose: TipoDesglose);
begin
  FTipoDesglose := ATipoDesglose;
end;

function FacturaRespuestaExpedidaType.GetCobros: FacturaARType;
begin
  Result := FCobros;
end;

procedure FacturaRespuestaExpedidaType.SetCobros(const AFacturaARType: FacturaARType);
begin
  FCobros := AFacturaARType;
end;

function IDEmisorFactura9.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura9.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura9.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura9.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

function IDEmisorFactura10.GetNombreRazon: TextMax120Type;
begin
  Result := FNombreRazon;
end;

procedure IDEmisorFactura10.SetNombreRazon(const ATextMax120Type: TextMax120Type);
begin
  FNombreRazon := ATextMax120Type;
end;

function IDEmisorFactura10.GetNIF: NIFType;
begin
  Result := FNIF;
end;

procedure IDEmisorFactura10.SetNIF(const ANIFType: NIFType);
begin
  FNIF := ANIFType;
end;

function IDOtroType.GetCodigoPais(Index: Integer): CountryType2;
begin
  Result := FCodigoPais;
end;

procedure IDOtroType.SetCodigoPais(Index: Integer; const ACountryType2: CountryType2);
begin
  FCodigoPais := ACountryType2;
  FCodigoPais_Specified := True;
end;

function IDOtroType.CodigoPais_Specified(Index: Integer): boolean;
begin
  Result := FCodigoPais_Specified;
end;

function IDOtroType.GetIDType: PersonaFisicaJuridicaIDTypeType;
begin
  Result := FIDType;
end;

procedure IDOtroType.SetIDType(const APersonaFisicaJuridicaIDTypeType: PersonaFisicaJuridicaIDTypeType);
begin
  FIDType := APersonaFisicaJuridicaIDTypeType;
end;

function IDOtroType.GetID: TextMax20Type;
begin
  Result := FID;
end;

procedure IDOtroType.SetID(const ATextMax20Type: TextMax20Type);
begin
  FID := ATextMax20Type;
end;

destructor ClavePaginacionClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  System.SysUtils.FreeAndNil(FCliente);
  inherited Destroy;
end;

function ClavePaginacionClienteType.GetIDEmisorFactura: IDEmisorFactura10;
begin
  Result := FIDEmisorFactura;
end;

procedure ClavePaginacionClienteType.SetIDEmisorFactura(const AIDEmisorFactura10: IDEmisorFactura10);
begin
  FIDEmisorFactura := AIDEmisorFactura10;
end;

function ClavePaginacionClienteType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure ClavePaginacionClienteType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function ClavePaginacionClienteType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure ClavePaginacionClienteType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

function ClavePaginacionClienteType.GetCliente: PersonaFisicaJuridicaUnicaESType;
begin
  Result := FCliente;
end;

procedure ClavePaginacionClienteType.SetCliente(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FCliente := APersonaFisicaJuridicaUnicaESType;
end;

function IDFacturaConsulta2Type.GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaConsulta2Type.SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
  FNumSerieFacturaEmisor_Specified := True;
end;

function IDFacturaConsulta2Type.NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisor_Specified;
end;

function IDFacturaConsulta2Type.GetFechaExpedicionFacturaEmisor(Index: Integer): fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaConsulta2Type.SetFechaExpedicionFacturaEmisor(Index: Integer; const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
  FFechaExpedicionFacturaEmisor_Specified := True;
end;

function IDFacturaConsulta2Type.FechaExpedicionFacturaEmisor_Specified(Index: Integer): boolean;
begin
  Result := FFechaExpedicionFacturaEmisor_Specified;
end;

destructor IDFacturaExpedidaBCType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaExpedidaBCType.GetIDEmisorFactura: IDEmisorFactura8;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaExpedidaBCType.SetIDEmisorFactura(const AIDEmisorFactura8: IDEmisorFactura8);
begin
  FIDEmisorFactura := AIDEmisorFactura8;
end;

function IDFacturaExpedidaBCType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaExpedidaBCType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaExpedidaBCType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaExpedidaBCType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

function IDFacturaARType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaARType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaARType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaARType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor IDFacturaExpedidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaExpedidaType.GetIDEmisorFactura: IDEmisorFactura7;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaExpedidaType.SetIDEmisorFactura(const AIDEmisorFactura7: IDEmisorFactura7);
begin
  FIDEmisorFactura := AIDEmisorFactura7;
end;

function IDFacturaExpedidaType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaExpedidaType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaExpedidaType.GetNumSerieFacturaEmisorResumenFin(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisorResumenFin;
end;

procedure IDFacturaExpedidaType.SetNumSerieFacturaEmisorResumenFin(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisorResumenFin := ATextoIDFacturaType;
  FNumSerieFacturaEmisorResumenFin_Specified := True;
end;

function IDFacturaExpedidaType.NumSerieFacturaEmisorResumenFin_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisorResumenFin_Specified;
end;

function IDFacturaExpedidaType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaExpedidaType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor IDFacturaComunitariaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaComunitariaType.GetIDEmisorFactura: IDEmisorFactura2;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaComunitariaType.SetIDEmisorFactura(const AIDEmisorFactura2: IDEmisorFactura2);
begin
  FIDEmisorFactura := AIDEmisorFactura2;
end;

function IDFacturaComunitariaType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaComunitariaType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaComunitariaType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaComunitariaType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor IDFacturaRecibidaNombreBCType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaRecibidaNombreBCType.GetIDEmisorFactura: IDEmisorFactura3;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaRecibidaNombreBCType.SetIDEmisorFactura(const AIDEmisorFactura3: IDEmisorFactura3);
begin
  FIDEmisorFactura := AIDEmisorFactura3;
end;

function IDFacturaRecibidaNombreBCType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaRecibidaNombreBCType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaRecibidaNombreBCType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaRecibidaNombreBCType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor IDFacturaRecibidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaRecibidaType.GetIDEmisorFactura: IDEmisorFactura;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaRecibidaType.SetIDEmisorFactura(const AIDEmisorFactura: IDEmisorFactura);
begin
  FIDEmisorFactura := AIDEmisorFactura;
end;

function IDFacturaRecibidaType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaRecibidaType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaRecibidaType.GetNumSerieFacturaEmisorResumenFin(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisorResumenFin;
end;

procedure IDFacturaRecibidaType.SetNumSerieFacturaEmisorResumenFin(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisorResumenFin := ATextoIDFacturaType;
  FNumSerieFacturaEmisorResumenFin_Specified := True;
end;

function IDFacturaRecibidaType.NumSerieFacturaEmisorResumenFin_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisorResumenFin_Specified;
end;

function IDFacturaRecibidaType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaRecibidaType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor ClavePaginacionBienType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function ClavePaginacionBienType.GetIDEmisorFactura: IDEmisorFactura5;
begin
  Result := FIDEmisorFactura;
end;

procedure ClavePaginacionBienType.SetIDEmisorFactura(const AIDEmisorFactura5: IDEmisorFactura5);
begin
  FIDEmisorFactura := AIDEmisorFactura5;
end;

function ClavePaginacionBienType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure ClavePaginacionBienType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function ClavePaginacionBienType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure ClavePaginacionBienType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

function ClavePaginacionBienType.GetIdentificacionBien: TextMax40Type;
begin
  Result := FIdentificacionBien;
end;

procedure ClavePaginacionBienType.SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionBien := ATextMax40Type;
end;

destructor ClavePaginacionProveedorType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function ClavePaginacionProveedorType.GetIDEmisorFactura: IDEmisorFactura4;
begin
  Result := FIDEmisorFactura;
end;

procedure ClavePaginacionProveedorType.SetIDEmisorFactura(const AIDEmisorFactura4: IDEmisorFactura4);
begin
  FIDEmisorFactura := AIDEmisorFactura4;
end;

function ClavePaginacionProveedorType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure ClavePaginacionProveedorType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function ClavePaginacionProveedorType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure ClavePaginacionProveedorType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor IDFacturaConsulta1Type.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaConsulta1Type.GetIDEmisorFactura(Index: Integer): IDEmisorFactura6;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaConsulta1Type.SetIDEmisorFactura(Index: Integer; const AIDEmisorFactura6: IDEmisorFactura6);
begin
  FIDEmisorFactura := AIDEmisorFactura6;
  FIDEmisorFactura_Specified := True;
end;

function IDFacturaConsulta1Type.IDEmisorFactura_Specified(Index: Integer): boolean;
begin
  Result := FIDEmisorFactura_Specified;
end;

function IDFacturaConsulta1Type.GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaConsulta1Type.SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
  FNumSerieFacturaEmisor_Specified := True;
end;

function IDFacturaConsulta1Type.NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisor_Specified;
end;

function IDFacturaConsulta1Type.GetFechaExpedicionFacturaEmisor(Index: Integer): fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaConsulta1Type.SetFechaExpedicionFacturaEmisor(Index: Integer; const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
  FFechaExpedicionFacturaEmisor_Specified := True;
end;

function IDFacturaConsulta1Type.FechaExpedicionFacturaEmisor_Specified(Index: Integer): boolean;
begin
  Result := FFechaExpedicionFacturaEmisor_Specified;
end;

destructor IDFacturaImputacionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDEmisorFactura);
  inherited Destroy;
end;

function IDFacturaImputacionType.GetIDEmisorFactura: IDEmisorFactura9;
begin
  Result := FIDEmisorFactura;
end;

procedure IDFacturaImputacionType.SetIDEmisorFactura(const AIDEmisorFactura9: IDEmisorFactura9);
begin
  FIDEmisorFactura := AIDEmisorFactura9;
end;

function IDFacturaImputacionType.GetNumSerieFacturaEmisor: TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure IDFacturaImputacionType.SetNumSerieFacturaEmisor(const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
end;

function IDFacturaImputacionType.GetNumSerieFacturaEmisorResumenFin(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisorResumenFin;
end;

procedure IDFacturaImputacionType.SetNumSerieFacturaEmisorResumenFin(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisorResumenFin := ATextoIDFacturaType;
  FNumSerieFacturaEmisorResumenFin_Specified := True;
end;

function IDFacturaImputacionType.NumSerieFacturaEmisorResumenFin_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisorResumenFin_Specified;
end;

function IDFacturaImputacionType.GetFechaExpedicionFacturaEmisor: fecha;
begin
  Result := FFechaExpedicionFacturaEmisor;
end;

procedure IDFacturaImputacionType.SetFechaExpedicionFacturaEmisor(const Afecha: fecha);
begin
  FFechaExpedicionFacturaEmisor := Afecha;
end;

destructor ConsultaInmueblesAdicionalesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsultaInmueblesAdicionales);
  inherited Destroy;
end;

function ConsultaInmueblesAdicionalesType.GetFiltroConsultaInmueblesAdicionales: LRFiltroInmueblesAdicionalesType;
begin
  Result := FFiltroConsultaInmueblesAdicionales;
end;

procedure ConsultaInmueblesAdicionalesType.SetFiltroConsultaInmueblesAdicionales(const ALRFiltroInmueblesAdicionalesType: LRFiltroInmueblesAdicionalesType);
begin
  FFiltroConsultaInmueblesAdicionales := ALRFiltroInmueblesAdicionalesType;
end;

destructor LRConsultaVentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaVentaBienesConsignaType.GetFiltroConsulta: LRFiltroVentaBienesConsignaType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaVentaBienesConsignaType.SetFiltroConsulta(const ALRFiltroVentaBienesConsignaType: LRFiltroVentaBienesConsignaType);
begin
  FFiltroConsulta := ALRFiltroVentaBienesConsignaType;
end;

destructor LRConsultaLROperacionesSegurosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaLROperacionesSegurosType.GetFiltroConsulta: LRFiltroOperacionesSegurosType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaLROperacionesSegurosType.SetFiltroConsulta(const ALRFiltroOperacionesSegurosType: LRFiltroOperacionesSegurosType);
begin
  FFiltroConsulta := ALRFiltroOperacionesSegurosType;
end;

destructor ConsultaCobrosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsultaCobros);
  inherited Destroy;
end;

function ConsultaCobrosType.GetFiltroConsultaCobros: LRFiltroCobrosType;
begin
  Result := FFiltroConsultaCobros;
end;

procedure ConsultaCobrosType.SetFiltroConsultaCobros(const ALRFiltroCobrosType: LRFiltroCobrosType);
begin
  FFiltroConsultaCobros := ALRFiltroCobrosType;
end;

destructor ConsultaPagosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsultaPagos);
  inherited Destroy;
end;

function ConsultaPagosType.GetFiltroConsultaPagos: LRFiltroPagosType;
begin
  Result := FFiltroConsultaPagos;
end;

procedure ConsultaPagosType.SetFiltroConsultaPagos(const ALRFiltroPagosType: LRFiltroPagosType);
begin
  FFiltroConsultaPagos := ALRFiltroPagosType;
end;

destructor LRFiltroPagosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRFiltroPagosType.GetIDFactura: IDFacturaRecibidaNombreBCType;
begin
  Result := FIDFactura;
end;

procedure LRFiltroPagosType.SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
begin
  FIDFactura := AIDFacturaRecibidaNombreBCType;
end;

function LRFiltroPagosType.GetClavePaginacion(Index: Integer): Double;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroPagosType.SetClavePaginacion(Index: Integer; const ADouble: Double);
begin
  FClavePaginacion := ADouble;
  FClavePaginacion_Specified := True;
end;

function LRFiltroPagosType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor RespuestaConsultaCobrosType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaCobros)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaCobros[I]);
  System.SetLength(FRegistroRespuestaConsultaCobros, 0);
  inherited Destroy;
end;

function RespuestaConsultaCobrosType.GetRegistroRespuestaConsultaCobros(Index: Integer): Array_Of_RegistroRespuestaConsultaCobrosType;
begin
  Result := FRegistroRespuestaConsultaCobros;
end;

procedure RespuestaConsultaCobrosType.SetRegistroRespuestaConsultaCobros(Index: Integer; const AArray_Of_RegistroRespuestaConsultaCobrosType: Array_Of_RegistroRespuestaConsultaCobrosType);
begin
  FRegistroRespuestaConsultaCobros := AArray_Of_RegistroRespuestaConsultaCobrosType;
  FRegistroRespuestaConsultaCobros_Specified := True;
end;

function RespuestaConsultaCobrosType.RegistroRespuestaConsultaCobros_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaCobros_Specified;
end;

function RespuestaConsultaCobrosType.GetClavePaginacion(Index: Integer): Double;
begin
  Result := FClavePaginacion;
end;

procedure RespuestaConsultaCobrosType.SetClavePaginacion(Index: Integer; const ADouble: Double);
begin
  FClavePaginacion := ADouble;
  FClavePaginacion_Specified := True;
end;

function RespuestaConsultaCobrosType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor RespuestaConsultaPagosType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaPagos)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaPagos[I]);
  System.SetLength(FRegistroRespuestaConsultaPagos, 0);
  inherited Destroy;
end;

function RespuestaConsultaPagosType.GetRegistroRespuestaConsultaPagos(Index: Integer): Array_Of_RegistroRespuestaConsultaPagosType;
begin
  Result := FRegistroRespuestaConsultaPagos;
end;

procedure RespuestaConsultaPagosType.SetRegistroRespuestaConsultaPagos(Index: Integer; const AArray_Of_RegistroRespuestaConsultaPagosType: Array_Of_RegistroRespuestaConsultaPagosType);
begin
  FRegistroRespuestaConsultaPagos := AArray_Of_RegistroRespuestaConsultaPagosType;
  FRegistroRespuestaConsultaPagos_Specified := True;
end;

function RespuestaConsultaPagosType.RegistroRespuestaConsultaPagos_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaPagos_Specified;
end;

function RespuestaConsultaPagosType.GetClavePaginacion(Index: Integer): Double;
begin
  Result := FClavePaginacion;
end;

procedure RespuestaConsultaPagosType.SetClavePaginacion(Index: Integer; const ADouble: Double);
begin
  FClavePaginacion := ADouble;
  FClavePaginacion_Specified := True;
end;

function RespuestaConsultaPagosType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroCobrosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRFiltroCobrosType.GetIDFactura: IDFacturaExpedidaBCType;
begin
  Result := FIDFactura;
end;

procedure LRFiltroCobrosType.SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
begin
  FIDFactura := AIDFacturaExpedidaBCType;
end;

function LRFiltroCobrosType.GetClavePaginacion(Index: Integer): Double;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroCobrosType.SetClavePaginacion(Index: Integer; const ADouble: Double);
begin
  FClavePaginacion := ADouble;
  FClavePaginacion_Specified := True;
end;

function LRFiltroCobrosType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRConsultaRecibidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaRecibidasType.GetFiltroConsulta: LRFiltroRecibidasType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaRecibidasType.SetFiltroConsulta(const ALRFiltroRecibidasType: LRFiltroRecibidasType);
begin
  FFiltroConsulta := ALRFiltroRecibidasType;
end;

constructor LRConsultaEmitidasType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor LRConsultaEmitidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaEmitidasType.GetFiltroConsulta: LRFiltroEmitidasType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaEmitidasType.SetFiltroConsulta(const ALRFiltroEmitidasType: LRFiltroEmitidasType);
begin
  FFiltroConsulta := ALRFiltroEmitidasType;
end;

destructor ClavePaginacion2.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function ClavePaginacion2.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure ClavePaginacion2.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

destructor ClavePaginacion3.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function ClavePaginacion3.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure ClavePaginacion3.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

destructor LRConsultaDetOperIntracomunitariasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaDetOperIntracomunitariasType.GetFiltroConsulta: LRFiltroDetOperIntracomunitariasType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaDetOperIntracomunitariasType.SetFiltroConsulta(const ALRFiltroDetOperIntracomunitariasType: LRFiltroDetOperIntracomunitariasType);
begin
  FFiltroConsulta := ALRFiltroDetOperIntracomunitariasType;
end;

destructor LRConsultaCobrosMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaCobrosMetalicoType.GetFiltroConsulta: LRFiltroCobrosMetalicoType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaCobrosMetalicoType.SetFiltroConsulta(const ALRFiltroCobrosMetalicoType: LRFiltroCobrosMetalicoType);
begin
  FFiltroConsulta := ALRFiltroCobrosMetalicoType;
end;

destructor LRConsultaAgenciasViajesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaAgenciasViajesType.GetFiltroConsulta: LRFiltroAgenciasViajesType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaAgenciasViajesType.SetFiltroConsulta(const ALRFiltroAgenciasViajesType: LRFiltroAgenciasViajesType);
begin
  FFiltroConsulta := ALRFiltroAgenciasViajesType;
end;

constructor ConsultaLRFactInformadasClienteType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor ConsultaLRFactInformadasClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function ConsultaLRFactInformadasClienteType.GetFiltroConsulta: LRFiltroFactInformadasClienteType;
begin
  Result := FFiltroConsulta;
end;

procedure ConsultaLRFactInformadasClienteType.SetFiltroConsulta(const ALRFiltroFactInformadasClienteType: LRFiltroFactInformadasClienteType);
begin
  FFiltroConsulta := ALRFiltroFactInformadasClienteType;
end;

constructor ConsultaLRFactInformadasAgrupadasClienteType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor ConsultaLRFactInformadasAgrupadasClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function ConsultaLRFactInformadasAgrupadasClienteType.GetFiltroConsulta: LRFiltroFactInformadasAgrupadasClienteType;
begin
  Result := FFiltroConsulta;
end;

procedure ConsultaLRFactInformadasAgrupadasClienteType.SetFiltroConsulta(const ALRFiltroFactInformadasAgrupadasClienteType: LRFiltroFactInformadasAgrupadasClienteType);
begin
  FFiltroConsulta := ALRFiltroFactInformadasAgrupadasClienteType;
end;

destructor LRConsultaBienesInversionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFiltroConsulta);
  inherited Destroy;
end;

function LRConsultaBienesInversionType.GetFiltroConsulta: LRFiltroBienInversionType;
begin
  Result := FFiltroConsulta;
end;

procedure LRConsultaBienesInversionType.SetFiltroConsulta(const ALRFiltroBienInversionType: LRFiltroBienInversionType);
begin
  FFiltroConsulta := ALRFiltroBienInversionType;
end;

function RespuestaConsultaLRFacturasAgrupadasClienteType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaLRFacturasAgrupadasClienteType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

function RespuestaConsultaLRFacturasClienteType.GetIndicadorPaginacion: IndicadorPaginacionType;
begin
  Result := FIndicadorPaginacion;
end;

procedure RespuestaConsultaLRFacturasClienteType.SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
begin
  FIndicadorPaginacion := AIndicadorPaginacionType;
end;

function RespuestaConsultaLRFacturasClienteType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaLRFacturasClienteType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

destructor RegistroRespuestaConsultaFactInformadasClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FDatosFacturaInformadaCliente);
  System.SysUtils.FreeAndNil(FCliente);
  System.SysUtils.FreeAndNil(FEstadoFactura);
  inherited Destroy;
end;

function RegistroRespuestaConsultaFactInformadasClienteType.GetIDFactura: IDFacturaImputacionType;
begin
  Result := FIDFactura;
end;

procedure RegistroRespuestaConsultaFactInformadasClienteType.SetIDFactura(const AIDFacturaImputacionType: IDFacturaImputacionType);
begin
  FIDFactura := AIDFacturaImputacionType;
end;

function RegistroRespuestaConsultaFactInformadasClienteType.GetPeriodoLiquidacion: PeriodoLiquidacion10;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RegistroRespuestaConsultaFactInformadasClienteType.SetPeriodoLiquidacion(const APeriodoLiquidacion10: PeriodoLiquidacion10);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion10;
end;

function RegistroRespuestaConsultaFactInformadasClienteType.GetDatosFacturaInformadaCliente: FacturaRespuestaInformadaClienteType;
begin
  Result := FDatosFacturaInformadaCliente;
end;

procedure RegistroRespuestaConsultaFactInformadasClienteType.SetDatosFacturaInformadaCliente(const AFacturaRespuestaInformadaClienteType: FacturaRespuestaInformadaClienteType);
begin
  FDatosFacturaInformadaCliente := AFacturaRespuestaInformadaClienteType;
end;

function RegistroRespuestaConsultaFactInformadasClienteType.GetCliente: PersonaFisicaJuridicaUnicaESType;
begin
  Result := FCliente;
end;

procedure RegistroRespuestaConsultaFactInformadasClienteType.SetCliente(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FCliente := APersonaFisicaJuridicaUnicaESType;
end;

function RegistroRespuestaConsultaFactInformadasClienteType.GetEstadoFactura: EstadoFacturaImputacionType;
begin
  Result := FEstadoFactura;
end;

procedure RegistroRespuestaConsultaFactInformadasClienteType.SetEstadoFactura(const AEstadoFacturaImputacionType: EstadoFacturaImputacionType);
begin
  FEstadoFactura := AEstadoFacturaImputacionType;
end;

constructor RespuestaConsultaLRFactInformadasAgrupadasClienteType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor RespuestaConsultaLRFactInformadasAgrupadasClienteType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente[I]);
  System.SetLength(FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRFactInformadasAgrupadasClienteType.GetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray(Index: Integer): RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;
begin
  Result := FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente[Index];
end;

procedure RespuestaConsultaLRFactInformadasAgrupadasClienteType.SetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaFactInformadasAgrupadasClienteType);
begin
   FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente[Index] := Item;
end;

function RespuestaConsultaLRFactInformadasAgrupadasClienteType.GetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente) then
    Result := System.Length(FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRFactInformadasAgrupadasClienteType.SetRegistroRespuestaConsultaFactInformadasAgrupadasClienteTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente, Len);
end;

function RespuestaConsultaLRFactInformadasAgrupadasClienteType.GetRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente(Index: Integer): Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;
begin
  Result := FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente;
end;

procedure RespuestaConsultaLRFactInformadasAgrupadasClienteType.SetRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente(Index: Integer; const AArray_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType: Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType);
begin
  FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente := AArray_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType;
  FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente_Specified := True;
end;

function RespuestaConsultaLRFactInformadasAgrupadasClienteType.RegistroRespuestaConsultaLRFactInformadasAgrupadasCliente_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRFactInformadasAgrupadasCliente_Specified;
end;

destructor RegistroRespuestaConsultaCobrosMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FDatosCobroMetalico);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoCobroMetalico);
  inherited Destroy;
end;

function RegistroRespuestaConsultaCobrosMetalicoType.GetDatosCobroMetalico: RespuestaCobrosMetalicoType;
begin
  Result := FDatosCobroMetalico;
end;

procedure RegistroRespuestaConsultaCobrosMetalicoType.SetDatosCobroMetalico(const ARespuestaCobrosMetalicoType: RespuestaCobrosMetalicoType);
begin
  FDatosCobroMetalico := ARespuestaCobrosMetalicoType;
end;

function RegistroRespuestaConsultaCobrosMetalicoType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaCobrosMetalicoType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaCobrosMetalicoType.GetEstadoCobroMetalico: EstadoFactura2Type;
begin
  Result := FEstadoCobroMetalico;
end;

procedure RegistroRespuestaConsultaCobrosMetalicoType.SetEstadoCobroMetalico(const AEstadoFactura2Type: EstadoFactura2Type);
begin
  FEstadoCobroMetalico := AEstadoFactura2Type;
end;

destructor RegistroRespuestaConsultaBienesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FDatosBienInversion);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoFactura);
  inherited Destroy;
end;

function RegistroRespuestaConsultaBienesType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure RegistroRespuestaConsultaBienesType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function RegistroRespuestaConsultaBienesType.GetDatosBienInversion: BienDeInversionType;
begin
  Result := FDatosBienInversion;
end;

procedure RegistroRespuestaConsultaBienesType.SetDatosBienInversion(const ABienDeInversionType: BienDeInversionType);
begin
  FDatosBienInversion := ABienDeInversionType;
end;

function RegistroRespuestaConsultaBienesType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaBienesType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaBienesType.GetEstadoFactura: EstadoFactura2Type;
begin
  Result := FEstadoFactura;
end;

procedure RegistroRespuestaConsultaBienesType.SetEstadoFactura(const AEstadoFactura2Type: EstadoFactura2Type);
begin
  FEstadoFactura := AEstadoFactura2Type;
end;

destructor RegistroRespuestaConsultaDetOperIntracomunitariasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FDatosDetOperIntracomunitarias);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoFactura);
  inherited Destroy;
end;

function RegistroRespuestaConsultaDetOperIntracomunitariasType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure RegistroRespuestaConsultaDetOperIntracomunitariasType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function RegistroRespuestaConsultaDetOperIntracomunitariasType.GetDatosDetOperIntracomunitarias: RespuestaDetOperIntracomunitariaType;
begin
  Result := FDatosDetOperIntracomunitarias;
end;

procedure RegistroRespuestaConsultaDetOperIntracomunitariasType.SetDatosDetOperIntracomunitarias(const ARespuestaDetOperIntracomunitariaType: RespuestaDetOperIntracomunitariaType);
begin
  FDatosDetOperIntracomunitarias := ARespuestaDetOperIntracomunitariaType;
end;

function RegistroRespuestaConsultaDetOperIntracomunitariasType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaDetOperIntracomunitariasType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaDetOperIntracomunitariasType.GetEstadoFactura: EstadoFactura2Type;
begin
  Result := FEstadoFactura;
end;

procedure RegistroRespuestaConsultaDetOperIntracomunitariasType.SetEstadoFactura(const AEstadoFactura2Type: EstadoFactura2Type);
begin
  FEstadoFactura := AEstadoFactura2Type;
end;

destructor RegistroRespuestaConsultaRecibidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FDatosFacturaRecibida);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoFactura);
  System.SysUtils.FreeAndNil(FDatosDescuadreContraparte);
  inherited Destroy;
end;

function RegistroRespuestaConsultaRecibidasType.GetIDFactura: IDFacturaRecibidaType;
begin
  Result := FIDFactura;
end;

procedure RegistroRespuestaConsultaRecibidasType.SetIDFactura(const AIDFacturaRecibidaType: IDFacturaRecibidaType);
begin
  FIDFactura := AIDFacturaRecibidaType;
end;

function RegistroRespuestaConsultaRecibidasType.GetDatosFacturaRecibida: FacturaRespuestaRecibidaType;
begin
  Result := FDatosFacturaRecibida;
end;

procedure RegistroRespuestaConsultaRecibidasType.SetDatosFacturaRecibida(const AFacturaRespuestaRecibidaType: FacturaRespuestaRecibidaType);
begin
  FDatosFacturaRecibida := AFacturaRespuestaRecibidaType;
end;

function RegistroRespuestaConsultaRecibidasType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaRecibidasType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaRecibidasType.GetEstadoFactura: EstadoFacturaType;
begin
  Result := FEstadoFactura;
end;

procedure RegistroRespuestaConsultaRecibidasType.SetEstadoFactura(const AEstadoFacturaType: EstadoFacturaType);
begin
  FEstadoFactura := AEstadoFacturaType;
end;

function RegistroRespuestaConsultaRecibidasType.GetDatosDescuadreContraparte(Index: Integer): DatosDescuadreContraparteType;
begin
  Result := FDatosDescuadreContraparte;
end;

procedure RegistroRespuestaConsultaRecibidasType.SetDatosDescuadreContraparte(Index: Integer; const ADatosDescuadreContraparteType: DatosDescuadreContraparteType);
begin
  FDatosDescuadreContraparte := ADatosDescuadreContraparteType;
  FDatosDescuadreContraparte_Specified := True;
end;

function RegistroRespuestaConsultaRecibidasType.DatosDescuadreContraparte_Specified(Index: Integer): boolean;
begin
  Result := FDatosDescuadreContraparte_Specified;
end;

constructor RespuestaConsultaLRFactInformadasClienteType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor RespuestaConsultaLRFactInformadasClienteType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRFactInformadasCliente)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRFactInformadasCliente[I]);
  System.SetLength(FRegistroRespuestaConsultaLRFactInformadasCliente, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRFactInformadasClienteType.GetRegistroRespuestaConsultaFactInformadasClienteTypeArray(Index: Integer): RegistroRespuestaConsultaFactInformadasClienteType;
begin
  Result := FRegistroRespuestaConsultaLRFactInformadasCliente[Index];
end;

procedure RespuestaConsultaLRFactInformadasClienteType.SetRegistroRespuestaConsultaFactInformadasClienteTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaFactInformadasClienteType);
begin
   FRegistroRespuestaConsultaLRFactInformadasCliente[Index] := Item;
end;

function RespuestaConsultaLRFactInformadasClienteType.GetRegistroRespuestaConsultaFactInformadasClienteTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRFactInformadasCliente) then
    Result := System.Length(FRegistroRespuestaConsultaLRFactInformadasCliente)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRFactInformadasClienteType.SetRegistroRespuestaConsultaFactInformadasClienteTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRFactInformadasCliente, Len);
end;

function RespuestaConsultaLRFactInformadasClienteType.GetRegistroRespuestaConsultaLRFactInformadasCliente(Index: Integer): Array_Of_RegistroRespuestaConsultaFactInformadasClienteType;
begin
  Result := FRegistroRespuestaConsultaLRFactInformadasCliente;
end;

procedure RespuestaConsultaLRFactInformadasClienteType.SetRegistroRespuestaConsultaLRFactInformadasCliente(Index: Integer; const AArray_Of_RegistroRespuestaConsultaFactInformadasClienteType: Array_Of_RegistroRespuestaConsultaFactInformadasClienteType);
begin
  FRegistroRespuestaConsultaLRFactInformadasCliente := AArray_Of_RegistroRespuestaConsultaFactInformadasClienteType;
  FRegistroRespuestaConsultaLRFactInformadasCliente_Specified := True;
end;

function RespuestaConsultaLRFactInformadasClienteType.RegistroRespuestaConsultaLRFactInformadasCliente_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRFactInformadasCliente_Specified;
end;

destructor RespuestaConsultaLRFacturasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  inherited Destroy;
end;

function RespuestaConsultaLRFacturasType.GetPeriodoLiquidacion: PeriodoLiquidacion11;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaConsultaLRFacturasType.SetPeriodoLiquidacion(const APeriodoLiquidacion11: PeriodoLiquidacion11);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion11;
end;

function RespuestaConsultaLRFacturasType.GetIndicadorPaginacion: IndicadorPaginacionType;
begin
  Result := FIndicadorPaginacion;
end;

procedure RespuestaConsultaLRFacturasType.SetIndicadorPaginacion(const AIndicadorPaginacionType: IndicadorPaginacionType);
begin
  FIndicadorPaginacion := AIndicadorPaginacionType;
end;

function RespuestaConsultaLRFacturasType.GetResultadoConsulta: ResultadoConsultaType;
begin
  Result := FResultadoConsulta;
end;

procedure RespuestaConsultaLRFacturasType.SetResultadoConsulta(const AResultadoConsultaType: ResultadoConsultaType);
begin
  FResultadoConsulta := AResultadoConsultaType;
end;

constructor RespuestaConsultaLRFacturasEmitidasType.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor RespuestaConsultaLRFacturasEmitidasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRFacturasEmitidas)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRFacturasEmitidas[I]);
  System.SetLength(FRegistroRespuestaConsultaLRFacturasEmitidas, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRFacturasEmitidasType.GetRegistroRespuestaConsultaEmitidasTypeArray(Index: Integer): RegistroRespuestaConsultaEmitidasType;
begin
  Result := FRegistroRespuestaConsultaLRFacturasEmitidas[Index];
end;

procedure RespuestaConsultaLRFacturasEmitidasType.SetRegistroRespuestaConsultaEmitidasTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaEmitidasType);
begin
   FRegistroRespuestaConsultaLRFacturasEmitidas[Index] := Item;
end;

function RespuestaConsultaLRFacturasEmitidasType.GetRegistroRespuestaConsultaEmitidasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRFacturasEmitidas) then
    Result := System.Length(FRegistroRespuestaConsultaLRFacturasEmitidas)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRFacturasEmitidasType.SetRegistroRespuestaConsultaEmitidasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRFacturasEmitidas, Len);
end;

function RespuestaConsultaLRFacturasEmitidasType.GetRegistroRespuestaConsultaLRFacturasEmitidas(Index: Integer): Array_Of_RegistroRespuestaConsultaEmitidasType;
begin
  Result := FRegistroRespuestaConsultaLRFacturasEmitidas;
end;

procedure RespuestaConsultaLRFacturasEmitidasType.SetRegistroRespuestaConsultaLRFacturasEmitidas(Index: Integer; const AArray_Of_RegistroRespuestaConsultaEmitidasType: Array_Of_RegistroRespuestaConsultaEmitidasType);
begin
  FRegistroRespuestaConsultaLRFacturasEmitidas := AArray_Of_RegistroRespuestaConsultaEmitidasType;
  FRegistroRespuestaConsultaLRFacturasEmitidas_Specified := True;
end;

function RespuestaConsultaLRFacturasEmitidasType.RegistroRespuestaConsultaLRFacturasEmitidas_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRFacturasEmitidas_Specified;
end;

destructor RespuestaConsultaLRFacturasRecibidasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRFacturasRecibidas)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRFacturasRecibidas[I]);
  System.SetLength(FRegistroRespuestaConsultaLRFacturasRecibidas, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRFacturasRecibidasType.GetRegistroRespuestaConsultaRecibidasTypeArray(Index: Integer): RegistroRespuestaConsultaRecibidasType;
begin
  Result := FRegistroRespuestaConsultaLRFacturasRecibidas[Index];
end;

procedure RespuestaConsultaLRFacturasRecibidasType.SetRegistroRespuestaConsultaRecibidasTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaRecibidasType);
begin
   FRegistroRespuestaConsultaLRFacturasRecibidas[Index] := Item;
end;

function RespuestaConsultaLRFacturasRecibidasType.GetRegistroRespuestaConsultaRecibidasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRFacturasRecibidas) then
    Result := System.Length(FRegistroRespuestaConsultaLRFacturasRecibidas)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRFacturasRecibidasType.SetRegistroRespuestaConsultaRecibidasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRFacturasRecibidas, Len);
end;

function RespuestaConsultaLRFacturasRecibidasType.GetRegistroRespuestaConsultaLRFacturasRecibidas(Index: Integer): Array_Of_RegistroRespuestaConsultaRecibidasType;
begin
  Result := FRegistroRespuestaConsultaLRFacturasRecibidas;
end;

procedure RespuestaConsultaLRFacturasRecibidasType.SetRegistroRespuestaConsultaLRFacturasRecibidas(Index: Integer; const AArray_Of_RegistroRespuestaConsultaRecibidasType: Array_Of_RegistroRespuestaConsultaRecibidasType);
begin
  FRegistroRespuestaConsultaLRFacturasRecibidas := AArray_Of_RegistroRespuestaConsultaRecibidasType;
  FRegistroRespuestaConsultaLRFacturasRecibidas_Specified := True;
end;

function RespuestaConsultaLRFacturasRecibidasType.RegistroRespuestaConsultaLRFacturasRecibidas_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRFacturasRecibidas_Specified;
end;

destructor RespuestaConsultaLRDetOperIntracomunitariasType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRDetOperIntracomunitarias)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRDetOperIntracomunitarias[I]);
  System.SetLength(FRegistroRespuestaConsultaLRDetOperIntracomunitarias, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRDetOperIntracomunitariasType.GetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArray(Index: Integer): RegistroRespuestaConsultaDetOperIntracomunitariasType;
begin
  Result := FRegistroRespuestaConsultaLRDetOperIntracomunitarias[Index];
end;

procedure RespuestaConsultaLRDetOperIntracomunitariasType.SetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaDetOperIntracomunitariasType);
begin
   FRegistroRespuestaConsultaLRDetOperIntracomunitarias[Index] := Item;
end;

function RespuestaConsultaLRDetOperIntracomunitariasType.GetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRDetOperIntracomunitarias) then
    Result := System.Length(FRegistroRespuestaConsultaLRDetOperIntracomunitarias)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRDetOperIntracomunitariasType.SetRegistroRespuestaConsultaDetOperIntracomunitariasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRDetOperIntracomunitarias, Len);
end;

function RespuestaConsultaLRDetOperIntracomunitariasType.GetRegistroRespuestaConsultaLRDetOperIntracomunitarias(Index: Integer): Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType;
begin
  Result := FRegistroRespuestaConsultaLRDetOperIntracomunitarias;
end;

procedure RespuestaConsultaLRDetOperIntracomunitariasType.SetRegistroRespuestaConsultaLRDetOperIntracomunitarias(Index: Integer; const AArray_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType: Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType);
begin
  FRegistroRespuestaConsultaLRDetOperIntracomunitarias := AArray_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType;
  FRegistroRespuestaConsultaLRDetOperIntracomunitarias_Specified := True;
end;

function RespuestaConsultaLRDetOperIntracomunitariasType.RegistroRespuestaConsultaLRDetOperIntracomunitarias_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRDetOperIntracomunitarias_Specified;
end;

destructor RespuestaConsultaLRAgenciasViajesType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRAgenciasViajes)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRAgenciasViajes[I]);
  System.SetLength(FRegistroRespuestaConsultaLRAgenciasViajes, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRAgenciasViajesType.GetRegistroRespuestaConsultaAgenciasViajesTypeArray(Index: Integer): RegistroRespuestaConsultaAgenciasViajesType;
begin
  Result := FRegistroRespuestaConsultaLRAgenciasViajes[Index];
end;

procedure RespuestaConsultaLRAgenciasViajesType.SetRegistroRespuestaConsultaAgenciasViajesTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaAgenciasViajesType);
begin
   FRegistroRespuestaConsultaLRAgenciasViajes[Index] := Item;
end;

function RespuestaConsultaLRAgenciasViajesType.GetRegistroRespuestaConsultaAgenciasViajesTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRAgenciasViajes) then
    Result := System.Length(FRegistroRespuestaConsultaLRAgenciasViajes)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRAgenciasViajesType.SetRegistroRespuestaConsultaAgenciasViajesTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRAgenciasViajes, Len);
end;

function RespuestaConsultaLRAgenciasViajesType.GetRegistroRespuestaConsultaLRAgenciasViajes(Index: Integer): Array_Of_RegistroRespuestaConsultaAgenciasViajesType;
begin
  Result := FRegistroRespuestaConsultaLRAgenciasViajes;
end;

procedure RespuestaConsultaLRAgenciasViajesType.SetRegistroRespuestaConsultaLRAgenciasViajes(Index: Integer; const AArray_Of_RegistroRespuestaConsultaAgenciasViajesType: Array_Of_RegistroRespuestaConsultaAgenciasViajesType);
begin
  FRegistroRespuestaConsultaLRAgenciasViajes := AArray_Of_RegistroRespuestaConsultaAgenciasViajesType;
  FRegistroRespuestaConsultaLRAgenciasViajes_Specified := True;
end;

function RespuestaConsultaLRAgenciasViajesType.RegistroRespuestaConsultaLRAgenciasViajes_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRAgenciasViajes_Specified;
end;

destructor RespuestaConsultaLRCobrosMetalicoType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRCobrosMetalico)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRCobrosMetalico[I]);
  System.SetLength(FRegistroRespuestaConsultaLRCobrosMetalico, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRCobrosMetalicoType.GetRegistroRespuestaConsultaCobrosMetalicoTypeArray(Index: Integer): RegistroRespuestaConsultaCobrosMetalicoType;
begin
  Result := FRegistroRespuestaConsultaLRCobrosMetalico[Index];
end;

procedure RespuestaConsultaLRCobrosMetalicoType.SetRegistroRespuestaConsultaCobrosMetalicoTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaCobrosMetalicoType);
begin
   FRegistroRespuestaConsultaLRCobrosMetalico[Index] := Item;
end;

function RespuestaConsultaLRCobrosMetalicoType.GetRegistroRespuestaConsultaCobrosMetalicoTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRCobrosMetalico) then
    Result := System.Length(FRegistroRespuestaConsultaLRCobrosMetalico)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRCobrosMetalicoType.SetRegistroRespuestaConsultaCobrosMetalicoTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRCobrosMetalico, Len);
end;

function RespuestaConsultaLRCobrosMetalicoType.GetRegistroRespuestaConsultaLRCobrosMetalico(Index: Integer): Array_Of_RegistroRespuestaConsultaCobrosMetalicoType;
begin
  Result := FRegistroRespuestaConsultaLRCobrosMetalico;
end;

procedure RespuestaConsultaLRCobrosMetalicoType.SetRegistroRespuestaConsultaLRCobrosMetalico(Index: Integer; const AArray_Of_RegistroRespuestaConsultaCobrosMetalicoType: Array_Of_RegistroRespuestaConsultaCobrosMetalicoType);
begin
  FRegistroRespuestaConsultaLRCobrosMetalico := AArray_Of_RegistroRespuestaConsultaCobrosMetalicoType;
  FRegistroRespuestaConsultaLRCobrosMetalico_Specified := True;
end;

function RespuestaConsultaLRCobrosMetalicoType.RegistroRespuestaConsultaLRCobrosMetalico_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRCobrosMetalico_Specified;
end;

destructor RespuestaConsultaLRBienesInversionType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLRBienesInversion)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLRBienesInversion[I]);
  System.SetLength(FRegistroRespuestaConsultaLRBienesInversion, 0);
  inherited Destroy;
end;

function RespuestaConsultaLRBienesInversionType.GetRegistroRespuestaConsultaBienesTypeArray(Index: Integer): RegistroRespuestaConsultaBienesType;
begin
  Result := FRegistroRespuestaConsultaLRBienesInversion[Index];
end;

procedure RespuestaConsultaLRBienesInversionType.SetRegistroRespuestaConsultaBienesTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaBienesType);
begin
   FRegistroRespuestaConsultaLRBienesInversion[Index] := Item;
end;

function RespuestaConsultaLRBienesInversionType.GetRegistroRespuestaConsultaBienesTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLRBienesInversion) then
    Result := System.Length(FRegistroRespuestaConsultaLRBienesInversion)
  else
    Result := 0;
end;

procedure RespuestaConsultaLRBienesInversionType.SetRegistroRespuestaConsultaBienesTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLRBienesInversion, Len);
end;

function RespuestaConsultaLRBienesInversionType.GetRegistroRespuestaConsultaLRBienesInversion(Index: Integer): Array_Of_RegistroRespuestaConsultaBienesType;
begin
  Result := FRegistroRespuestaConsultaLRBienesInversion;
end;

procedure RespuestaConsultaLRBienesInversionType.SetRegistroRespuestaConsultaLRBienesInversion(Index: Integer; const AArray_Of_RegistroRespuestaConsultaBienesType: Array_Of_RegistroRespuestaConsultaBienesType);
begin
  FRegistroRespuestaConsultaLRBienesInversion := AArray_Of_RegistroRespuestaConsultaBienesType;
  FRegistroRespuestaConsultaLRBienesInversion_Specified := True;
end;

function RespuestaConsultaLRBienesInversionType.RegistroRespuestaConsultaLRBienesInversion_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLRBienesInversion_Specified;
end;

destructor RespuestaConsultaLROperacionesSegurosType.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroRespuestaConsultaLROperacionesSeguros)-1 do
    System.SysUtils.FreeAndNil(FRegistroRespuestaConsultaLROperacionesSeguros[I]);
  System.SetLength(FRegistroRespuestaConsultaLROperacionesSeguros, 0);
  inherited Destroy;
end;

function RespuestaConsultaLROperacionesSegurosType.GetRegistroRespuestaConsultaOperacionesSegurosTypeArray(Index: Integer): RegistroRespuestaConsultaOperacionesSegurosType;
begin
  Result := FRegistroRespuestaConsultaLROperacionesSeguros[Index];
end;

procedure RespuestaConsultaLROperacionesSegurosType.SetRegistroRespuestaConsultaOperacionesSegurosTypeArray(Index: Integer; const Item: RegistroRespuestaConsultaOperacionesSegurosType);
begin
   FRegistroRespuestaConsultaLROperacionesSeguros[Index] := Item;
end;

function RespuestaConsultaLROperacionesSegurosType.GetRegistroRespuestaConsultaOperacionesSegurosTypeArrayLength: Integer;
begin
  if Assigned(FRegistroRespuestaConsultaLROperacionesSeguros) then
    Result := System.Length(FRegistroRespuestaConsultaLROperacionesSeguros)
  else
    Result := 0;
end;

procedure RespuestaConsultaLROperacionesSegurosType.SetRegistroRespuestaConsultaOperacionesSegurosTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroRespuestaConsultaLROperacionesSeguros, Len);
end;

function RespuestaConsultaLROperacionesSegurosType.GetRegistroRespuestaConsultaLROperacionesSeguros(Index: Integer): Array_Of_RegistroRespuestaConsultaOperacionesSegurosType;
begin
  Result := FRegistroRespuestaConsultaLROperacionesSeguros;
end;

procedure RespuestaConsultaLROperacionesSegurosType.SetRegistroRespuestaConsultaLROperacionesSeguros(Index: Integer; const AArray_Of_RegistroRespuestaConsultaOperacionesSegurosType: Array_Of_RegistroRespuestaConsultaOperacionesSegurosType);
begin
  FRegistroRespuestaConsultaLROperacionesSeguros := AArray_Of_RegistroRespuestaConsultaOperacionesSegurosType;
  FRegistroRespuestaConsultaLROperacionesSeguros_Specified := True;
end;

function RespuestaConsultaLROperacionesSegurosType.RegistroRespuestaConsultaLROperacionesSeguros_Specified(Index: Integer): boolean;
begin
  Result := FRegistroRespuestaConsultaLROperacionesSeguros_Specified;
end;

destructor RegistroRespuestaConsultaEmitidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FDatosFacturaEmitida);
  System.SysUtils.FreeAndNil(FDatosPresentacion);
  System.SysUtils.FreeAndNil(FEstadoFactura);
  System.SysUtils.FreeAndNil(FDatosDescuadreContraparte);
  inherited Destroy;
end;

function RegistroRespuestaConsultaEmitidasType.GetIDFactura: IDFacturaExpedidaType;
begin
  Result := FIDFactura;
end;

procedure RegistroRespuestaConsultaEmitidasType.SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
begin
  FIDFactura := AIDFacturaExpedidaType;
end;

function RegistroRespuestaConsultaEmitidasType.GetDatosFacturaEmitida: FacturaRespuestaExpedidaType;
begin
  Result := FDatosFacturaEmitida;
end;

procedure RegistroRespuestaConsultaEmitidasType.SetDatosFacturaEmitida(const AFacturaRespuestaExpedidaType: FacturaRespuestaExpedidaType);
begin
  FDatosFacturaEmitida := AFacturaRespuestaExpedidaType;
end;

function RegistroRespuestaConsultaEmitidasType.GetDatosPresentacion: DatosPresentacion2Type;
begin
  Result := FDatosPresentacion;
end;

procedure RegistroRespuestaConsultaEmitidasType.SetDatosPresentacion(const ADatosPresentacion2Type: DatosPresentacion2Type);
begin
  FDatosPresentacion := ADatosPresentacion2Type;
end;

function RegistroRespuestaConsultaEmitidasType.GetEstadoFactura: EstadoFacturaType;
begin
  Result := FEstadoFactura;
end;

procedure RegistroRespuestaConsultaEmitidasType.SetEstadoFactura(const AEstadoFacturaType: EstadoFacturaType);
begin
  FEstadoFactura := AEstadoFacturaType;
end;

function RegistroRespuestaConsultaEmitidasType.GetDatosDescuadreContraparte(Index: Integer): DatosDescuadreContraparteType;
begin
  Result := FDatosDescuadreContraparte;
end;

procedure RegistroRespuestaConsultaEmitidasType.SetDatosDescuadreContraparte(Index: Integer; const ADatosDescuadreContraparteType: DatosDescuadreContraparteType);
begin
  FDatosDescuadreContraparte := ADatosDescuadreContraparteType;
  FDatosDescuadreContraparte_Specified := True;
end;

function RegistroRespuestaConsultaEmitidasType.DatosDescuadreContraparte_Specified(Index: Integer): boolean;
begin
  Result := FDatosDescuadreContraparte_Specified;
end;

destructor LRBajaAgenciasViajesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function LRBajaAgenciasViajesType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LRBajaAgenciasViajesType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

destructor LRCobrosMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function LRCobrosMetalicoType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LRCobrosMetalicoType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function LRCobrosMetalicoType.GetImporteTotal: ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure LRCobrosMetalicoType.SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
end;

function LRCobrosMetalicoType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure LRCobrosMetalicoType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function LRCobrosMetalicoType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

destructor LRBajaCobrosMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function LRBajaCobrosMetalicoType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LRBajaCobrosMetalicoType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

destructor LRBienesInversionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FBienesInversion);
  inherited Destroy;
end;

function LRBienesInversionType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure LRBienesInversionType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function LRBienesInversionType.GetBienesInversion: BienDeInversionType;
begin
  Result := FBienesInversion;
end;

procedure LRBienesInversionType.SetBienesInversion(const ABienDeInversionType: BienDeInversionType);
begin
  FBienesInversion := ABienDeInversionType;
end;

destructor LRBajaBienesInversionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRBajaBienesInversionType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure LRBajaBienesInversionType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function LRBajaBienesInversionType.GetIdentificacionBien: TextMax40Type;
begin
  Result := FIdentificacionBien;
end;

procedure LRBajaBienesInversionType.SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionBien := ATextMax40Type;
end;

function LRBajaBienesInversionType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure LRBajaBienesInversionType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function LRBajaBienesInversionType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

destructor LRAgenciasViajesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function LRAgenciasViajesType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LRAgenciasViajesType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function LRAgenciasViajesType.GetImporteTotal: ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure LRAgenciasViajesType.SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
end;

function LRAgenciasViajesType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure LRAgenciasViajesType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function LRAgenciasViajesType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

destructor LRBajaOperacionIntracomunitariaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRBajaOperacionIntracomunitariaType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure LRBajaOperacionIntracomunitariaType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function LRBajaOperacionIntracomunitariaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure LRBajaOperacionIntracomunitariaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function LRBajaOperacionIntracomunitariaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

constructor SuministroLRFacturasEmitidas.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor SuministroLRFacturasEmitidas.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRFacturasEmitidas)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRFacturasEmitidas[I]);
  System.SetLength(FRegistroLRFacturasEmitidas, 0);
  inherited Destroy;
end;

function SuministroLRFacturasEmitidas.GetLRfacturasEmitidasTypeArray(Index: Integer): LRfacturasEmitidasType;
begin
  Result := FRegistroLRFacturasEmitidas[Index];
end;

procedure SuministroLRFacturasEmitidas.SetLRfacturasEmitidasTypeArray(Index: Integer; const Item: LRfacturasEmitidasType);
begin
   FRegistroLRFacturasEmitidas[Index] := Item;
end;

function SuministroLRFacturasEmitidas.GetLRfacturasEmitidasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRFacturasEmitidas) then
    Result := System.Length(FRegistroLRFacturasEmitidas)
  else
    Result := 0;
end;

procedure SuministroLRFacturasEmitidas.SetLRfacturasEmitidasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRFacturasEmitidas, Len);
end;

function SuministroLRFacturasEmitidas.GetRegistroLRFacturasEmitidas(Index: Integer): Array_Of_LRfacturasEmitidasType;
begin
  Result := FRegistroLRFacturasEmitidas;
end;

procedure SuministroLRFacturasEmitidas.SetRegistroLRFacturasEmitidas(Index: Integer; const AArray_Of_LRfacturasEmitidasType: Array_Of_LRfacturasEmitidasType);
begin
  FRegistroLRFacturasEmitidas := AArray_Of_LRfacturasEmitidasType;
end;

constructor BajaLRFacturasEmitidas.Create;
begin
  inherited Create;
  FSerializationOptions := [xoLiteralParam];
end;

destructor BajaLRFacturasEmitidas.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaExpedidas)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaExpedidas[I]);
  System.SetLength(FRegistroLRBajaExpedidas, 0);
  inherited Destroy;
end;

function BajaLRFacturasEmitidas.GetLRBajaExpedidasTypeArray(Index: Integer): LRBajaExpedidasType;
begin
  Result := FRegistroLRBajaExpedidas[Index];
end;

procedure BajaLRFacturasEmitidas.SetLRBajaExpedidasTypeArray(Index: Integer; const Item: LRBajaExpedidasType);
begin
   FRegistroLRBajaExpedidas[Index] := Item;
end;

function BajaLRFacturasEmitidas.GetLRBajaExpedidasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaExpedidas) then
    Result := System.Length(FRegistroLRBajaExpedidas)
  else
    Result := 0;
end;

procedure BajaLRFacturasEmitidas.SetLRBajaExpedidasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaExpedidas, Len);
end;

function BajaLRFacturasEmitidas.GetRegistroLRBajaExpedidas(Index: Integer): Array_Of_LRBajaExpedidasType;
begin
  Result := FRegistroLRBajaExpedidas;
end;

procedure BajaLRFacturasEmitidas.SetRegistroLRBajaExpedidas(Index: Integer; const AArray_Of_LRBajaExpedidasType: Array_Of_LRBajaExpedidasType);
begin
  FRegistroLRBajaExpedidas := AArray_Of_LRBajaExpedidasType;
end;

destructor LROperacionIntracomunitariaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FOperacionIntracomunitaria);
  inherited Destroy;
end;

function LROperacionIntracomunitariaType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure LROperacionIntracomunitariaType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function LROperacionIntracomunitariaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LROperacionIntracomunitariaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function LROperacionIntracomunitariaType.GetOperacionIntracomunitaria: OperacionIntracomunitariaType;
begin
  Result := FOperacionIntracomunitaria;
end;

procedure LROperacionIntracomunitariaType.SetOperacionIntracomunitaria(const AOperacionIntracomunitariaType: OperacionIntracomunitariaType);
begin
  FOperacionIntracomunitaria := AOperacionIntracomunitariaType;
end;

destructor LRFiltroCobrosMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroCobrosMetalicoType.GetContraparte(Index: Integer): ContraparteConsultaType;
begin
  Result := FContraparte;
end;

procedure LRFiltroCobrosMetalicoType.SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
begin
  FContraparte := AContraparteConsultaType;
  FContraparte_Specified := True;
end;

function LRFiltroCobrosMetalicoType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function LRFiltroCobrosMetalicoType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroCobrosMetalicoType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroCobrosMetalicoType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroCobrosMetalicoType.GetCobroModificado(Index: Integer): FacturaModificadaType;
begin
  Result := FCobroModificado;
end;

procedure LRFiltroCobrosMetalicoType.SetCobroModificado(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FCobroModificado := AFacturaModificadaType;
  FCobroModificado_Specified := True;
end;

function LRFiltroCobrosMetalicoType.CobroModificado_Specified(Index: Integer): boolean;
begin
  Result := FCobroModificado_Specified;
end;

function LRFiltroCobrosMetalicoType.GetClavePaginacion(Index: Integer): ClavePaginacion2;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroCobrosMetalicoType.SetClavePaginacion(Index: Integer; const AClavePaginacion2: ClavePaginacion2);
begin
  FClavePaginacion := AClavePaginacion2;
  FClavePaginacion_Specified := True;
end;

function LRFiltroCobrosMetalicoType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroAgenciasViajesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroAgenciasViajesType.GetContraparte(Index: Integer): ContraparteConsultaType;
begin
  Result := FContraparte;
end;

procedure LRFiltroAgenciasViajesType.SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
begin
  FContraparte := AContraparteConsultaType;
  FContraparte_Specified := True;
end;

function LRFiltroAgenciasViajesType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function LRFiltroAgenciasViajesType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroAgenciasViajesType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroAgenciasViajesType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroAgenciasViajesType.GetRegistroModificado(Index: Integer): FacturaModificadaType;
begin
  Result := FRegistroModificado;
end;

procedure LRFiltroAgenciasViajesType.SetRegistroModificado(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FRegistroModificado := AFacturaModificadaType;
  FRegistroModificado_Specified := True;
end;

function LRFiltroAgenciasViajesType.RegistroModificado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroModificado_Specified;
end;

function LRFiltroAgenciasViajesType.GetClavePaginacion(Index: Integer): ClavePaginacion3;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroAgenciasViajesType.SetClavePaginacion(Index: Integer; const AClavePaginacion3: ClavePaginacion3);
begin
  FClavePaginacion := AClavePaginacion3;
  FClavePaginacion_Specified := True;
end;

function LRFiltroAgenciasViajesType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroVentaBienesConsignaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroVentaBienesConsignaType.GetEjercicio: YearType;
begin
  Result := FEjercicio;
end;

procedure LRFiltroVentaBienesConsignaType.SetEjercicio(const AYearType: YearType);
begin
  FEjercicio := AYearType;
end;

function LRFiltroVentaBienesConsignaType.GetPeriodo: TipoPeriodoType;
begin
  Result := FPeriodo;
end;

procedure LRFiltroVentaBienesConsignaType.SetPeriodo(const ATipoPeriodoType: TipoPeriodoType);
begin
  FPeriodo := ATipoPeriodoType;
end;

function LRFiltroVentaBienesConsignaType.GetIdRegistro(Index: Integer): TextMax60Type;
begin
  Result := FIdRegistro;
end;

procedure LRFiltroVentaBienesConsignaType.SetIdRegistro(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FIdRegistro := ATextMax60Type;
  FIdRegistro_Specified := True;
end;

function LRFiltroVentaBienesConsignaType.IdRegistro_Specified(Index: Integer): boolean;
begin
  Result := FIdRegistro_Specified;
end;

function LRFiltroVentaBienesConsignaType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroVentaBienesConsignaType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroVentaBienesConsignaType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroVentaBienesConsignaType.GetOperacionModificada(Index: Integer): FacturaModificadaType;
begin
  Result := FOperacionModificada;
end;

procedure LRFiltroVentaBienesConsignaType.SetOperacionModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FOperacionModificada := AFacturaModificadaType;
  FOperacionModificada_Specified := True;
end;

function LRFiltroVentaBienesConsignaType.OperacionModificada_Specified(Index: Integer): boolean;
begin
  Result := FOperacionModificada_Specified;
end;

function LRFiltroVentaBienesConsignaType.GetClavePaginacion(Index: Integer): ClavePaginacion;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroVentaBienesConsignaType.SetClavePaginacion(Index: Integer; const AClavePaginacion: ClavePaginacion);
begin
  FClavePaginacion := AClavePaginacion;
  FClavePaginacion_Specified := True;
end;

function LRFiltroVentaBienesConsignaType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

function EstadoFacturaImputacionType.GetEstadoCuadre(Index: Integer): EstadoCuadreType;
begin
  Result := FEstadoCuadre;
end;

procedure EstadoFacturaImputacionType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
begin
  FEstadoCuadre := AEstadoCuadreType;
  FEstadoCuadre_Specified := True;
end;

function EstadoFacturaImputacionType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

function EstadoFacturaImputacionType.GetTimestampEstadoCuadre(Index: Integer): Timestamp;
begin
  Result := FTimestampEstadoCuadre;
end;

procedure EstadoFacturaImputacionType.SetTimestampEstadoCuadre(Index: Integer; const ATimestamp: Timestamp);
begin
  FTimestampEstadoCuadre := ATimestamp;
  FTimestampEstadoCuadre_Specified := True;
end;

function EstadoFacturaImputacionType.TimestampEstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FTimestampEstadoCuadre_Specified;
end;

destructor RegistroRespuestaConsultaFactInformadasAgrupadasClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FCliente);
  inherited Destroy;
end;

function RegistroRespuestaConsultaFactInformadasAgrupadasClienteType.GetCliente: PersonaFisicaJuridicaUnicaESType;
begin
  Result := FCliente;
end;

procedure RegistroRespuestaConsultaFactInformadasAgrupadasClienteType.SetCliente(const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FCliente := APersonaFisicaJuridicaUnicaESType;
end;

function RegistroRespuestaConsultaFactInformadasAgrupadasClienteType.GetNumeroFacturas: Tipo10Type;
begin
  Result := FNumeroFacturas;
end;

procedure RegistroRespuestaConsultaFactInformadasAgrupadasClienteType.SetNumeroFacturas(const ATipo10Type: Tipo10Type);
begin
  FNumeroFacturas := ATipo10Type;
end;

function DatosDescuadreContraparteType.GetSumBaseImponibleISP(Index: Integer): ImporteSgn14_2Type;
begin
  Result := FSumBaseImponibleISP;
end;

procedure DatosDescuadreContraparteType.SetSumBaseImponibleISP(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
begin
  FSumBaseImponibleISP := AImporteSgn14_2Type;
  FSumBaseImponibleISP_Specified := True;
end;

function DatosDescuadreContraparteType.SumBaseImponibleISP_Specified(Index: Integer): boolean;
begin
  Result := FSumBaseImponibleISP_Specified;
end;

function DatosDescuadreContraparteType.GetSumBaseImponible(Index: Integer): ImporteSgn14_2Type;
begin
  Result := FSumBaseImponible;
end;

procedure DatosDescuadreContraparteType.SetSumBaseImponible(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
begin
  FSumBaseImponible := AImporteSgn14_2Type;
  FSumBaseImponible_Specified := True;
end;

function DatosDescuadreContraparteType.SumBaseImponible_Specified(Index: Integer): boolean;
begin
  Result := FSumBaseImponible_Specified;
end;

function DatosDescuadreContraparteType.GetSumCuota(Index: Integer): ImporteSgn14_2Type;
begin
  Result := FSumCuota;
end;

procedure DatosDescuadreContraparteType.SetSumCuota(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
begin
  FSumCuota := AImporteSgn14_2Type;
  FSumCuota_Specified := True;
end;

function DatosDescuadreContraparteType.SumCuota_Specified(Index: Integer): boolean;
begin
  Result := FSumCuota_Specified;
end;

function DatosDescuadreContraparteType.GetSumCuotaRecargoEquivalencia(Index: Integer): ImporteSgn14_2Type;
begin
  Result := FSumCuotaRecargoEquivalencia;
end;

procedure DatosDescuadreContraparteType.SetSumCuotaRecargoEquivalencia(Index: Integer; const AImporteSgn14_2Type: ImporteSgn14_2Type);
begin
  FSumCuotaRecargoEquivalencia := AImporteSgn14_2Type;
  FSumCuotaRecargoEquivalencia_Specified := True;
end;

function DatosDescuadreContraparteType.SumCuotaRecargoEquivalencia_Specified(Index: Integer): boolean;
begin
  Result := FSumCuotaRecargoEquivalencia_Specified;
end;

function DatosDescuadreContraparteType.GetImporteTotal(Index: Integer): ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure DatosDescuadreContraparteType.SetImporteTotal(Index: Integer; const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
  FImporteTotal_Specified := True;
end;

function DatosDescuadreContraparteType.ImporteTotal_Specified(Index: Integer): boolean;
begin
  Result := FImporteTotal_Specified;
end;

destructor LRBajaExpedidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRBajaExpedidasType.GetIDFactura: IDFacturaExpedidaBCType;
begin
  Result := FIDFactura;
end;

procedure LRBajaExpedidasType.SetIDFactura(const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
begin
  FIDFactura := AIDFacturaExpedidaBCType;
end;

function LRBajaExpedidasType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure LRBajaExpedidasType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function LRBajaExpedidasType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

destructor LRFacturasRecibidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FFacturaRecibida);
  inherited Destroy;
end;

function LRFacturasRecibidasType.GetIDFactura: IDFacturaRecibidaType;
begin
  Result := FIDFactura;
end;

procedure LRFacturasRecibidasType.SetIDFactura(const AIDFacturaRecibidaType: IDFacturaRecibidaType);
begin
  FIDFactura := AIDFacturaRecibidaType;
end;

function LRFacturasRecibidasType.GetFacturaRecibida: FacturaRecibidaType;
begin
  Result := FFacturaRecibida;
end;

procedure LRFacturasRecibidasType.SetFacturaRecibida(const AFacturaRecibidaType: FacturaRecibidaType);
begin
  FFacturaRecibida := AFacturaRecibidaType;
end;

destructor LRBajaRecibidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function LRBajaRecibidasType.GetIDFactura: IDFacturaRecibidaNombreBCType;
begin
  Result := FIDFactura;
end;

procedure LRBajaRecibidasType.SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
begin
  FIDFactura := AIDFacturaRecibidaNombreBCType;
end;

function LRBajaRecibidasType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure LRBajaRecibidasType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function LRBajaRecibidasType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

destructor LRBajaRegistroLROperacionesSegurosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function LRBajaRegistroLROperacionesSegurosType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LRBajaRegistroLROperacionesSegurosType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function LRBajaRegistroLROperacionesSegurosType.GetClaveOperacion: ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure LRBajaRegistroLROperacionesSegurosType.SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
end;

destructor LROperacionesSegurosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function LROperacionesSegurosType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure LROperacionesSegurosType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function LROperacionesSegurosType.GetClaveOperacion: ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure LROperacionesSegurosType.SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
end;

function LROperacionesSegurosType.GetImporteTotal: ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure LROperacionesSegurosType.SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
end;

function LROperacionesSegurosType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure LROperacionesSegurosType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function LROperacionesSegurosType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

destructor RespuestaOperacionesSegurosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FEntidadSucedida);
  inherited Destroy;
end;

function RespuestaOperacionesSegurosType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaOperacionesSegurosType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaOperacionesSegurosType.GetClaveOperacion: ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure RespuestaOperacionesSegurosType.SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
end;

function RespuestaOperacionesSegurosType.GetImporteTotal: ImporteSgn12_2Type;
begin
  Result := FImporteTotal;
end;

procedure RespuestaOperacionesSegurosType.SetImporteTotal(const AImporteSgn12_2Type: ImporteSgn12_2Type);
begin
  FImporteTotal := AImporteSgn12_2Type;
end;

function RespuestaOperacionesSegurosType.GetEntidadSucedida(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FEntidadSucedida;
end;

procedure RespuestaOperacionesSegurosType.SetEntidadSucedida(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FEntidadSucedida := APersonaFisicaJuridicaUnicaESType;
  FEntidadSucedida_Specified := True;
end;

function RespuestaOperacionesSegurosType.EntidadSucedida_Specified(Index: Integer): boolean;
begin
  Result := FEntidadSucedida_Specified;
end;

function RegistroDuplicadoType.GetEstadoRegistro: EstadoRegistroSIIType2;
begin
  Result := FEstadoRegistro;
end;

procedure RegistroDuplicadoType.SetEstadoRegistro(const AEstadoRegistroSIIType2: EstadoRegistroSIIType2);
begin
  FEstadoRegistro := AEstadoRegistroSIIType2;
end;

function RegistroDuplicadoType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RegistroDuplicadoType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType: ErrorDetalleType);
begin
  FCodigoErrorRegistro := AErrorDetalleType;
  FCodigoErrorRegistro_Specified := True;
end;

function RegistroDuplicadoType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RegistroDuplicadoType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RegistroDuplicadoType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RegistroDuplicadoType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

destructor RespuestaComunitariaBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaComunitariaBajaType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaComunitariaBajaType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function RespuestaComunitariaBajaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaComunitariaBajaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaComunitariaBajaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaComunitariaBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaComunitariaBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaComunitariaBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaComunitariaBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaComunitariaBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaComunitariaBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaComunitariaBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaComunitariaBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaComunitariaBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaComunitariaBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaComunitariaBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaVentaBienesConsignaBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIdRegistroDeclarado);
  inherited Destroy;
end;

function RespuestaVentaBienesConsignaBajaType.GetIdRegistroDeclarado: IdRegistroDeclaradoType;
begin
  Result := FIdRegistroDeclarado;
end;

procedure RespuestaVentaBienesConsignaBajaType.SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
begin
  FIdRegistroDeclarado := AIdRegistroDeclaradoType;
end;

function RespuestaVentaBienesConsignaBajaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaVentaBienesConsignaBajaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaVentaBienesConsignaBajaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaVentaBienesConsignaBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaVentaBienesConsignaBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaVentaBienesConsignaBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaVentaBienesConsignaBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaVentaBienesConsignaBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaVentaBienesConsignaBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaVentaBienesConsignaBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaVentaBienesConsignaBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaVentaBienesConsignaBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaVentaBienesConsignaBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaVentaBienesConsignaBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaRecibidaBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaRecibidaBajaType.GetIDFactura: IDFacturaRecibidaNombreBCType;
begin
  Result := FIDFactura;
end;

procedure RespuestaRecibidaBajaType.SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
begin
  FIDFactura := AIDFacturaRecibidaNombreBCType;
end;

function RespuestaRecibidaBajaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaRecibidaBajaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaRecibidaBajaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaRecibidaBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaRecibidaBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaRecibidaBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaRecibidaBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaRecibidaBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaRecibidaBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaRecibidaBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaRecibidaBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaRecibidaBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaRecibidaBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaRecibidaBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaExpedidaBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaExpedidaBajaType.GetIDFactura: IDFacturaExpedidaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaExpedidaBajaType.SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
begin
  FIDFactura := AIDFacturaExpedidaType;
end;

function RespuestaExpedidaBajaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaExpedidaBajaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaExpedidaBajaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaExpedidaBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaExpedidaBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaExpedidaBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaExpedidaBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaExpedidaBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaExpedidaBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaExpedidaBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaExpedidaBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaExpedidaBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaExpedidaBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaExpedidaBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaBienBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaBienBajaType.GetPeriodoLiquidacion: PeriodoLiquidacion2;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaBienBajaType.SetPeriodoLiquidacion(const APeriodoLiquidacion2: PeriodoLiquidacion2);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion2;
end;

function RespuestaBienBajaType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaBienBajaType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function RespuestaBienBajaType.GetIdentificacionBien: TextMax40Type;
begin
  Result := FIdentificacionBien;
end;

procedure RespuestaBienBajaType.SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionBien := ATextMax40Type;
end;

function RespuestaBienBajaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaBienBajaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaBienBajaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaBienBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaBienBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaBienBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaBienBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaBienBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaBienBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaBienBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaBienBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaBienBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaBienBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaBienBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaOperacionesSegurosBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function RespuestaOperacionesSegurosBajaType.GetPeriodoLiquidacion: PeriodoLiquidacion7;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaOperacionesSegurosBajaType.SetPeriodoLiquidacion(const APeriodoLiquidacion7: PeriodoLiquidacion7);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion7;
end;

function RespuestaOperacionesSegurosBajaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaOperacionesSegurosBajaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaOperacionesSegurosBajaType.GetClaveOperacion: ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure RespuestaOperacionesSegurosBajaType.SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
end;

function RespuestaOperacionesSegurosBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaOperacionesSegurosBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaOperacionesSegurosBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaOperacionesSegurosBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaOperacionesSegurosBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaOperacionesSegurosBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaOperacionesSegurosBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaOperacionesSegurosBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaOperacionesSegurosBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaOperacionesSegurosBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaOperacionesSegurosBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaAgenciasViajesBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function RespuestaAgenciasViajesBajaType.GetPeriodoLiquidacion: PeriodoLiquidacion9;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaAgenciasViajesBajaType.SetPeriodoLiquidacion(const APeriodoLiquidacion9: PeriodoLiquidacion9);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion9;
end;

function RespuestaAgenciasViajesBajaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaAgenciasViajesBajaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaAgenciasViajesBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaAgenciasViajesBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaAgenciasViajesBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaAgenciasViajesBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaAgenciasViajesBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaAgenciasViajesBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaAgenciasViajesBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaAgenciasViajesBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaAgenciasViajesBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaAgenciasViajesBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaAgenciasViajesBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

destructor RespuestaMetalicoBajaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function RespuestaMetalicoBajaType.GetPeriodoLiquidacion: PeriodoLiquidacion4;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaMetalicoBajaType.SetPeriodoLiquidacion(const APeriodoLiquidacion4: PeriodoLiquidacion4);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion4;
end;

function RespuestaMetalicoBajaType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaMetalicoBajaType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaMetalicoBajaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaMetalicoBajaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaMetalicoBajaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaMetalicoBajaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaMetalicoBajaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaMetalicoBajaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaMetalicoBajaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaMetalicoBajaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaMetalicoBajaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaMetalicoBajaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaMetalicoBajaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function EstadoFactura2Type.GetTimestampUltimaModificacion: Timestamp;
begin
  Result := FTimestampUltimaModificacion;
end;

procedure EstadoFactura2Type.SetTimestampUltimaModificacion(const ATimestamp: Timestamp);
begin
  FTimestampUltimaModificacion := ATimestamp;
end;

function EstadoFactura2Type.GetEstadoRegistro: EstadoRegistroSIIType;
begin
  Result := FEstadoRegistro;
end;

procedure EstadoFactura2Type.SetEstadoRegistro(const AEstadoRegistroSIIType: EstadoRegistroSIIType);
begin
  FEstadoRegistro := AEstadoRegistroSIIType;
end;

function EstadoFactura2Type.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType3;
begin
  Result := FCodigoErrorRegistro;
end;

procedure EstadoFactura2Type.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType3: ErrorDetalleType3);
begin
  FCodigoErrorRegistro := AErrorDetalleType3;
  FCodigoErrorRegistro_Specified := True;
end;

function EstadoFactura2Type.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function EstadoFactura2Type.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure EstadoFactura2Type.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function EstadoFactura2Type.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function EstadoFacturaType.GetEstadoCuadre(Index: Integer): EstadoCuadreType;
begin
  Result := FEstadoCuadre;
end;

procedure EstadoFacturaType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
begin
  FEstadoCuadre := AEstadoCuadreType;
  FEstadoCuadre_Specified := True;
end;

function EstadoFacturaType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

function EstadoFacturaType.GetTimestampEstadoCuadre(Index: Integer): Timestamp;
begin
  Result := FTimestampEstadoCuadre;
end;

procedure EstadoFacturaType.SetTimestampEstadoCuadre(Index: Integer; const ATimestamp: Timestamp);
begin
  FTimestampEstadoCuadre := ATimestamp;
  FTimestampEstadoCuadre_Specified := True;
end;

function EstadoFacturaType.TimestampEstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FTimestampEstadoCuadre_Specified;
end;

function EstadoFacturaType.GetTimestampUltimaModificacion: Timestamp;
begin
  Result := FTimestampUltimaModificacion;
end;

procedure EstadoFacturaType.SetTimestampUltimaModificacion(const ATimestamp: Timestamp);
begin
  FTimestampUltimaModificacion := ATimestamp;
end;

function EstadoFacturaType.GetEstadoRegistro: EstadoRegistroSIIType;
begin
  Result := FEstadoRegistro;
end;

procedure EstadoFacturaType.SetEstadoRegistro(const AEstadoRegistroSIIType: EstadoRegistroSIIType);
begin
  FEstadoRegistro := AEstadoRegistroSIIType;
end;

function EstadoFacturaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType3;
begin
  Result := FCodigoErrorRegistro;
end;

procedure EstadoFacturaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType3: ErrorDetalleType3);
begin
  FCodigoErrorRegistro := AErrorDetalleType3;
  FCodigoErrorRegistro_Specified := True;
end;

function EstadoFacturaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function EstadoFacturaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure EstadoFacturaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function EstadoFacturaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

destructor RespuestaComunitariaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaComunitariaType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaComunitariaType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function RespuestaComunitariaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaComunitariaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaComunitariaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaComunitariaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaComunitariaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaComunitariaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaComunitariaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaComunitariaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaComunitariaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaComunitariaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaComunitariaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaComunitariaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaComunitariaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaComunitariaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaComunitariaType.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaComunitariaType.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaComunitariaType.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaBienType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaBienType.GetPeriodoLiquidacion: PeriodoLiquidacion3;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaBienType.SetPeriodoLiquidacion(const APeriodoLiquidacion3: PeriodoLiquidacion3);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion3;
end;

function RespuestaBienType.GetIDFactura: IDFacturaComunitariaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaBienType.SetIDFactura(const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FIDFactura := AIDFacturaComunitariaType;
end;

function RespuestaBienType.GetIdentificacionBien: TextMax40Type;
begin
  Result := FIdentificacionBien;
end;

procedure RespuestaBienType.SetIdentificacionBien(const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionBien := ATextMax40Type;
end;

function RespuestaBienType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaBienType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaBienType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaBienType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaBienType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaBienType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaBienType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaBienType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaBienType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaBienType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaBienType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaBienType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaBienType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaBienType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaBienType.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaBienType.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaBienType.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaMetalicoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaMetalicoType.GetPeriodoLiquidacion: PeriodoLiquidacion6;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaMetalicoType.SetPeriodoLiquidacion(const APeriodoLiquidacion6: PeriodoLiquidacion6);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion6;
end;

function RespuestaMetalicoType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaMetalicoType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaMetalicoType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaMetalicoType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaMetalicoType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaMetalicoType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaMetalicoType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaMetalicoType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaMetalicoType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaMetalicoType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaMetalicoType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaMetalicoType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaMetalicoType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaMetalicoType.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaMetalicoType.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaMetalicoType.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaRecibidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaRecibidaType.GetIDFactura: IDFacturaRecibidaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaRecibidaType.SetIDFactura(const AIDFacturaRecibidaType: IDFacturaRecibidaType);
begin
  FIDFactura := AIDFacturaRecibidaType;
end;

function RespuestaRecibidaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaRecibidaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaRecibidaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaRecibidaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaRecibidaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaRecibidaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaRecibidaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaRecibidaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaRecibidaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaRecibidaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaRecibidaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaRecibidaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaRecibidaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaRecibidaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaRecibidaType.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaRecibidaType.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaRecibidaType.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaExpedidaType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaExpedidaType.GetIDFactura: IDFacturaExpedidaType;
begin
  Result := FIDFactura;
end;

procedure RespuestaExpedidaType.SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
begin
  FIDFactura := AIDFacturaExpedidaType;
end;

function RespuestaExpedidaType.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaExpedidaType.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaExpedidaType.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaExpedidaType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaExpedidaType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaExpedidaType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaExpedidaType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaExpedidaType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaExpedidaType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaExpedidaType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaExpedidaType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaExpedidaType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaExpedidaType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaExpedidaType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaExpedidaType.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaExpedidaType.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaExpedidaType.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaRecibidaPagoType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  inherited Destroy;
end;

function RespuestaRecibidaPagoType.GetIDFactura: IDFacturaRecibidaNombreBCType;
begin
  Result := FIDFactura;
end;

procedure RespuestaRecibidaPagoType.SetIDFactura(const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
begin
  FIDFactura := AIDFacturaRecibidaNombreBCType;
end;

function RespuestaRecibidaPagoType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaRecibidaPagoType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaRecibidaPagoType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaRecibidaPagoType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaRecibidaPagoType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaRecibidaPagoType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaRecibidaPagoType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaRecibidaPagoType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

destructor RespuestaVentaBienesConsignaType2.Destroy;
begin
  System.SysUtils.FreeAndNil(FIdRegistroDeclarado);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaVentaBienesConsignaType2.GetIdRegistroDeclarado: IdRegistroDeclaradoType;
begin
  Result := FIdRegistroDeclarado;
end;

procedure RespuestaVentaBienesConsignaType2.SetIdRegistroDeclarado(const AIdRegistroDeclaradoType: IdRegistroDeclaradoType);
begin
  FIdRegistroDeclarado := AIdRegistroDeclaradoType;
end;

function RespuestaVentaBienesConsignaType2.GetRefExterna(Index: Integer): TextMax60Type;
begin
  Result := FRefExterna;
end;

procedure RespuestaVentaBienesConsignaType2.SetRefExterna(Index: Integer; const ATextMax60Type: TextMax60Type);
begin
  FRefExterna := ATextMax60Type;
  FRefExterna_Specified := True;
end;

function RespuestaVentaBienesConsignaType2.RefExterna_Specified(Index: Integer): boolean;
begin
  Result := FRefExterna_Specified;
end;

function RespuestaVentaBienesConsignaType2.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaVentaBienesConsignaType2.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaVentaBienesConsignaType2.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaVentaBienesConsignaType2.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaVentaBienesConsignaType2.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaVentaBienesConsignaType2.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaVentaBienesConsignaType2.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaVentaBienesConsignaType2.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaVentaBienesConsignaType2.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaVentaBienesConsignaType2.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaVentaBienesConsignaType2.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaVentaBienesConsignaType2.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaVentaBienesConsignaType2.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaVentaBienesConsignaType2.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaOperacionesSegurosType2.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaOperacionesSegurosType2.GetPeriodoLiquidacion: PeriodoLiquidacion8;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaOperacionesSegurosType2.SetPeriodoLiquidacion(const APeriodoLiquidacion8: PeriodoLiquidacion8);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion8;
end;

function RespuestaOperacionesSegurosType2.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaOperacionesSegurosType2.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaOperacionesSegurosType2.GetClaveOperacion: ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure RespuestaOperacionesSegurosType2.SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
end;

function RespuestaOperacionesSegurosType2.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaOperacionesSegurosType2.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaOperacionesSegurosType2.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaOperacionesSegurosType2.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaOperacionesSegurosType2.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaOperacionesSegurosType2.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaOperacionesSegurosType2.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaOperacionesSegurosType2.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaOperacionesSegurosType2.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaOperacionesSegurosType2.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaOperacionesSegurosType2.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaOperacionesSegurosType2.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaOperacionesSegurosType2.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaOperacionesSegurosType2.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor RespuestaAgenciasViajesType.Destroy;
begin
  System.SysUtils.FreeAndNil(FPeriodoLiquidacion);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FRegistroDuplicado);
  inherited Destroy;
end;

function RespuestaAgenciasViajesType.GetPeriodoLiquidacion: PeriodoLiquidacion5;
begin
  Result := FPeriodoLiquidacion;
end;

procedure RespuestaAgenciasViajesType.SetPeriodoLiquidacion(const APeriodoLiquidacion5: PeriodoLiquidacion5);
begin
  FPeriodoLiquidacion := APeriodoLiquidacion5;
end;

function RespuestaAgenciasViajesType.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure RespuestaAgenciasViajesType.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function RespuestaAgenciasViajesType.GetEstadoRegistro: EstadoRegistroType;
begin
  Result := FEstadoRegistro;
end;

procedure RespuestaAgenciasViajesType.SetEstadoRegistro(const AEstadoRegistroType: EstadoRegistroType);
begin
  FEstadoRegistro := AEstadoRegistroType;
end;

function RespuestaAgenciasViajesType.GetCodigoErrorRegistro(Index: Integer): ErrorDetalleType2;
begin
  Result := FCodigoErrorRegistro;
end;

procedure RespuestaAgenciasViajesType.SetCodigoErrorRegistro(Index: Integer; const AErrorDetalleType2: ErrorDetalleType2);
begin
  FCodigoErrorRegistro := AErrorDetalleType2;
  FCodigoErrorRegistro_Specified := True;
end;

function RespuestaAgenciasViajesType.CodigoErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FCodigoErrorRegistro_Specified;
end;

function RespuestaAgenciasViajesType.GetDescripcionErrorRegistro(Index: Integer): TextMax500Type;
begin
  Result := FDescripcionErrorRegistro;
end;

procedure RespuestaAgenciasViajesType.SetDescripcionErrorRegistro(Index: Integer; const ATextMax500Type: TextMax500Type);
begin
  FDescripcionErrorRegistro := ATextMax500Type;
  FDescripcionErrorRegistro_Specified := True;
end;

function RespuestaAgenciasViajesType.DescripcionErrorRegistro_Specified(Index: Integer): boolean;
begin
  Result := FDescripcionErrorRegistro_Specified;
end;

function RespuestaAgenciasViajesType.GetCSV(Index: Integer): string;
begin
  Result := FCSV;
end;

procedure RespuestaAgenciasViajesType.SetCSV(Index: Integer; const Astring: string);
begin
  FCSV := Astring;
  FCSV_Specified := True;
end;

function RespuestaAgenciasViajesType.CSV_Specified(Index: Integer): boolean;
begin
  Result := FCSV_Specified;
end;

function RespuestaAgenciasViajesType.GetRegistroDuplicado(Index: Integer): RegistroDuplicadoType;
begin
  Result := FRegistroDuplicado;
end;

procedure RespuestaAgenciasViajesType.SetRegistroDuplicado(Index: Integer; const ARegistroDuplicadoType: RegistroDuplicadoType);
begin
  FRegistroDuplicado := ARegistroDuplicadoType;
  FRegistroDuplicado_Specified := True;
end;

function RespuestaAgenciasViajesType.RegistroDuplicado_Specified(Index: Integer): boolean;
begin
  Result := FRegistroDuplicado_Specified;
end;

destructor LRfacturasEmitidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FFacturaExpedida);
  inherited Destroy;
end;

function LRfacturasEmitidasType.GetIDFactura: IDFacturaExpedidaType;
begin
  Result := FIDFactura;
end;

procedure LRfacturasEmitidasType.SetIDFactura(const AIDFacturaExpedidaType: IDFacturaExpedidaType);
begin
  FIDFactura := AIDFacturaExpedidaType;
end;

function LRfacturasEmitidasType.GetFacturaExpedida: FacturaExpedidaType;
begin
  Result := FFacturaExpedida;
end;

procedure LRfacturasEmitidasType.SetFacturaExpedida(const AFacturaExpedidaType: FacturaExpedidaType);
begin
  FFacturaExpedida := AFacturaExpedidaType;
end;

destructor LRFiltroFactInformadasClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FCliente);
  System.SysUtils.FreeAndNil(FFechaExpedicion);
  System.SysUtils.FreeAndNil(FFechaOperacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroFactInformadasClienteType.GetCliente(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FCliente;
end;

procedure LRFiltroFactInformadasClienteType.SetCliente(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FCliente := APersonaFisicaJuridicaUnicaESType;
  FCliente_Specified := True;
end;

function LRFiltroFactInformadasClienteType.Cliente_Specified(Index: Integer): boolean;
begin
  Result := FCliente_Specified;
end;

function LRFiltroFactInformadasClienteType.GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure LRFiltroFactInformadasClienteType.SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
  FNumSerieFacturaEmisor_Specified := True;
end;

function LRFiltroFactInformadasClienteType.NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisor_Specified;
end;

function LRFiltroFactInformadasClienteType.GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
begin
  Result := FEstadoCuadre;
end;

procedure LRFiltroFactInformadasClienteType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
begin
  FEstadoCuadre := AEstadoCuadreImputacionType;
  FEstadoCuadre_Specified := True;
end;

function LRFiltroFactInformadasClienteType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

function LRFiltroFactInformadasClienteType.GetFechaExpedicion(Index: Integer): RangoFechaType;
begin
  Result := FFechaExpedicion;
end;

procedure LRFiltroFactInformadasClienteType.SetFechaExpedicion(Index: Integer; const ARangoFechaType: RangoFechaType);
begin
  FFechaExpedicion := ARangoFechaType;
  FFechaExpedicion_Specified := True;
end;

function LRFiltroFactInformadasClienteType.FechaExpedicion_Specified(Index: Integer): boolean;
begin
  Result := FFechaExpedicion_Specified;
end;

function LRFiltroFactInformadasClienteType.GetFechaOperacion(Index: Integer): RangoFechaType;
begin
  Result := FFechaOperacion;
end;

procedure LRFiltroFactInformadasClienteType.SetFechaOperacion(Index: Integer; const ARangoFechaType: RangoFechaType);
begin
  FFechaOperacion := ARangoFechaType;
  FFechaOperacion_Specified := True;
end;

function LRFiltroFactInformadasClienteType.FechaOperacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaOperacion_Specified;
end;

function LRFiltroFactInformadasClienteType.GetClavePaginacion(Index: Integer): ClavePaginacionClienteType;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroFactInformadasClienteType.SetClavePaginacion(Index: Integer; const AClavePaginacionClienteType: ClavePaginacionClienteType);
begin
  FClavePaginacion := AClavePaginacionClienteType;
  FClavePaginacion_Specified := True;
end;

function LRFiltroFactInformadasClienteType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroFactInformadasAgrupadasClienteType.Destroy;
begin
  System.SysUtils.FreeAndNil(FCliente);
  inherited Destroy;
end;

function LRFiltroFactInformadasAgrupadasClienteType.GetCliente(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FCliente;
end;

procedure LRFiltroFactInformadasAgrupadasClienteType.SetCliente(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FCliente := APersonaFisicaJuridicaUnicaESType;
  FCliente_Specified := True;
end;

function LRFiltroFactInformadasAgrupadasClienteType.Cliente_Specified(Index: Integer): boolean;
begin
  Result := FCliente_Specified;
end;

function LRFiltroFactInformadasAgrupadasClienteType.GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
begin
  Result := FEstadoCuadre;
end;

procedure LRFiltroFactInformadasAgrupadasClienteType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
begin
  FEstadoCuadre := AEstadoCuadreImputacionType;
  FEstadoCuadre_Specified := True;
end;

function LRFiltroFactInformadasAgrupadasClienteType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

destructor LRFiltroFactInformadasProveedorType.Destroy;
begin
  System.SysUtils.FreeAndNil(FProveedor);
  System.SysUtils.FreeAndNil(FFechaExpedicion);
  System.SysUtils.FreeAndNil(FFechaOperacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroFactInformadasProveedorType.GetProveedor(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FProveedor;
end;

procedure LRFiltroFactInformadasProveedorType.SetProveedor(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FProveedor := APersonaFisicaJuridicaUnicaESType;
  FProveedor_Specified := True;
end;

function LRFiltroFactInformadasProveedorType.Proveedor_Specified(Index: Integer): boolean;
begin
  Result := FProveedor_Specified;
end;

function LRFiltroFactInformadasProveedorType.GetNumSerieFacturaEmisor(Index: Integer): TextoIDFacturaType;
begin
  Result := FNumSerieFacturaEmisor;
end;

procedure LRFiltroFactInformadasProveedorType.SetNumSerieFacturaEmisor(Index: Integer; const ATextoIDFacturaType: TextoIDFacturaType);
begin
  FNumSerieFacturaEmisor := ATextoIDFacturaType;
  FNumSerieFacturaEmisor_Specified := True;
end;

function LRFiltroFactInformadasProveedorType.NumSerieFacturaEmisor_Specified(Index: Integer): boolean;
begin
  Result := FNumSerieFacturaEmisor_Specified;
end;

function LRFiltroFactInformadasProveedorType.GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
begin
  Result := FEstadoCuadre;
end;

procedure LRFiltroFactInformadasProveedorType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
begin
  FEstadoCuadre := AEstadoCuadreImputacionType;
  FEstadoCuadre_Specified := True;
end;

function LRFiltroFactInformadasProveedorType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

function LRFiltroFactInformadasProveedorType.GetFechaExpedicion(Index: Integer): RangoFechaType;
begin
  Result := FFechaExpedicion;
end;

procedure LRFiltroFactInformadasProveedorType.SetFechaExpedicion(Index: Integer; const ARangoFechaType: RangoFechaType);
begin
  FFechaExpedicion := ARangoFechaType;
  FFechaExpedicion_Specified := True;
end;

function LRFiltroFactInformadasProveedorType.FechaExpedicion_Specified(Index: Integer): boolean;
begin
  Result := FFechaExpedicion_Specified;
end;

function LRFiltroFactInformadasProveedorType.GetFechaOperacion(Index: Integer): RangoFechaType;
begin
  Result := FFechaOperacion;
end;

procedure LRFiltroFactInformadasProveedorType.SetFechaOperacion(Index: Integer; const ARangoFechaType: RangoFechaType);
begin
  FFechaOperacion := ARangoFechaType;
  FFechaOperacion_Specified := True;
end;

function LRFiltroFactInformadasProveedorType.FechaOperacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaOperacion_Specified;
end;

function LRFiltroFactInformadasProveedorType.GetClavePaginacion(Index: Integer): ClavePaginacionProveedorType;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroFactInformadasProveedorType.SetClavePaginacion(Index: Integer; const AClavePaginacionProveedorType: ClavePaginacionProveedorType);
begin
  FClavePaginacion := AClavePaginacionProveedorType;
  FClavePaginacion_Specified := True;
end;

function LRFiltroFactInformadasProveedorType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor SuministroLRVentaBienesConsigna.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna[I]);
  System.SetLength(FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna, 0);
  inherited Destroy;
end;

function SuministroLRVentaBienesConsigna.GetLRVentaBienesConsignaTypeArray(Index: Integer): LRVentaBienesConsignaType;
begin
  Result := FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna[Index];
end;

procedure SuministroLRVentaBienesConsigna.SetLRVentaBienesConsignaTypeArray(Index: Integer; const Item: LRVentaBienesConsignaType);
begin
   FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna[Index] := Item;
end;

function SuministroLRVentaBienesConsigna.GetLRVentaBienesConsignaTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna) then
    Result := System.Length(FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna)
  else
    Result := 0;
end;

procedure SuministroLRVentaBienesConsigna.SetLRVentaBienesConsignaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna, Len);
end;

function SuministroLRVentaBienesConsigna.GetRegistroLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer): Array_Of_LRVentaBienesConsignaType;
begin
  Result := FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna;
end;

procedure SuministroLRVentaBienesConsigna.SetRegistroLRDetOperacionIntracomunitariaVentasEnConsigna(Index: Integer; const AArray_Of_LRVentaBienesConsignaType: Array_Of_LRVentaBienesConsignaType);
begin
  FRegistroLRDetOperacionIntracomunitariaVentasEnConsigna := AArray_Of_LRVentaBienesConsignaType;
end;

destructor BajaLRVentaBienesConsigna.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaVentaBienesConsigna)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaVentaBienesConsigna[I]);
  System.SetLength(FRegistroLRBajaVentaBienesConsigna, 0);
  inherited Destroy;
end;

function BajaLRVentaBienesConsigna.GetLRBajaVentaBienesConsignaTypeArray(Index: Integer): LRBajaVentaBienesConsignaType;
begin
  Result := FRegistroLRBajaVentaBienesConsigna[Index];
end;

procedure BajaLRVentaBienesConsigna.SetLRBajaVentaBienesConsignaTypeArray(Index: Integer; const Item: LRBajaVentaBienesConsignaType);
begin
   FRegistroLRBajaVentaBienesConsigna[Index] := Item;
end;

function BajaLRVentaBienesConsigna.GetLRBajaVentaBienesConsignaTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaVentaBienesConsigna) then
    Result := System.Length(FRegistroLRBajaVentaBienesConsigna)
  else
    Result := 0;
end;

procedure BajaLRVentaBienesConsigna.SetLRBajaVentaBienesConsignaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaVentaBienesConsigna, Len);
end;

function BajaLRVentaBienesConsigna.GetRegistroLRBajaVentaBienesConsigna(Index: Integer): Array_Of_LRBajaVentaBienesConsignaType;
begin
  Result := FRegistroLRBajaVentaBienesConsigna;
end;

procedure BajaLRVentaBienesConsigna.SetRegistroLRBajaVentaBienesConsigna(Index: Integer; const AArray_Of_LRBajaVentaBienesConsignaType: Array_Of_LRBajaVentaBienesConsignaType);
begin
  FRegistroLRBajaVentaBienesConsigna := AArray_Of_LRBajaVentaBienesConsignaType;
end;

destructor LRFiltroEmitidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FFechaCuadre);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroEmitidasType.GetIDFactura(Index: Integer): IDFacturaConsulta2Type;
begin
  Result := FIDFactura;
end;

procedure LRFiltroEmitidasType.SetIDFactura(Index: Integer; const AIDFacturaConsulta2Type: IDFacturaConsulta2Type);
begin
  FIDFactura := AIDFacturaConsulta2Type;
  FIDFactura_Specified := True;
end;

function LRFiltroEmitidasType.IDFactura_Specified(Index: Integer): boolean;
begin
  Result := FIDFactura_Specified;
end;

function LRFiltroEmitidasType.GetContraparte(Index: Integer): ContraparteConsultaType;
begin
  Result := FContraparte;
end;

procedure LRFiltroEmitidasType.SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
begin
  FContraparte := AContraparteConsultaType;
  FContraparte_Specified := True;
end;

function LRFiltroEmitidasType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function LRFiltroEmitidasType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroEmitidasType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroEmitidasType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroEmitidasType.GetFechaCuadre(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaCuadre;
end;

procedure LRFiltroEmitidasType.SetFechaCuadre(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaCuadre := ARangoFechaPresentacionType;
  FFechaCuadre_Specified := True;
end;

function LRFiltroEmitidasType.FechaCuadre_Specified(Index: Integer): boolean;
begin
  Result := FFechaCuadre_Specified;
end;

function LRFiltroEmitidasType.GetFacturaModificada(Index: Integer): FacturaModificadaType;
begin
  Result := FFacturaModificada;
end;

procedure LRFiltroEmitidasType.SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FFacturaModificada := AFacturaModificadaType;
  FFacturaModificada_Specified := True;
end;

function LRFiltroEmitidasType.FacturaModificada_Specified(Index: Integer): boolean;
begin
  Result := FFacturaModificada_Specified;
end;

function LRFiltroEmitidasType.GetEstadoCuadre(Index: Integer): EstadoCuadreType;
begin
  Result := FEstadoCuadre;
end;

procedure LRFiltroEmitidasType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
begin
  FEstadoCuadre := AEstadoCuadreType;
  FEstadoCuadre_Specified := True;
end;

function LRFiltroEmitidasType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

function LRFiltroEmitidasType.GetClavePaginacion(Index: Integer): IDFacturaExpedidaBCType;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroEmitidasType.SetClavePaginacion(Index: Integer; const AIDFacturaExpedidaBCType: IDFacturaExpedidaBCType);
begin
  FClavePaginacion := AIDFacturaExpedidaBCType;
  FClavePaginacion_Specified := True;
end;

function LRFiltroEmitidasType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroDetOperIntracomunitariasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroDetOperIntracomunitariasType.GetIDFactura(Index: Integer): IDFacturaConsulta1Type;
begin
  Result := FIDFactura;
end;

procedure LRFiltroDetOperIntracomunitariasType.SetIDFactura(Index: Integer; const AIDFacturaConsulta1Type: IDFacturaConsulta1Type);
begin
  FIDFactura := AIDFacturaConsulta1Type;
  FIDFactura_Specified := True;
end;

function LRFiltroDetOperIntracomunitariasType.IDFactura_Specified(Index: Integer): boolean;
begin
  Result := FIDFactura_Specified;
end;

function LRFiltroDetOperIntracomunitariasType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroDetOperIntracomunitariasType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroDetOperIntracomunitariasType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroDetOperIntracomunitariasType.GetFacturaModificada(Index: Integer): FacturaModificadaType;
begin
  Result := FFacturaModificada;
end;

procedure LRFiltroDetOperIntracomunitariasType.SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FFacturaModificada := AFacturaModificadaType;
  FFacturaModificada_Specified := True;
end;

function LRFiltroDetOperIntracomunitariasType.FacturaModificada_Specified(Index: Integer): boolean;
begin
  Result := FFacturaModificada_Specified;
end;

function LRFiltroDetOperIntracomunitariasType.GetClavePaginacion(Index: Integer): IDFacturaComunitariaType;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroDetOperIntracomunitariasType.SetClavePaginacion(Index: Integer; const AIDFacturaComunitariaType: IDFacturaComunitariaType);
begin
  FClavePaginacion := AIDFacturaComunitariaType;
  FClavePaginacion_Specified := True;
end;

function LRFiltroDetOperIntracomunitariasType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroOperacionesSegurosType.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroOperacionesSegurosType.GetContraparte(Index: Integer): ContraparteConsultaType;
begin
  Result := FContraparte;
end;

procedure LRFiltroOperacionesSegurosType.SetContraparte(Index: Integer; const AContraparteConsultaType: ContraparteConsultaType);
begin
  FContraparte := AContraparteConsultaType;
  FContraparte_Specified := True;
end;

function LRFiltroOperacionesSegurosType.Contraparte_Specified(Index: Integer): boolean;
begin
  Result := FContraparte_Specified;
end;

function LRFiltroOperacionesSegurosType.GetClaveOperacion(Index: Integer): ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure LRFiltroOperacionesSegurosType.SetClaveOperacion(Index: Integer; const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
  FClaveOperacion_Specified := True;
end;

function LRFiltroOperacionesSegurosType.ClaveOperacion_Specified(Index: Integer): boolean;
begin
  Result := FClaveOperacion_Specified;
end;

function LRFiltroOperacionesSegurosType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroOperacionesSegurosType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroOperacionesSegurosType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroOperacionesSegurosType.GetOperacionModificada(Index: Integer): FacturaModificadaType;
begin
  Result := FOperacionModificada;
end;

procedure LRFiltroOperacionesSegurosType.SetOperacionModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FOperacionModificada := AFacturaModificadaType;
  FOperacionModificada_Specified := True;
end;

function LRFiltroOperacionesSegurosType.OperacionModificada_Specified(Index: Integer): boolean;
begin
  Result := FOperacionModificada_Specified;
end;

function LRFiltroOperacionesSegurosType.GetClavePaginacion(Index: Integer): ClavePaginacion4;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroOperacionesSegurosType.SetClavePaginacion(Index: Integer; const AClavePaginacion4: ClavePaginacion4);
begin
  FClavePaginacion := AClavePaginacion4;
  FClavePaginacion_Specified := True;
end;

function LRFiltroOperacionesSegurosType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor ClavePaginacion4.Destroy;
begin
  System.SysUtils.FreeAndNil(FContraparte);
  inherited Destroy;
end;

function ClavePaginacion4.GetContraparte: PersonaFisicaJuridicaType;
begin
  Result := FContraparte;
end;

procedure ClavePaginacion4.SetContraparte(const APersonaFisicaJuridicaType: PersonaFisicaJuridicaType);
begin
  FContraparte := APersonaFisicaJuridicaType;
end;

function ClavePaginacion4.GetClaveOperacion: ClaveOperacionType;
begin
  Result := FClaveOperacion;
end;

procedure ClavePaginacion4.SetClaveOperacion(const AClaveOperacionType: ClaveOperacionType);
begin
  FClaveOperacion := AClaveOperacionType;
end;

destructor LRFiltroFactInformadasAgrupadasProveedorType.Destroy;
begin
  System.SysUtils.FreeAndNil(FProveedor);
  inherited Destroy;
end;

function LRFiltroFactInformadasAgrupadasProveedorType.GetProveedor(Index: Integer): PersonaFisicaJuridicaUnicaESType;
begin
  Result := FProveedor;
end;

procedure LRFiltroFactInformadasAgrupadasProveedorType.SetProveedor(Index: Integer; const APersonaFisicaJuridicaUnicaESType: PersonaFisicaJuridicaUnicaESType);
begin
  FProveedor := APersonaFisicaJuridicaUnicaESType;
  FProveedor_Specified := True;
end;

function LRFiltroFactInformadasAgrupadasProveedorType.Proveedor_Specified(Index: Integer): boolean;
begin
  Result := FProveedor_Specified;
end;

function LRFiltroFactInformadasAgrupadasProveedorType.GetEstadoCuadre(Index: Integer): EstadoCuadreImputacionType;
begin
  Result := FEstadoCuadre;
end;

procedure LRFiltroFactInformadasAgrupadasProveedorType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreImputacionType: EstadoCuadreImputacionType);
begin
  FEstadoCuadre := AEstadoCuadreImputacionType;
  FEstadoCuadre_Specified := True;
end;

function LRFiltroFactInformadasAgrupadasProveedorType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

destructor LRFiltroRecibidasType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FFechaCuadre);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroRecibidasType.GetIDFactura(Index: Integer): IDFacturaConsulta1Type;
begin
  Result := FIDFactura;
end;

procedure LRFiltroRecibidasType.SetIDFactura(Index: Integer; const AIDFacturaConsulta1Type: IDFacturaConsulta1Type);
begin
  FIDFactura := AIDFacturaConsulta1Type;
  FIDFactura_Specified := True;
end;

function LRFiltroRecibidasType.IDFactura_Specified(Index: Integer): boolean;
begin
  Result := FIDFactura_Specified;
end;

function LRFiltroRecibidasType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroRecibidasType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroRecibidasType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroRecibidasType.GetFechaCuadre(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaCuadre;
end;

procedure LRFiltroRecibidasType.SetFechaCuadre(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaCuadre := ARangoFechaPresentacionType;
  FFechaCuadre_Specified := True;
end;

function LRFiltroRecibidasType.FechaCuadre_Specified(Index: Integer): boolean;
begin
  Result := FFechaCuadre_Specified;
end;

function LRFiltroRecibidasType.GetFacturaModificada(Index: Integer): FacturaModificadaType;
begin
  Result := FFacturaModificada;
end;

procedure LRFiltroRecibidasType.SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FFacturaModificada := AFacturaModificadaType;
  FFacturaModificada_Specified := True;
end;

function LRFiltroRecibidasType.FacturaModificada_Specified(Index: Integer): boolean;
begin
  Result := FFacturaModificada_Specified;
end;

function LRFiltroRecibidasType.GetEstadoCuadre(Index: Integer): EstadoCuadreType;
begin
  Result := FEstadoCuadre;
end;

procedure LRFiltroRecibidasType.SetEstadoCuadre(Index: Integer; const AEstadoCuadreType: EstadoCuadreType);
begin
  FEstadoCuadre := AEstadoCuadreType;
  FEstadoCuadre_Specified := True;
end;

function LRFiltroRecibidasType.EstadoCuadre_Specified(Index: Integer): boolean;
begin
  Result := FEstadoCuadre_Specified;
end;

function LRFiltroRecibidasType.GetClavePaginacion(Index: Integer): IDFacturaRecibidaNombreBCType;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroRecibidasType.SetClavePaginacion(Index: Integer; const AIDFacturaRecibidaNombreBCType: IDFacturaRecibidaNombreBCType);
begin
  FClavePaginacion := AIDFacturaRecibidaNombreBCType;
  FClavePaginacion_Specified := True;
end;

function LRFiltroRecibidasType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor LRFiltroBienInversionType.Destroy;
begin
  System.SysUtils.FreeAndNil(FIDFactura);
  System.SysUtils.FreeAndNil(FFechaPresentacion);
  System.SysUtils.FreeAndNil(FClavePaginacion);
  inherited Destroy;
end;

function LRFiltroBienInversionType.GetIDFactura(Index: Integer): IDFacturaConsulta1Type;
begin
  Result := FIDFactura;
end;

procedure LRFiltroBienInversionType.SetIDFactura(Index: Integer; const AIDFacturaConsulta1Type: IDFacturaConsulta1Type);
begin
  FIDFactura := AIDFacturaConsulta1Type;
  FIDFactura_Specified := True;
end;

function LRFiltroBienInversionType.IDFactura_Specified(Index: Integer): boolean;
begin
  Result := FIDFactura_Specified;
end;

function LRFiltroBienInversionType.GetFechaPresentacion(Index: Integer): RangoFechaPresentacionType;
begin
  Result := FFechaPresentacion;
end;

procedure LRFiltroBienInversionType.SetFechaPresentacion(Index: Integer; const ARangoFechaPresentacionType: RangoFechaPresentacionType);
begin
  FFechaPresentacion := ARangoFechaPresentacionType;
  FFechaPresentacion_Specified := True;
end;

function LRFiltroBienInversionType.FechaPresentacion_Specified(Index: Integer): boolean;
begin
  Result := FFechaPresentacion_Specified;
end;

function LRFiltroBienInversionType.GetFacturaModificada(Index: Integer): FacturaModificadaType;
begin
  Result := FFacturaModificada;
end;

procedure LRFiltroBienInversionType.SetFacturaModificada(Index: Integer; const AFacturaModificadaType: FacturaModificadaType);
begin
  FFacturaModificada := AFacturaModificadaType;
  FFacturaModificada_Specified := True;
end;

function LRFiltroBienInversionType.FacturaModificada_Specified(Index: Integer): boolean;
begin
  Result := FFacturaModificada_Specified;
end;

function LRFiltroBienInversionType.GetIdentificacionBien(Index: Integer): TextMax40Type;
begin
  Result := FIdentificacionBien;
end;

procedure LRFiltroBienInversionType.SetIdentificacionBien(Index: Integer; const ATextMax40Type: TextMax40Type);
begin
  FIdentificacionBien := ATextMax40Type;
  FIdentificacionBien_Specified := True;
end;

function LRFiltroBienInversionType.IdentificacionBien_Specified(Index: Integer): boolean;
begin
  Result := FIdentificacionBien_Specified;
end;

function LRFiltroBienInversionType.GetClavePaginacion(Index: Integer): ClavePaginacionBienType;
begin
  Result := FClavePaginacion;
end;

procedure LRFiltroBienInversionType.SetClavePaginacion(Index: Integer; const AClavePaginacionBienType: ClavePaginacionBienType);
begin
  FClavePaginacion := AClavePaginacionBienType;
  FClavePaginacion_Specified := True;
end;

function LRFiltroBienInversionType.ClavePaginacion_Specified(Index: Integer): boolean;
begin
  Result := FClavePaginacion_Specified;
end;

destructor BajaLRBienesInversion.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaBienesInversion)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaBienesInversion[I]);
  System.SetLength(FRegistroLRBajaBienesInversion, 0);
  inherited Destroy;
end;

function BajaLRBienesInversion.GetLRBajaBienesInversionTypeArray(Index: Integer): LRBajaBienesInversionType;
begin
  Result := FRegistroLRBajaBienesInversion[Index];
end;

procedure BajaLRBienesInversion.SetLRBajaBienesInversionTypeArray(Index: Integer; const Item: LRBajaBienesInversionType);
begin
   FRegistroLRBajaBienesInversion[Index] := Item;
end;

function BajaLRBienesInversion.GetLRBajaBienesInversionTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaBienesInversion) then
    Result := System.Length(FRegistroLRBajaBienesInversion)
  else
    Result := 0;
end;

procedure BajaLRBienesInversion.SetLRBajaBienesInversionTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaBienesInversion, Len);
end;

function BajaLRBienesInversion.GetRegistroLRBajaBienesInversion(Index: Integer): Array_Of_LRBajaBienesInversionType;
begin
  Result := FRegistroLRBajaBienesInversion;
end;

procedure BajaLRBienesInversion.SetRegistroLRBajaBienesInversion(Index: Integer; const AArray_Of_LRBajaBienesInversionType: Array_Of_LRBajaBienesInversionType);
begin
  FRegistroLRBajaBienesInversion := AArray_Of_LRBajaBienesInversionType;
end;

destructor SuministroLRAgenciasViajes.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRAgenciasViajes)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRAgenciasViajes[I]);
  System.SetLength(FRegistroLRAgenciasViajes, 0);
  inherited Destroy;
end;

function SuministroLRAgenciasViajes.GetLRAgenciasViajesTypeArray(Index: Integer): LRAgenciasViajesType;
begin
  Result := FRegistroLRAgenciasViajes[Index];
end;

procedure SuministroLRAgenciasViajes.SetLRAgenciasViajesTypeArray(Index: Integer; const Item: LRAgenciasViajesType);
begin
   FRegistroLRAgenciasViajes[Index] := Item;
end;

function SuministroLRAgenciasViajes.GetLRAgenciasViajesTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRAgenciasViajes) then
    Result := System.Length(FRegistroLRAgenciasViajes)
  else
    Result := 0;
end;

procedure SuministroLRAgenciasViajes.SetLRAgenciasViajesTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRAgenciasViajes, Len);
end;

function SuministroLRAgenciasViajes.GetRegistroLRAgenciasViajes(Index: Integer): Array_Of_LRAgenciasViajesType;
begin
  Result := FRegistroLRAgenciasViajes;
end;

procedure SuministroLRAgenciasViajes.SetRegistroLRAgenciasViajes(Index: Integer; const AArray_Of_LRAgenciasViajesType: Array_Of_LRAgenciasViajesType);
begin
  FRegistroLRAgenciasViajes := AArray_Of_LRAgenciasViajesType;
end;

destructor BajaLRAgenciasViajes.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaAgenciasViajes)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaAgenciasViajes[I]);
  System.SetLength(FRegistroLRBajaAgenciasViajes, 0);
  inherited Destroy;
end;

function BajaLRAgenciasViajes.GetLRBajaAgenciasViajesTypeArray(Index: Integer): LRBajaAgenciasViajesType;
begin
  Result := FRegistroLRBajaAgenciasViajes[Index];
end;

procedure BajaLRAgenciasViajes.SetLRBajaAgenciasViajesTypeArray(Index: Integer; const Item: LRBajaAgenciasViajesType);
begin
   FRegistroLRBajaAgenciasViajes[Index] := Item;
end;

function BajaLRAgenciasViajes.GetLRBajaAgenciasViajesTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaAgenciasViajes) then
    Result := System.Length(FRegistroLRBajaAgenciasViajes)
  else
    Result := 0;
end;

procedure BajaLRAgenciasViajes.SetLRBajaAgenciasViajesTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaAgenciasViajes, Len);
end;

function BajaLRAgenciasViajes.GetRegistroLRBajaAgenciasViajes(Index: Integer): Array_Of_LRBajaAgenciasViajesType;
begin
  Result := FRegistroLRBajaAgenciasViajes;
end;

procedure BajaLRAgenciasViajes.SetRegistroLRBajaAgenciasViajes(Index: Integer; const AArray_Of_LRBajaAgenciasViajesType: Array_Of_LRBajaAgenciasViajesType);
begin
  FRegistroLRBajaAgenciasViajes := AArray_Of_LRBajaAgenciasViajesType;
end;

destructor SuministroLRFacturasRecibidas.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRFacturasRecibidas)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRFacturasRecibidas[I]);
  System.SetLength(FRegistroLRFacturasRecibidas, 0);
  inherited Destroy;
end;

function SuministroLRFacturasRecibidas.GetLRFacturasRecibidasTypeArray(Index: Integer): LRFacturasRecibidasType;
begin
  Result := FRegistroLRFacturasRecibidas[Index];
end;

procedure SuministroLRFacturasRecibidas.SetLRFacturasRecibidasTypeArray(Index: Integer; const Item: LRFacturasRecibidasType);
begin
   FRegistroLRFacturasRecibidas[Index] := Item;
end;

function SuministroLRFacturasRecibidas.GetLRFacturasRecibidasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRFacturasRecibidas) then
    Result := System.Length(FRegistroLRFacturasRecibidas)
  else
    Result := 0;
end;

procedure SuministroLRFacturasRecibidas.SetLRFacturasRecibidasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRFacturasRecibidas, Len);
end;

function SuministroLRFacturasRecibidas.GetRegistroLRFacturasRecibidas(Index: Integer): Array_Of_LRFacturasRecibidasType;
begin
  Result := FRegistroLRFacturasRecibidas;
end;

procedure SuministroLRFacturasRecibidas.SetRegistroLRFacturasRecibidas(Index: Integer; const AArray_Of_LRFacturasRecibidasType: Array_Of_LRFacturasRecibidasType);
begin
  FRegistroLRFacturasRecibidas := AArray_Of_LRFacturasRecibidasType;
end;

destructor BajaLRFacturasRecibidas.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaRecibidas)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaRecibidas[I]);
  System.SetLength(FRegistroLRBajaRecibidas, 0);
  inherited Destroy;
end;

function BajaLRFacturasRecibidas.GetLRBajaRecibidasTypeArray(Index: Integer): LRBajaRecibidasType;
begin
  Result := FRegistroLRBajaRecibidas[Index];
end;

procedure BajaLRFacturasRecibidas.SetLRBajaRecibidasTypeArray(Index: Integer; const Item: LRBajaRecibidasType);
begin
   FRegistroLRBajaRecibidas[Index] := Item;
end;

function BajaLRFacturasRecibidas.GetLRBajaRecibidasTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaRecibidas) then
    Result := System.Length(FRegistroLRBajaRecibidas)
  else
    Result := 0;
end;

procedure BajaLRFacturasRecibidas.SetLRBajaRecibidasTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaRecibidas, Len);
end;

function BajaLRFacturasRecibidas.GetRegistroLRBajaRecibidas(Index: Integer): Array_Of_LRBajaRecibidasType;
begin
  Result := FRegistroLRBajaRecibidas;
end;

procedure BajaLRFacturasRecibidas.SetRegistroLRBajaRecibidas(Index: Integer; const AArray_Of_LRBajaRecibidasType: Array_Of_LRBajaRecibidasType);
begin
  FRegistroLRBajaRecibidas := AArray_Of_LRBajaRecibidasType;
end;

destructor SuministroLRBienesInversion.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBienesInversion)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBienesInversion[I]);
  System.SetLength(FRegistroLRBienesInversion, 0);
  inherited Destroy;
end;

function SuministroLRBienesInversion.GetLRBienesInversionTypeArray(Index: Integer): LRBienesInversionType;
begin
  Result := FRegistroLRBienesInversion[Index];
end;

procedure SuministroLRBienesInversion.SetLRBienesInversionTypeArray(Index: Integer; const Item: LRBienesInversionType);
begin
   FRegistroLRBienesInversion[Index] := Item;
end;

function SuministroLRBienesInversion.GetLRBienesInversionTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBienesInversion) then
    Result := System.Length(FRegistroLRBienesInversion)
  else
    Result := 0;
end;

procedure SuministroLRBienesInversion.SetLRBienesInversionTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBienesInversion, Len);
end;

function SuministroLRBienesInversion.GetRegistroLRBienesInversion(Index: Integer): Array_Of_LRBienesInversionType;
begin
  Result := FRegistroLRBienesInversion;
end;

procedure SuministroLRBienesInversion.SetRegistroLRBienesInversion(Index: Integer; const AArray_Of_LRBienesInversionType: Array_Of_LRBienesInversionType);
begin
  FRegistroLRBienesInversion := AArray_Of_LRBienesInversionType;
end;

destructor BajaLROperacionesSeguros.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaOperacionesSeguros)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaOperacionesSeguros[I]);
  System.SetLength(FRegistroLRBajaOperacionesSeguros, 0);
  inherited Destroy;
end;

function BajaLROperacionesSeguros.GetLRBajaRegistroLROperacionesSegurosTypeArray(Index: Integer): LRBajaRegistroLROperacionesSegurosType;
begin
  Result := FRegistroLRBajaOperacionesSeguros[Index];
end;

procedure BajaLROperacionesSeguros.SetLRBajaRegistroLROperacionesSegurosTypeArray(Index: Integer; const Item: LRBajaRegistroLROperacionesSegurosType);
begin
   FRegistroLRBajaOperacionesSeguros[Index] := Item;
end;

function BajaLROperacionesSeguros.GetLRBajaRegistroLROperacionesSegurosTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaOperacionesSeguros) then
    Result := System.Length(FRegistroLRBajaOperacionesSeguros)
  else
    Result := 0;
end;

procedure BajaLROperacionesSeguros.SetLRBajaRegistroLROperacionesSegurosTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaOperacionesSeguros, Len);
end;

function BajaLROperacionesSeguros.GetRegistroLRBajaOperacionesSeguros(Index: Integer): Array_Of_LRBajaRegistroLROperacionesSegurosType;
begin
  Result := FRegistroLRBajaOperacionesSeguros;
end;

procedure BajaLROperacionesSeguros.SetRegistroLRBajaOperacionesSeguros(Index: Integer; const AArray_Of_LRBajaRegistroLROperacionesSegurosType: Array_Of_LRBajaRegistroLROperacionesSegurosType);
begin
  FRegistroLRBajaOperacionesSeguros := AArray_Of_LRBajaRegistroLROperacionesSegurosType;
end;

destructor SuministroLRDetOperacionIntracomunitaria.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRDetOperacionIntracomunitaria)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRDetOperacionIntracomunitaria[I]);
  System.SetLength(FRegistroLRDetOperacionIntracomunitaria, 0);
  inherited Destroy;
end;

function SuministroLRDetOperacionIntracomunitaria.GetLROperacionIntracomunitariaTypeArray(Index: Integer): LROperacionIntracomunitariaType;
begin
  Result := FRegistroLRDetOperacionIntracomunitaria[Index];
end;

procedure SuministroLRDetOperacionIntracomunitaria.SetLROperacionIntracomunitariaTypeArray(Index: Integer; const Item: LROperacionIntracomunitariaType);
begin
   FRegistroLRDetOperacionIntracomunitaria[Index] := Item;
end;

function SuministroLRDetOperacionIntracomunitaria.GetLROperacionIntracomunitariaTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRDetOperacionIntracomunitaria) then
    Result := System.Length(FRegistroLRDetOperacionIntracomunitaria)
  else
    Result := 0;
end;

procedure SuministroLRDetOperacionIntracomunitaria.SetLROperacionIntracomunitariaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRDetOperacionIntracomunitaria, Len);
end;

function SuministroLRDetOperacionIntracomunitaria.GetRegistroLRDetOperacionIntracomunitaria(Index: Integer): Array_Of_LROperacionIntracomunitariaType;
begin
  Result := FRegistroLRDetOperacionIntracomunitaria;
end;

procedure SuministroLRDetOperacionIntracomunitaria.SetRegistroLRDetOperacionIntracomunitaria(Index: Integer; const AArray_Of_LROperacionIntracomunitariaType: Array_Of_LROperacionIntracomunitariaType);
begin
  FRegistroLRDetOperacionIntracomunitaria := AArray_Of_LROperacionIntracomunitariaType;
end;

destructor BajaLRDetOperacionIntracomunitaria.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaDetOperacionIntracomunitaria)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaDetOperacionIntracomunitaria[I]);
  System.SetLength(FRegistroLRBajaDetOperacionIntracomunitaria, 0);
  inherited Destroy;
end;

function BajaLRDetOperacionIntracomunitaria.GetLRBajaOperacionIntracomunitariaTypeArray(Index: Integer): LRBajaOperacionIntracomunitariaType;
begin
  Result := FRegistroLRBajaDetOperacionIntracomunitaria[Index];
end;

procedure BajaLRDetOperacionIntracomunitaria.SetLRBajaOperacionIntracomunitariaTypeArray(Index: Integer; const Item: LRBajaOperacionIntracomunitariaType);
begin
   FRegistroLRBajaDetOperacionIntracomunitaria[Index] := Item;
end;

function BajaLRDetOperacionIntracomunitaria.GetLRBajaOperacionIntracomunitariaTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaDetOperacionIntracomunitaria) then
    Result := System.Length(FRegistroLRBajaDetOperacionIntracomunitaria)
  else
    Result := 0;
end;

procedure BajaLRDetOperacionIntracomunitaria.SetLRBajaOperacionIntracomunitariaTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaDetOperacionIntracomunitaria, Len);
end;

function BajaLRDetOperacionIntracomunitaria.GetRegistroLRBajaDetOperacionIntracomunitaria(Index: Integer): Array_Of_LRBajaOperacionIntracomunitariaType;
begin
  Result := FRegistroLRBajaDetOperacionIntracomunitaria;
end;

procedure BajaLRDetOperacionIntracomunitaria.SetRegistroLRBajaDetOperacionIntracomunitaria(Index: Integer; const AArray_Of_LRBajaOperacionIntracomunitariaType: Array_Of_LRBajaOperacionIntracomunitariaType);
begin
  FRegistroLRBajaDetOperacionIntracomunitaria := AArray_Of_LRBajaOperacionIntracomunitariaType;
end;

destructor SuministroLRCobrosMetalico.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRCobrosMetalico)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRCobrosMetalico[I]);
  System.SetLength(FRegistroLRCobrosMetalico, 0);
  inherited Destroy;
end;

function SuministroLRCobrosMetalico.GetLRCobrosMetalicoTypeArray(Index: Integer): LRCobrosMetalicoType;
begin
  Result := FRegistroLRCobrosMetalico[Index];
end;

procedure SuministroLRCobrosMetalico.SetLRCobrosMetalicoTypeArray(Index: Integer; const Item: LRCobrosMetalicoType);
begin
   FRegistroLRCobrosMetalico[Index] := Item;
end;

function SuministroLRCobrosMetalico.GetLRCobrosMetalicoTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRCobrosMetalico) then
    Result := System.Length(FRegistroLRCobrosMetalico)
  else
    Result := 0;
end;

procedure SuministroLRCobrosMetalico.SetLRCobrosMetalicoTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRCobrosMetalico, Len);
end;

function SuministroLRCobrosMetalico.GetRegistroLRCobrosMetalico(Index: Integer): Array_Of_LRCobrosMetalicoType;
begin
  Result := FRegistroLRCobrosMetalico;
end;

procedure SuministroLRCobrosMetalico.SetRegistroLRCobrosMetalico(Index: Integer; const AArray_Of_LRCobrosMetalicoType: Array_Of_LRCobrosMetalicoType);
begin
  FRegistroLRCobrosMetalico := AArray_Of_LRCobrosMetalicoType;
end;

destructor BajaLRCobrosMetalico.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLRBajaCobrosMetalico)-1 do
    System.SysUtils.FreeAndNil(FRegistroLRBajaCobrosMetalico[I]);
  System.SetLength(FRegistroLRBajaCobrosMetalico, 0);
  inherited Destroy;
end;

function BajaLRCobrosMetalico.GetLRBajaCobrosMetalicoTypeArray(Index: Integer): LRBajaCobrosMetalicoType;
begin
  Result := FRegistroLRBajaCobrosMetalico[Index];
end;

procedure BajaLRCobrosMetalico.SetLRBajaCobrosMetalicoTypeArray(Index: Integer; const Item: LRBajaCobrosMetalicoType);
begin
   FRegistroLRBajaCobrosMetalico[Index] := Item;
end;

function BajaLRCobrosMetalico.GetLRBajaCobrosMetalicoTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLRBajaCobrosMetalico) then
    Result := System.Length(FRegistroLRBajaCobrosMetalico)
  else
    Result := 0;
end;

procedure BajaLRCobrosMetalico.SetLRBajaCobrosMetalicoTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLRBajaCobrosMetalico, Len);
end;

function BajaLRCobrosMetalico.GetRegistroLRBajaCobrosMetalico(Index: Integer): Array_Of_LRBajaCobrosMetalicoType;
begin
  Result := FRegistroLRBajaCobrosMetalico;
end;

procedure BajaLRCobrosMetalico.SetRegistroLRBajaCobrosMetalico(Index: Integer; const AArray_Of_LRBajaCobrosMetalicoType: Array_Of_LRBajaCobrosMetalicoType);
begin
  FRegistroLRBajaCobrosMetalico := AArray_Of_LRBajaCobrosMetalicoType;
end;

destructor SuministroLROperacionesSeguros.Destroy;
var
  I: Integer;
begin
  for I := 0 to System.Length(FRegistroLROperacionesSeguros)-1 do
    System.SysUtils.FreeAndNil(FRegistroLROperacionesSeguros[I]);
  System.SetLength(FRegistroLROperacionesSeguros, 0);
  inherited Destroy;
end;

function SuministroLROperacionesSeguros.GetLROperacionesSegurosTypeArray(Index: Integer): LROperacionesSegurosType;
begin
  Result := FRegistroLROperacionesSeguros[Index];
end;

procedure SuministroLROperacionesSeguros.SetLROperacionesSegurosTypeArray(Index: Integer; const Item: LROperacionesSegurosType);
begin
   FRegistroLROperacionesSeguros[Index] := Item;
end;

function SuministroLROperacionesSeguros.GetLROperacionesSegurosTypeArrayLength: Integer;
begin
  if Assigned(FRegistroLROperacionesSeguros) then
    Result := System.Length(FRegistroLROperacionesSeguros)
  else
    Result := 0;
end;

procedure SuministroLROperacionesSeguros.SetLROperacionesSegurosTypeArrayLength(Len: Integer);
begin
  System.SetLength(FRegistroLROperacionesSeguros, Len);
end;

function SuministroLROperacionesSeguros.GetRegistroLROperacionesSeguros(Index: Integer): Array_Of_LROperacionesSegurosType;
begin
  Result := FRegistroLROperacionesSeguros;
end;

procedure SuministroLROperacionesSeguros.SetRegistroLROperacionesSeguros(Index: Integer; const AArray_Of_LROperacionesSegurosType: Array_Of_LROperacionesSegurosType);
begin
  FRegistroLROperacionesSeguros := AArray_Of_LROperacionesSegurosType;
end;

procedure RegisterTypeProc0;
begin
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaAgenciasViajesType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaAgenciasViajesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EstadoEnvioType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'EstadoEnvioType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaVentaBienesConsignaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaOperacionesSegurosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaOperacionesSegurosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaRecibidaBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaRecibidaBajaType');
  RemClassRegistry.RegisterXSClass(LRFiltroInmueblesAdicionalesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroInmueblesAdicionalesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaExpedidaBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaExpedidaBajaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaBienType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaBienType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaRecibidaPagoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaRecibidaPagoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaMetalicoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaMetalicoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaComunitariaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaComunitariaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaRecibidaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaRecibidaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaExpedidaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaExpedidaType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaPagosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaPagosType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaInmueblesAdicionalesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaInmueblesAdicionalesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaMetalicoBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaMetalicoBajaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EstadoRegistroSIIType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'EstadoRegistroSIIType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaCobrosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaCobrosType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaOperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaOperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaAgenciasViajesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ResultadoConsultaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'ResultadoConsultaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(IndicadorPaginacionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'IndicadorPaginacionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaOperacionesSegurosBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaOperacionesSegurosBajaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaAgenciasViajesBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaAgenciasViajesBajaType');
  RemClassRegistry.RegisterXSClass(TipoDesglose, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'TipoDesglose');
  RemClassRegistry.RegisterXSInfo(TypeInfo(FacturaARType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturaARType');
  RemClassRegistry.RegisterXSClass(TipoDesglose2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'TipoDesglose2', 'TipoDesglose');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaVentaBienesConsignaBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaVentaBienesConsignaBajaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaComunitariaBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaComunitariaBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaDetOperIntracomunitariaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaDetOperIntracomunitariaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RespuestaBienBajaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'Array_Of_RespuestaBienBajaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_DetalleIVARecibida2Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_DetalleIVARecibida2Type');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_DetalleIVARecibidaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_DetalleIVARecibidaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_DetalleExentaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_DetalleExentaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_IDFacturaARType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_IDFacturaARType');
  RemClassRegistry.RegisterXSClass(FacturasAgrupadas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturasAgrupadas');
  RemClassRegistry.RegisterXSClass(FacturasRectificadas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturasRectificadas');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_DatosInmuebleType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_DatosInmuebleType');
  RemClassRegistry.RegisterXSClass(DatosInmueble, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'DatosInmueble');
  RemClassRegistry.RegisterXSClass(DatosInmueble2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'DatosInmueble2', 'DatosInmueble');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_DetalleIVAEmitidaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_DetalleIVAEmitidaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRFacturasRecibidasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRFacturasRecibidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaRecibidasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaRecibidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBienesInversionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBienesInversionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_DetalleIVAEmitidaPrestacionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Array_Of_DetalleIVAEmitidaPrestacionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRfacturasEmitidasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRfacturasEmitidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaExpedidasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaExpedidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaCobrosMetalicoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaCobrosMetalicoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaDetOperIntracomunitariasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaBienesType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaBienesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaBienesInversionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaBienesInversionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaRecibidasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaRecibidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaOperacionIntracomunitariaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaOperacionIntracomunitariaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaFactInformadasAgrupadasClienteType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaFactInformadasClienteType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaFactInformadasClienteType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaEmitidasType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaEmitidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRVentaBienesConsignaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaVentaBienesConsignaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaCobrosMetalicoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaCobrosMetalicoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LROperacionesSegurosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LROperacionesSegurosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaRegistroLROperacionesSegurosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaRegistroLROperacionesSegurosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRAgenciasViajesType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRAgenciasViajesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRBajaAgenciasViajesType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRBajaAgenciasViajesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LRCobrosMetalicoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LRCobrosMetalicoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_LROperacionIntracomunitariaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'Array_Of_LROperacionIntracomunitariaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaOperacionesSegurosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaOperacionesSegurosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaInmueblesAdicionalesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaCobrosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaCobrosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ClaveDeclarado), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClaveDeclarado');
  RemClassRegistry.RegisterXSInfo(TypeInfo(CountryMiembroType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CountryMiembroType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TipoOperacion), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoOperacion');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TipoOperacionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoOperacionType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_01', '01');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_02', '02');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_03', '03');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_04', '04');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_05', '05');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_06', '06');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_07', '07');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_08', '08');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_09', '09');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_10', '10');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_11', '11');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoOperacionType), '_12', '12');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaPagosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaPagosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TipoClaveDeclaranteType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoClaveDeclaranteType');
  RemClassRegistry.RegisterXSClass(RespuestaVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(LRVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaAgenciasViajesType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaAgenciasViajesType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(MedioPagoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'MedioPagoType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(MedioPagoType), '_01', '01');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(MedioPagoType), '_02', '02');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(MedioPagoType), '_03', '03');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(MedioPagoType), '_04', '04');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(MedioPagoType), '_05', '05');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'Array_Of_RegistroRespuestaConsultaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EstadoRegistroType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'EstadoRegistroType');
  RemClassRegistry.RegisterXSClass(InversionSujetoPasivo, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'InversionSujetoPasivo');
  RemClassRegistry.RegisterXSClass(DesgloseIVA, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DesgloseIVA');
  RemClassRegistry.RegisterXSClass(TipoSinDesgloseType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoSinDesgloseType');
  RemClassRegistry.RegisterXSClass(TipoConDesgloseType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoConDesgloseType');
  RemClassRegistry.RegisterXSClass(DesgloseFacturaRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DesgloseFacturaRecibidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(CausaExencionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CausaExencionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(DeducirEnPeriodoPosteriorType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DeducirEnPeriodoPosteriorType');
  RemClassRegistry.RegisterXSClass(DatosInmueble3, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DatosInmueble3', 'DatosInmueble');
  RemClassRegistry.RegisterXSInfo(TypeInfo(SimplificadaCualificadaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'SimplificadaCualificadaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(MacrodatoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'MacrodatoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(CompletaSinDestinatarioType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CompletaSinDestinatarioType');
  RemClassRegistry.RegisterXSClass(TipoDesglose3, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoDesglose3', 'TipoDesglose');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EmitidaPorTercerosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'EmitidaPorTercerosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(VariosDestinatariosType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'VariosDestinatariosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(CuponType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CuponType');
  RemClassRegistry.RegisterXSClass(DesgloseIVA2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DesgloseIVA2', 'DesgloseIVA');
  RemClassRegistry.RegisterXSClass(Exenta, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Exenta');
  RemClassRegistry.RegisterXSClass(Exenta2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Exenta2', 'Exenta');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TipoOperacionSujetaNoExentaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoOperacionSujetaNoExentaType');
end;

procedure RegisterTypeProc1;
begin
  RemClassRegistry.RegisterXSClass(NoExenta, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'NoExenta');
  RemClassRegistry.RegisterXSClass(NoExenta2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'NoExenta2', 'NoExenta');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EstadoRegistroSIIType2), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'EstadoRegistroSIIType2', 'EstadoRegistroSIIType');
  RemClassRegistry.RegisterXSClass(DesgloseIVA3, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DesgloseIVA3', 'DesgloseIVA');
  RemClassRegistry.RegisterXSInfo(TypeInfo(CountryType2), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CountryType2');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(CountryType2), 'DO_', 'DO');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(CountryType2), 'IN_', 'IN');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(CountryType2), 'IS_', 'IS');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(CountryType2), 'AS_', 'AS');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(CountryType2), 'TO_', 'TO');
  RemClassRegistry.RegisterXSInfo(TypeInfo(BienInversionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'BienInversionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(SituacionInmuebleType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'SituacionInmuebleType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(SituacionInmuebleType), '_1', '1');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(SituacionInmuebleType), '_2', '2');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(SituacionInmuebleType), '_3', '3');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(SituacionInmuebleType), '_4', '4');
  RemClassRegistry.RegisterXSClass(SujetaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'SujetaType');
  RemClassRegistry.RegisterXSClass(SujetaPrestacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'SujetaPrestacionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(PersonaFisicaJuridicaIDTypeType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PersonaFisicaJuridicaIDTypeType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(PersonaFisicaJuridicaIDTypeType), '_02', '02');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(PersonaFisicaJuridicaIDTypeType), '_03', '03');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(PersonaFisicaJuridicaIDTypeType), '_04', '04');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(PersonaFisicaJuridicaIDTypeType), '_05', '05');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(PersonaFisicaJuridicaIDTypeType), '_06', '06');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(PersonaFisicaJuridicaIDTypeType), '_07', '07');
  RemClassRegistry.RegisterXSClass(TipoSinDesglosePrestacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoSinDesglosePrestacionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(IdOperacionesTrascendenciaTributariaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IdOperacionesTrascendenciaTributariaType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_01', '01');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_02', '02');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_03', '03');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_04', '04');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_05', '05');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_06', '06');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_07', '07');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_08', '08');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_09', '09');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_10', '10');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_11', '11');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_12', '12');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_13', '13');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_14', '14');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_15', '15');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(IdOperacionesTrascendenciaTributariaType), '_16', '16');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax20Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax20Type');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ReferenciaCatastralType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ReferenciaCatastralType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax500Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax500Type');
  RemClassRegistry.RegisterXSClass(DatosInmuebleType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DatosInmuebleType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax34Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax34Type');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax150Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax150Type');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax40Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax40Type');
  RemClassRegistry.RegisterXSInfo(TypeInfo(PlazoOperacion), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PlazoOperacion');
  RemClassRegistry.RegisterXSClass(RespuestaComunBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaComunBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaVentaBienesConsigna, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaVentaBienesConsigna');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaIMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaIMetalicoType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaCobrosMetalico, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaCobrosMetalico');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaFRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaFRecibidasType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaFacturasRecibidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaFacturasRecibidas');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaOComunitariasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaOComunitariasType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaDetOperacionesIntracomunitarias, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaDetOperacionesIntracomunitarias');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaBienesInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaBienesInversionType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaBienesInversion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaBienesInversion');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaOperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaOperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaOperacionesSeguros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaOperacionesSeguros');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaAgenciasViajes, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaAgenciasViajes');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaFEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaFEmitidasType');
  RemClassRegistry.RegisterSerializeOptions(RespuestaLRBajaFEmitidasType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaFacturasEmitidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaFacturasEmitidas');
  RemClassRegistry.RegisterXSClass(RespuestaLRBajaFRecibidasPagosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBajaFRecibidasPagosType');
  RemClassRegistry.RegisterXSClass(RespuestaComunAltaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaComunAltaType');
  RemClassRegistry.RegisterXSClass(RespuestaLROComunitariasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLROComunitariasType');
  RemClassRegistry.RegisterXSClass(RespuestaLRDetOperacionesIntracomunitarias, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRDetOperacionesIntracomunitarias');
  RemClassRegistry.RegisterXSClass(RespuestaLRAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(RespuestaLRAgenciasViajes, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRAgenciasViajes');
  RemClassRegistry.RegisterXSClass(RespuestaLRIMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRIMetalicoType');
  RemClassRegistry.RegisterXSClass(RespuestaLRCobrosMetalico, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRCobrosMetalico');
  RemClassRegistry.RegisterXSClass(RespuestaLRBienesInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBienesInversionType');
  RemClassRegistry.RegisterXSClass(RespuestaLRBienesInversion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRBienesInversion');
  RemClassRegistry.RegisterXSClass(RespuestaLRFRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRFRecibidasType');
  RemClassRegistry.RegisterXSClass(RespuestaLRFacturasRecibidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRFacturasRecibidas');
  RemClassRegistry.RegisterXSClass(RespuestaLRVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(RespuestaLRVentaBienesConsigna, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRVentaBienesConsigna');
  RemClassRegistry.RegisterXSClass(RespuestaLRFEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRFEmitidasType');
  RemClassRegistry.RegisterSerializeOptions(RespuestaLRFEmitidasType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(RespuestaLRFacturasEmitidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLRFacturasEmitidas');
  RemClassRegistry.RegisterXSClass(RespuestaLROperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLROperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(RespuestaLROperacionesSeguros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaLROperacionesSeguros');
  RemClassRegistry.RegisterXSClass(RegistroSii, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'RegistroSii');
  RemClassRegistry.RegisterXSInfo(TypeInfo(NIFType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'NIFType');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Timestamp), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Timestamp');
  RemClassRegistry.RegisterXSClass(DatosPresentacion2Type, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DatosPresentacion2Type');
  RemClassRegistry.RegisterXSClass(RegistroSiiImputacion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'RegistroSiiImputacion');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax120Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax120Type');
  RemClassRegistry.RegisterXSClass(PersonaFisicaJuridicaUnicaESType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PersonaFisicaJuridicaUnicaESType');
  RemClassRegistry.RegisterXSClass(ContraparteConsultaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ContraparteConsultaType');
  RemClassRegistry.RegisterXSClass(PersonaFisicaJuridicaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PersonaFisicaJuridicaType');
  RemClassRegistry.RegisterXSClass(DepositoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DepositoType');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura2', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura3, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura3', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura4, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura4', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura5, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura5', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura6, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura6', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSInfo(TypeInfo(YearType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'YearType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TipoPeriodoType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TipoPeriodoType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_01', '01');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_02', '02');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_03', '03');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_04', '04');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_05', '05');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_06', '06');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_07', '07');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_08', '08');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_09', '09');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_10', '10');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_11', '11');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_12', '12');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_0A', '0A');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_1T', '1T');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_2T', '2T');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_3T', '3T');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(TipoPeriodoType), '_4T', '4T');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoImputacion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PeriodoImputacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion2', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion3, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion3', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion4, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion4', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion5, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion5', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion6, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion6', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion7, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion7', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion8, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion8', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion9, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'PeriodoLiquidacion9', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion10, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'PeriodoLiquidacion10', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(PeriodoLiquidacion11, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'PeriodoLiquidacion11', 'PeriodoLiquidacion');
  RemClassRegistry.RegisterXSClass(ConsultaInformacion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ConsultaInformacion');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaFacturaCobrosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaFacturaCobrosType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRVentaBVType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRVentaBVType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRVentaBienesConsigna, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRVentaBienesConsigna');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaInmueblesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaInmueblesType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaInmueblesAdicionalesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaInmueblesAdicionalesType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaInmueblesAdicionales, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaInmueblesAdicionales');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaFacturaPagosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaFacturaPagosType');
  RemClassRegistry.RegisterXSClass(SuministroInformacion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'SuministroInformacion');
  RemClassRegistry.RegisterXSClass(SuministroInformacionBaja, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'SuministroInformacionBaja');
  RemClassRegistry.RegisterXSClass(PersonaFisicaJuridicaESType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'PersonaFisicaJuridicaESType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ClaveTipoComunicacionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClaveTipoComunicacionType');
  RemClassRegistry.RegisterXSClass(DatosPresentacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DatosPresentacionType');
  RemClassRegistry.RegisterXSClass(ConsultaInformacionCliente, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ConsultaInformacionCliente');
end;

procedure RegisterTypeProc2;
begin
  RemClassRegistry.RegisterXSInfo(TypeInfo(VersionSiiType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'VersionSiiType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(VersionSiiType), '_1_1', '1.1');
  RemClassRegistry.RegisterXSClass(CabeceraConsultaSiiCliente, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CabeceraConsultaSiiCliente');
  RemClassRegistry.RegisterXSClass(CabeceraSii, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CabeceraSii');
  RemClassRegistry.RegisterXSClass(CabeceraConsultaSii, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CabeceraConsultaSii');
  RemClassRegistry.RegisterXSClass(CabeceraSiiBaja, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'CabeceraSiiBaja');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura7, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura7', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura8, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura8', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(FacturasAgrupadas2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'FacturasAgrupadas2', 'FacturasAgrupadas');
  RemClassRegistry.RegisterXSClass(FacturasRectificadas2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'FacturasRectificadas2', 'FacturasRectificadas');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ClaveTipoFacturaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClaveTipoFacturaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ClaveTipoRectificativaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClaveTipoRectificativaType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(ClaveTipoRectificativaType), '_', ' ');
  RemClassRegistry.RegisterXSInfo(TypeInfo(fecha), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'fecha');
  RemClassRegistry.RegisterXSClass(RangoFechaPresentacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'RangoFechaPresentacionType');
  RemClassRegistry.RegisterXSClass(RangoFechaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'RangoFechaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Tipo2_2Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Tipo2_2Type', 'Tipo2.2Type');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ImporteSgn12_2Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ImporteSgn12_2Type', 'ImporteSgn12.2Type');
  RemClassRegistry.RegisterXSClass(DesgloseRectificacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DesgloseRectificacionType');
  RemClassRegistry.RegisterXSClass(NoSujetaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'NoSujetaType');
  RemClassRegistry.RegisterXSClass(DetalleIVAEmitidaPrestacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DetalleIVAEmitidaPrestacionType');
  RemClassRegistry.RegisterXSClass(DetalleIVARecibidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DetalleIVARecibidaType');
  RemClassRegistry.RegisterXSClass(DetalleExentaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DetalleExentaType');
  RemClassRegistry.RegisterXSClass(DetalleIVAEmitidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DetalleIVAEmitidaType');
  RemClassRegistry.RegisterXSClass(DetalleIVARecibida2Type, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DetalleIVARecibida2Type');
  RemClassRegistry.RegisterXSClass(InfoExpedicionRecepcionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'InfoExpedicionRecepcionType');
  RemClassRegistry.RegisterXSClass(DestinoFinalExpedRecepType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DestinoFinalExpedRecepType');
  RemClassRegistry.RegisterXSClass(DatosPagoCobroType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'DatosPagoCobroType');
  RemClassRegistry.RegisterXSClass(RespuestaCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaCobrosMetalicoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax60Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax60Type');
  RemClassRegistry.RegisterXSClass(IdRegistroDeclaradoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IdRegistroDeclaradoType');
  RemClassRegistry.RegisterXSClass(IdRegistroExpInicialType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IdRegistroExpInicialType');
  RemClassRegistry.RegisterXSClass(ClavePaginacion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ClavePaginacion');
  RemClassRegistry.RegisterXSClass(LRBajaVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextMax15Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextMax15Type');
  RemClassRegistry.RegisterXSClass(BienDeInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'BienDeInversionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(RegPrevioGGEEoREDEMEoCompetenciaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'RegPrevioGGEEoREDEMEoCompetenciaType');
  RemClassRegistry.RegisterXSClass(FacturaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'FacturaType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(FacturaType), 'FacturaSimplificadaArticulos7_2_7_3', '[ExtName="FacturaSimplificadaArticulos7.2_7.3"]');
  RemClassRegistry.RegisterXSClass(FacturaRecibidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'FacturaRecibidaType');
  RemClassRegistry.RegisterXSClass(FacturaExpedidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'FacturaExpedidaType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(FacturaExpedidaType), 'FacturaSinIdentifDestinatarioAritculo6_1_d', '[ExtName="FacturaSinIdentifDestinatarioAritculo6.1.d"]');
  RemClassRegistry.RegisterXSClass(VentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'VentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(OperacionIntracomunitariaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'OperacionIntracomunitariaType');
  RemClassRegistry.RegisterXSClass(FacturaRespuestaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturaRespuestaType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(FacturaRespuestaType), 'FacturaSimplificadaArticulos7_2_7_3', '[ExtName="FacturaSimplificadaArticulos7.2_7.3"]');
  RemClassRegistry.RegisterXSClass(FacturaRespuestaInformadaClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturaRespuestaInformadaClienteType');
  RemClassRegistry.RegisterXSClass(FacturaRespuestaInformadaProveedorType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturaRespuestaInformadaProveedorType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(FacturaRespuestaInformadaProveedorType), 'FacturaSinIdentifDestinatarioAritculo6_1_d', '[ExtName="FacturaSinIdentifDestinatarioAritculo6.1.d"]');
  RemClassRegistry.RegisterXSClass(FacturaRespuestaRecibidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturaRespuestaRecibidaType');
  RemClassRegistry.RegisterXSClass(FacturaRespuestaExpedidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'FacturaRespuestaExpedidaType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(FacturaRespuestaExpedidaType), 'FacturaSinIdentifDestinatarioAritculo6_1_d', '[ExtName="FacturaSinIdentifDestinatarioAritculo6.1.d"]');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura9, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura9', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDEmisorFactura10, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDEmisorFactura10', 'IDEmisorFactura');
  RemClassRegistry.RegisterXSClass(IDOtroType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDOtroType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(TextoIDFacturaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'TextoIDFacturaType');
  RemClassRegistry.RegisterXSClass(ClavePaginacionClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClavePaginacionClienteType');
  RemClassRegistry.RegisterXSClass(IDFacturaConsulta2Type, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaConsulta2Type');
  RemClassRegistry.RegisterXSClass(IDFacturaExpedidaBCType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaExpedidaBCType');
  RemClassRegistry.RegisterXSClass(IDFacturaARType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaARType');
  RemClassRegistry.RegisterXSClass(IDFacturaExpedidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaExpedidaType');
  RemClassRegistry.RegisterXSClass(IDFacturaComunitariaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaComunitariaType');
  RemClassRegistry.RegisterXSClass(IDFacturaRecibidaNombreBCType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaRecibidaNombreBCType');
  RemClassRegistry.RegisterXSClass(IDFacturaRecibidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaRecibidaType');
  RemClassRegistry.RegisterXSClass(ClavePaginacionBienType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClavePaginacionBienType');
  RemClassRegistry.RegisterXSClass(ClavePaginacionProveedorType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClavePaginacionProveedorType');
  RemClassRegistry.RegisterXSClass(IDFacturaConsulta1Type, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaConsulta1Type');
  RemClassRegistry.RegisterXSClass(IDFacturaImputacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'IDFacturaImputacionType');
  RemClassRegistry.RegisterXSClass(ConsultaInmueblesAdicionalesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaInmueblesAdicionalesType');
  RemClassRegistry.RegisterXSClass(LRConsultaVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(LRConsultaLROperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaLROperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(ConsultaCobrosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaCobrosType');
  RemClassRegistry.RegisterXSClass(ConsultaPagosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaPagosType');
  RemClassRegistry.RegisterXSClass(LRFiltroPagosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroPagosType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaCobrosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaCobrosType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaCobros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaCobros');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaPagosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaPagosType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaPagos, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaPagos');
  RemClassRegistry.RegisterXSClass(LRFiltroCobrosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroCobrosType');
  RemClassRegistry.RegisterXSClass(LRConsultaRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaRecibidasType');
  RemClassRegistry.RegisterXSClass(ConsultaLRFacturasRecibidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRFacturasRecibidas');
  RemClassRegistry.RegisterXSClass(LRConsultaEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaEmitidasType');
  RemClassRegistry.RegisterSerializeOptions(LRConsultaEmitidasType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(ConsultaLRFacturasEmitidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRFacturasEmitidas');
  RemClassRegistry.RegisterXSClass(ClavePaginacion2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ClavePaginacion2', 'ClavePaginacion');
  RemClassRegistry.RegisterXSClass(ClavePaginacion3, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ClavePaginacion3', 'ClavePaginacion');
  RemClassRegistry.RegisterXSClass(LRConsultaDetOperIntracomunitariasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaDetOperIntracomunitariasType');
  RemClassRegistry.RegisterXSClass(ConsultaLRDetOperIntracomunitarias, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRDetOperIntracomunitarias');
  RemClassRegistry.RegisterXSClass(LRConsultaCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaCobrosMetalicoType');
  RemClassRegistry.RegisterXSClass(ConsultaLRCobrosMetalico, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRCobrosMetalico');
  RemClassRegistry.RegisterXSClass(LRConsultaAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(ConsultaLRFactInformadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRFactInformadasClienteType');
  RemClassRegistry.RegisterSerializeOptions(ConsultaLRFactInformadasClienteType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(ConsultaLRFactInformadasCliente, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRFactInformadasCliente');
  RemClassRegistry.RegisterXSClass(ConsultaLRFactInformadasAgrupadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRFactInformadasAgrupadasClienteType');
  RemClassRegistry.RegisterSerializeOptions(ConsultaLRFactInformadasAgrupadasClienteType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(ConsultaLRFactInformadasAgrupadasCliente, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRFactInformadasAgrupadasCliente');
  RemClassRegistry.RegisterXSClass(LRConsultaBienesInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRConsultaBienesInversionType');
  RemClassRegistry.RegisterXSClass(ConsultaLRBienesInversion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRBienesInversion');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasAgrupadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasAgrupadasClienteType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasClienteType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaFactInformadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaFactInformadasClienteType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFactInformadasAgrupadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFactInformadasAgrupadasClienteType');
  RemClassRegistry.RegisterSerializeOptions(RespuestaConsultaLRFactInformadasAgrupadasClienteType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFactInformadasAgrupadasCliente, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFactInformadasAgrupadasCliente');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaCobrosMetalicoType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaBienesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaBienesType');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaDetOperIntracomunitariasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaDetOperIntracomunitariasType');
  RemClassRegistry.RegisterXSClass(ConsultaPagos, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaPagos');
  RemClassRegistry.RegisterXSClass(ConsultaLROperacionesSeguros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLROperacionesSeguros');
  RemClassRegistry.RegisterXSClass(ConsultaLRConsultaVentaBienesConsigna, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRConsultaVentaBienesConsigna');
end;

procedure RegisterTypeProc3;
begin
  RemClassRegistry.RegisterXSClass(ConsultaLRAgenciasViajes, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaLRAgenciasViajes');
  RemClassRegistry.RegisterXSClass(ConsultaCobros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaCobros');
  RemClassRegistry.RegisterXSClass(ConsultaInmueblesAdicionales, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ConsultaInmueblesAdicionales');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaRecibidasType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFactInformadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFactInformadasClienteType');
  RemClassRegistry.RegisterSerializeOptions(RespuestaConsultaLRFactInformadasClienteType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFactInformadasCliente, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFactInformadasCliente');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasEmitidasType');
  RemClassRegistry.RegisterSerializeOptions(RespuestaConsultaLRFacturasEmitidasType, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasEmitidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasEmitidas');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasRecibidasType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRFacturasRecibidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRFacturasRecibidas');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRDetOperIntracomunitariasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRDetOperIntracomunitariasType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRDetOperIntracomunitarias, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRDetOperIntracomunitarias');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRAgenciasViajes, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRAgenciasViajes');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRCobrosMetalicoType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRCobrosMetalico, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRCobrosMetalico');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRBienesInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRBienesInversionType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLRBienesInversion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLRBienesInversion');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLROperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLROperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(RespuestaConsultaLROperacionesSeguros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaConsultaLROperacionesSeguros');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaEmitidasType');
  RemClassRegistry.RegisterXSClass(LRBajaAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(LRCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRCobrosMetalicoType');
  RemClassRegistry.RegisterXSClass(LRBajaCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaCobrosMetalicoType');
  RemClassRegistry.RegisterXSClass(LRBienesInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBienesInversionType');
  RemClassRegistry.RegisterXSClass(LRBajaBienesInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaBienesInversionType');
  RemClassRegistry.RegisterXSClass(LRAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(LRBajaOperacionIntracomunitariaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaOperacionIntracomunitariaType');
  RemClassRegistry.RegisterXSClass(SuministroLRFacturasEmitidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRFacturasEmitidas');
  RemClassRegistry.RegisterSerializeOptions(SuministroLRFacturasEmitidas, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(BajaLRFacturasEmitidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRFacturasEmitidas');
  RemClassRegistry.RegisterSerializeOptions(BajaLRFacturasEmitidas, [xoLiteralParam]);
  RemClassRegistry.RegisterXSClass(LROperacionIntracomunitariaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LROperacionIntracomunitariaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(FacturaModificadaType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'FacturaModificadaType');
  RemClassRegistry.RegisterXSClass(LRFiltroCobrosMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroCobrosMetalicoType');
  RemClassRegistry.RegisterXSClass(LRFiltroAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(LRFiltroVentaBienesConsignaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroVentaBienesConsignaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EstadoCuadreType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'EstadoCuadreType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreType), '_1', '1');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreType), '_2', '2');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreType), '_3', '3');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreType), '_4', '4');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreType), '_5', '5');
  RemClassRegistry.RegisterXSClass(EstadoFacturaImputacionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'EstadoFacturaImputacionType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(EstadoCuadreImputacionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'EstadoCuadreImputacionType');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreImputacionType), '_3', '3');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreImputacionType), '_4', '4');
  RemClassRegistry.RegisterExternalPropName(TypeInfo(EstadoCuadreImputacionType), '_5', '5');
  RemClassRegistry.RegisterXSInfo(TypeInfo(Tipo10Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'Tipo10Type');
  RemClassRegistry.RegisterXSClass(RegistroRespuestaConsultaFactInformadasAgrupadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RegistroRespuestaConsultaFactInformadasAgrupadasClienteType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ImporteSgn14_2Type), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ImporteSgn14_2Type', 'ImporteSgn14.2Type');
  RemClassRegistry.RegisterXSClass(DatosDescuadreContraparteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'DatosDescuadreContraparteType');
  RemClassRegistry.RegisterXSClass(LRBajaExpedidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaExpedidasType');
  RemClassRegistry.RegisterXSClass(LRFacturasRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRFacturasRecibidasType');
  RemClassRegistry.RegisterXSClass(LRBajaRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaRecibidasType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ClaveOperacionType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ClaveOperacionType');
  RemClassRegistry.RegisterXSClass(LRBajaRegistroLROperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRBajaRegistroLROperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(LROperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LROperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(RespuestaOperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'RespuestaOperacionesSegurosType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ErrorDetalleType), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'ErrorDetalleType');
  RemClassRegistry.RegisterXSClass(RegistroDuplicadoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroInformacion.xsd', 'RegistroDuplicadoType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ErrorDetalleType2), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'ErrorDetalleType2', 'ErrorDetalleType');
  RemClassRegistry.RegisterXSClass(RespuestaComunitariaBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaComunitariaBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaVentaBienesConsignaBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaVentaBienesConsignaBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaRecibidaBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaRecibidaBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaExpedidaBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaExpedidaBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaBienBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaBienBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaOperacionesSegurosBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaOperacionesSegurosBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaAgenciasViajesBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaAgenciasViajesBajaType');
  RemClassRegistry.RegisterXSClass(RespuestaMetalicoBajaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaMetalicoBajaType');
  RemClassRegistry.RegisterXSInfo(TypeInfo(ErrorDetalleType3), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'ErrorDetalleType3', 'ErrorDetalleType');
  RemClassRegistry.RegisterXSClass(EstadoFactura2Type, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'EstadoFactura2Type');
  RemClassRegistry.RegisterXSClass(EstadoFacturaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaConsultaLR.xsd', 'EstadoFacturaType');
  RemClassRegistry.RegisterXSClass(RespuestaComunitariaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaComunitariaType');
  RemClassRegistry.RegisterXSClass(RespuestaBienType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaBienType');
  RemClassRegistry.RegisterXSClass(RespuestaMetalicoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaMetalicoType');
  RemClassRegistry.RegisterXSClass(RespuestaRecibidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaRecibidaType');
  RemClassRegistry.RegisterXSClass(RespuestaExpedidaType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaExpedidaType');
  RemClassRegistry.RegisterXSClass(RespuestaRecibidaPagoType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaRecibidaPagoType');
  RemClassRegistry.RegisterXSClass(RespuestaVentaBienesConsignaType2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaVentaBienesConsignaType2', 'RespuestaVentaBienesConsignaType');
  RemClassRegistry.RegisterXSClass(RespuestaOperacionesSegurosType2, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaOperacionesSegurosType2', 'RespuestaOperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(RespuestaAgenciasViajesType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/RespuestaSuministro.xsd', 'RespuestaAgenciasViajesType');
  RemClassRegistry.RegisterXSClass(LRfacturasEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'LRfacturasEmitidasType');
  RemClassRegistry.RegisterXSClass(LRFiltroFactInformadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroFactInformadasClienteType');
  RemClassRegistry.RegisterXSClass(LRFiltroFactInformadasAgrupadasClienteType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroFactInformadasAgrupadasClienteType');
  RemClassRegistry.RegisterXSClass(LRFiltroFactInformadasProveedorType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroFactInformadasProveedorType');
  RemClassRegistry.RegisterXSClass(SuministroLRVentaBienesConsigna, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRVentaBienesConsigna');
  RemClassRegistry.RegisterXSClass(BajaLRVentaBienesConsigna, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRVentaBienesConsigna');
  RemClassRegistry.RegisterXSClass(LRFiltroEmitidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroEmitidasType');
  RemClassRegistry.RegisterXSClass(LRFiltroDetOperIntracomunitariasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroDetOperIntracomunitariasType');
  RemClassRegistry.RegisterXSClass(LRFiltroOperacionesSegurosType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroOperacionesSegurosType');
  RemClassRegistry.RegisterXSClass(ClavePaginacion4, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'ClavePaginacion4', 'ClavePaginacion');
  RemClassRegistry.RegisterXSClass(LRFiltroFactInformadasAgrupadasProveedorType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroFactInformadasAgrupadasProveedorType');
  RemClassRegistry.RegisterXSClass(LRFiltroRecibidasType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroRecibidasType');
  RemClassRegistry.RegisterXSClass(LRFiltroBienInversionType, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/ConsultaLR.xsd', 'LRFiltroBienInversionType');
  RemClassRegistry.RegisterXSClass(BajaLRBienesInversion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRBienesInversion');
  RemClassRegistry.RegisterXSClass(SuministroLRAgenciasViajes, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRAgenciasViajes');
  RemClassRegistry.RegisterXSClass(BajaLRAgenciasViajes, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRAgenciasViajes');
  RemClassRegistry.RegisterXSClass(SuministroLRFacturasRecibidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRFacturasRecibidas');
  RemClassRegistry.RegisterXSClass(BajaLRFacturasRecibidas, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRFacturasRecibidas');
  RemClassRegistry.RegisterXSClass(SuministroLRBienesInversion, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRBienesInversion');
  RemClassRegistry.RegisterXSClass(BajaLROperacionesSeguros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLROperacionesSeguros');
  RemClassRegistry.RegisterXSClass(SuministroLRDetOperacionIntracomunitaria, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRDetOperacionIntracomunitaria');
  RemClassRegistry.RegisterXSClass(BajaLRDetOperacionIntracomunitaria, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRDetOperacionIntracomunitaria');
  RemClassRegistry.RegisterXSClass(SuministroLRCobrosMetalico, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLRCobrosMetalico');
  RemClassRegistry.RegisterXSClass(BajaLRCobrosMetalico, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'BajaLRCobrosMetalico');
  RemClassRegistry.RegisterXSClass(SuministroLROperacionesSeguros, 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroLR.xsd', 'SuministroLROperacionesSeguros');
end;

procedure RegisterTypeProc4;
begin
end;

initialization
  { siiSOAP }
  InvRegistry.RegisterInterface(TypeInfo(siiSOAP), 'https://www2.agenciatributaria.gob.es/static_files/common/internet/dep/aplicaciones/es/aeat/ssii/fact/ws/SuministroFactEmitidas.wsdl', 'UTF-8');
  InvRegistry.RegisterDefaultSOAPAction(TypeInfo(siiSOAP), '');
  InvRegistry.RegisterInvokeOptions(TypeInfo(siiSOAP), ioDocument);
  InvRegistry.RegisterInvokeOptions(TypeInfo(siiSOAP), ioLiteral);
  RegisterTypeProc0;
  RegisterTypeProc1;
  RegisterTypeProc2;
  RegisterTypeProc3;

end.